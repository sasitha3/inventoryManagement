<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ifs.Fnd.Windows.Forms.CommonControls</name>
    </assembly>
    <members>
        <member name="T:Ifs.Fnd.Windows.Forms.FndActionPanel">
            <summary>
            This class is the implementation of the action panels which are to be displayed in the Right Hand side 
            of the navigator features.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndPanel">
            <summary>
            Extends the <see cref="T:System.Windows.Forms.Panel"/> control
            with IFS-specific behavior. 
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndPanel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndPanel.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndPanel class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndPanel.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Raises the ReadOnlyChanged event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndPanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndPanel.CreateParams">
            <summary>
            Overrides the CreateParams property to ensure that the
            correct Windows style is applied when the user control is
            hosted in a RTL environment.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndPanel.ReadOnlyChanged">
            <summary>
            Occurs when the value of the ReadOnly property has changed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndPanel.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the panel is read-only.
            </summary>
            <value>
            <b>true</b> if the panel is read-only; otherwise, <b>false</b>. The default is <b>false</b>.
            </value>
            <remarks>
            This property is used by the framework to set the udpdatable state of the control when the control is data bound. 
            In such a situation setting this property at design time has no effect. To control the read-only behaviour even when 
            the control is data bound, first set the <see cref="P:Ifs.Fnd.Windows.Forms.FndPanel.AutoHandleUpdatable"/> property to <b>false</b>.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndPanel.Updatable">
            <summary>
            Gets or sets a value indicating whether the control is updatable or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndPanel.AutoHandleUpdatable">
            <summary>
            Gets or sets a value indicating whether the updatable state of the control
            is automatically handled or not.
            Note that this is only valid when the control is data bound.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndActionPanel.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndActionPanel"/> control.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndActionPanel.Dispose(System.Boolean)">
            <summary>
            Removes all allocated resources
            </summary>
            <param name="disposing">True if the dispose should take place.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndActionPanel.OnHandleCreated(System.EventArgs)">
            <summary>
            Register control for themeing
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndActionPanel.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Specifies the bounds of the control
            </summary>
            <param name="x">The X Coordinate</param>
            <param name="y">The Y Coordinate</param>
            <param name="width">The width. This will always be 200 for the FndActionPanel</param>
            <param name="height">The height.</param>
            <param name="specified">The bounds of the control</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndActionPanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndActionPanel.SetTheme">
            <summary>
            Fetches and sets the values from the IFS Themes.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndActionPanel.UseThemes">
            <summary>
            Gets or sets a value stating whether themes should be used.
            </summary>
            <value>
            True if the themes should be used, false otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndActionPanel.HeaderBackColor">
            <summary>
            Gets or sets the Background Color of the header.
            </summary>
            <value>
            The background color of the header.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndActionPanel.HeaderForeColor">
            <summary>
            Gets or sets the foreground Color of the header.
            </summary>
            <value>
            The foreground color of the header.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndActionPanel.HeaderFont">
            <summary>
            Gets or sets the font of the header.
            </summary>
            <value>
            The font of the header
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndActionPanel.Title">
            <summary>
            Gets or sets the title of the action panel.
            </summary>
            <value>
            The title of the action panel.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndActionPanel.BackColor">
            <summary>
            Gets or sets the Background Color.
            </summary>
            <value>
            The background color.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndActionPanel.ForeColor">
            <summary>
            Gets or sets the Foreground Color.
            </summary>
            <value>
            The Foreground color.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndActionPanel.Font">
            <summary>
            Gets or sets the font of the control.
            </summary>
            <value>
            The font of the control
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.AddressControl.Address">
            <summary>
            Contains information about an address
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.Address.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.Address"/> class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.Address.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed Event.
            </summary>
            <param name="e">Event Arguments.</param>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.AddressControl.Address.Changed">
            <summary>
            Raised when any value in this control has changed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.AddressControl.Address.Country">
            <summary>
            Gets or sets the country.
            </summary>
            <value>The country.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.AddressControl.Address.AddressLine1">
            <summary>
            Gets or sets the 1st address line.
            </summary>
            <value>The 1st address line.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.AddressControl.Address.AddressLine2">
            <summary>
            Gets or sets the 2nd address line.
            </summary>
            <value>The 2nd address line.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.AddressControl.Address.City">
            <summary>
            Gets or sets the city.
            </summary>
            <value>The city</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.AddressControl.Address.State">
            <summary>
            Gets or sets the state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.AddressControl.Address.ZipCode">
            <summary>
            Gets or sets the Zip code.
            </summary>
            <value>The Zip code.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.AddressControl.Address.County">
            <summary>
            Get or sets the county.
            </summary>
            <value>The county</value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.AddressControl.AddressLayoutCollection">
            <summary>
            A collection of <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout"/> objects used in the <see cref="T:Ifs.Fnd.Windows.Forms.FndAddressControl"/>.
            TODO: replace with <code>List&lt;FndAddressLayout&gt;</code> when someone really figures out the IndexOf(string, bool) overload.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.AddressLayoutCollection.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.AddressLayoutCollection"/>
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.AddressLayoutCollection.Contains(Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout)">
            <summary>
            Determines whether this collection of <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout"/> has the specified dataElement.
            </summary>
            <param name="dataElement">The data element to be found in the collection</param>
            <returns>true if the data element is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.AddressLayoutCollection.IndexOf(Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout)">
            <summary>
            Returns the index of a given object.
            </summary>
            <param name="dataElement">The data element whose index is to be found.</param>
            <returns>The index of the data element</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.AddressLayoutCollection.IndexOf(System.String,System.Boolean)">
            <summary>
            Returns the index of a given object.
            If the object is not found, then the index of the best default object will be returned.
            </summary>
            <param name="countryCode">The country code of the <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout"/>.</param>
            <param name="displayMode">True if this check is for a display mode, false if for the edit mode.</param>
            <returns>The index of the data element</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.AddressLayoutCollection.Add(Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout)">
            <summary>
            Adds an existing <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout"/> object to the collection.
            </summary>
            <param name="dataElement">The <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout"/> to be added to the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.AddressLayoutCollection.AddRange(Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout[])">
            <summary>
            Adds an array of <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout"/> objects to the collection.
            </summary>
            <param name="dataElements">An array of <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout"/> objects to be added to the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.AddressLayoutCollection.CopyTo(Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout,System.Int32)">
            <summary>
            Copies the elements of the Collection to an Array, starting at a particular Array index.
            </summary>
            <param name="destination">Destination variable</param>
            <param name="index">The index of the value to be copied.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.AddressLayoutCollection.Insert(System.Int32,Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout)">
            <summary>
            Inserts a <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout"/> into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index location where the item is inserted.</param>
            <param name="dataElement">The <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout"/> to insert to the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.AddressLayoutCollection.Remove(Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout)">
            <summary>
            Removes the specified <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout"/> from the collection.
            </summary>
            <param name="dataElement">A <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout"/> representing the item to remove from the collection.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.AddressControl.AddressLayoutCollection.Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout"/> in the specified index within the <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.AddressLayoutCollection"/>
            </summary>
            <value>
            The <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout"/> in the specified in index within the <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.AddressLayoutCollection"/>
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.AddressControl.EditAddressDialogExt">
            <summary>
            A dialog box displayed to prompt the user when editing an address list.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndDialog">
            <summary>
            Subclass of System.Windows.Forms.FndForm intended for dialogs
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.IFndCommandManager">
            <summary>
            Summary description for IFeatureCommandManager.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.IFndCommandManager.CommandManager">
            <summary>
            Get the command manager for the current feature.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.btnYes">
            <summary>
            Yes button
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.btnYesToAll">
            <summary>
            YesToAll Button, return value is FndDialogResult.Yes
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.btnNo">
            <summary>
            No button, return value is FndDialogResult.YesToAll
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.btnNoToAll">
            <summary>
            NoToAll button, return value is FndDialogResult.No
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.btnContinue">
            <summary>
            Continue button, return value is FndDialogResult.Continue
            </summary>        
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.btnOk">
            <summary>
            OK button, return value is FndDialogResult.OK
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.btnCancel">
            <summary>
            Cancel button, return value is FndDialogResult.Cancel
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.btnAbort">
            <summary>
            Abort button, return value is FndDialogResult.Abort
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.panelBase">
            <summary>
            Base panel for hosting dialog controls
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.dialogButtonsPanel">
            <summary>
            Panel for hosting dialog buttons
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.fndDialogCommandManager">
            <summary>
            CommandManager 
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.commandOk">
            <summary>
            Command Ok
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.commandContinue">
            <summary>
            Command Ok
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.commandCancel">
            <summary>
            Command Continue
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.commandAbort">
            <summary>
            Command Cancel
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.commandNo">
            <summary>
            Command Abort
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.commandNoToAll">
            <summary>
            Command NoToAll
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.commandYes">
            <summary>
            Command Yes
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialog.commandYesToAll">
            <summary>
            Command YesToAll
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.#ctor">
            <summary>
            Default constructor
            Calls the public constructor of FndForm at design time
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.#ctor(Ifs.Fnd.Explorer.Interfaces.IFndExplorer)">
            <summary>
            Creates an instance of FndDialogBase
            </summary>
            <param name="explorer">IFndExplorer instance</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.InitializeDialog">
            <summary>
            Initializes the dialog buttons etc
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.InitializeCommands">
            <summary>
            Initializes the commands for the dialog buttons
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.InitializeDialogResultMappings">
            <summary>
            Creates the mapping between the System.Windows.Forms.DialogResult and 
            our own Fnd.Windows.Forms.FndDialogResult        
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.FndDialog_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the display of the dialog buttons
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.Show">
            <summary>
            Overrides the default Form.Show().
            Returns Fnd.Windows.Forms.FndDialogResult instead of System.Windows.Forms.DialogResult
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.Show(System.Windows.Forms.IWin32Window)">
            <summary>
            Overrides the default Form.Show(IWin32Window owner).
            Returns Fnd.Windows.Forms.FndDialogResult instead of System.Windows.Forms.DialogResult
            </summary>
            <param name="owner"></param>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.ShowDialog">
            <summary>
            Overrides the default Form.ShowDialog().
            Returns Fnd.Windows.Forms.FndDialogResult instead of System.Windows.Forms.DialogResult
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.ShowDialog(System.Windows.Forms.IWin32Window)">
            <summary>
            Overrides the default Form.ShowDialog(IWin32Window owner).
            Returns Fnd.Windows.Forms.FndDialogResult instead of System.Windows.Forms.DialogResult
            </summary>
            <param name="owner"></param>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Overrides the OnClosing event. 
            The pupose is to check if the dialog is closed via a FndCommandButton which has
            the DialogResult property set. If that is the case then we map the System.Windows.Forms.DialogResult
            to the corresponding result in out own FndDialogResult enumeration.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.OnHandleCreated(System.EventArgs)">
            <summary>
            Register control for themeing
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.OnShown(System.EventArgs)">
            <summary>
            Handle SnapToDefault button logic
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.InitializeForm">
            <summary>
            Initializes the default properties of the dialogform
            </summary>        
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.InitializeButtons">
            <summary>
            Initializes all buttons
            </summary>        
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.RegisterButtonSets">
            <summary>
            Registers the default button sets
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.ShowDialogButtons(Ifs.Fnd.Windows.Forms.FndButtonStyle)">
            <summary>
            Diaplys the dialog buttons based on the selected buttonStyle
            </summary>        
            <param name="buttonStyle">Buttonstyle for the dialog</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.SetActionButtons(Ifs.Fnd.Windows.Forms.FndButtonStyle)">
            <summary>
            Sets the deafult acceptbutton and cancelbutton for the give buttonstyle.
            </summary>
            <param name="style"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.SetButtonLocation(Ifs.Fnd.Windows.Forms.FndCommandButton,System.Int32,System.Boolean)">
            <summary>
            Sets the location of the button based on the alignment style as well as the buttons position index 
            </summary>
            <param name="button"></param>
            <param name="position"></param>
            <param name="horizontalMode"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.SetButtonProperties(Ifs.Fnd.Windows.Forms.FndCommandButton,System.String,Ifs.Fnd.Windows.Forms.FndDialogResult,Ifs.Fnd.Windows.Forms.FndCommand)">
            <summary>
            Sets the default properties for a dialogbutton
            </summary>
            <param name="button"></param>
            <param name="name"></param>        
            <param name="resultValue"></param>
            <param name="command"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.RenameButton(Ifs.Fnd.Windows.Forms.FndDialogButton,System.String)">
            <summary>
            Rename a dialog button.
            </summary>
            <param name="button"></param>
            <param name="text"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.ButtonEnabled(Ifs.Fnd.Windows.Forms.FndDialogButton,System.Boolean)">
            <summary>
            Enable/disable a dialog button.
            </summary>
            <param name="button"></param>
            <param name="enabled"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.IsButtonEnabled(Ifs.Fnd.Windows.Forms.FndDialogButton)">
            <summary>
            Check if dialog button is enabled.
            </summary>
            <param name="button"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.SetFormResizable(System.Boolean)">
            <summary>
            Sets the forms resizable properties
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.CloseDialog(Ifs.Fnd.Windows.Forms.FndDialogResult)">
            <summary>
            Closes the dialog and sets the DialogResult property.
            </summary>
            <param name="result">DialogResult</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.ButtonClickHandler(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender">Sender of the message</param>
            <param name="e">Event arguments from the sender</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.GetDialogResult(System.String)">
            <summary>
            Returns the dialog result that should be return if the selected button is pressed
            </summary>
            <param name="buttonName"></param>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.FndDialog_HelpRequested(System.Object,System.Windows.Forms.HelpEventArgs)">
            <summary>
            General handling of help request 
            </summary>
            <param name="sender"></param>
            <param name="hlpevent"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDialog.SetTheme">
            <summary>
            Fnd dialogs should not be themed
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.CommandManager">
            <summary>
            Command manager object owned by the FndDialog.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.ShowPanelBase">
            <summary>
            Upper pane in the dialog. All controls should be placed on this pane.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.HorizontalAlignment">
            <summary>
            Aligns the dialog buttons horizontaly at the bottom if set to true, 
            otherwise they are verticaly aligned to the right side of the form
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.Text">
            <summary>
             The text associated with this control. 
             A suffix is added to the set value in case it doesn't already exsist. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.DialogResult">
            <summary>       
            The result of the dialog 
            </summary>   
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.IsResizable">
            <summary>       
            This propery sets the hidden FormBorderStyle of the dialog
            according to if the dialog should be resizable or not.
            </summary>    
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.Size">
            <summary>       
            Size property
            </summary>    
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.ButtonStyle">
            <summary>       
            The set of buttons displayed on the dialog
            </summary> 
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.ShowButtonPanel">
            <summary>       
            The set of buttons displayed on the dialog
            </summary> 
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.FormBorderStyle">
            <summary>
             Hide the inherited property FormBorderStyle. 
            </summary>        
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.ShowIcon">
            <summary>
             Hide the inherited property ShowIcon. 
            </summary> 
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.Icon">
            <summary>
             Hide the inherited property Icon. 
            </summary> 
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.ShowInTaskbar">
            <summary>
             Hide the inherited property ShowInTaskbar. 
            </summary> 
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.SizeGripStyle">
            <summary>
             Hide the inherited property SizeGripStyle. 
            </summary> 
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.StartPosition">
            <summary>
             Hide the inherited property StartPosition. 
            </summary> 
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.MaximizeBox">
            <summary>
             Hide the inherited property MaximizeBox. 
            </summary> 
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.MinimizeBox">
            <summary>
             Hide the inherited property MinimizeBox. 
            </summary> 
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.HelpButton">
            <summary>
            Determines whether the form has a Help button on the caption bar.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.Explorer">
            <summary>
            Gets or sets the <see cref="T:Ifs.Fnd.Explorer.Interfaces.IFndExplorer"/>
            member variable.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDialog.UseThemes">
            <summary>
            Property to set if the dialog is to be themed or not
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndDialog.ActionPair">
            <summary>
            This class is localy used in order to register the default 
            acceptbutton/cancelbutton for buttons in the buttonstyles.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.EditAddressDialogExt.#ctor(Ifs.Fnd.Explorer.Interfaces.IFndExplorer)">
            <summary>
            Creates a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.EditAddressDialogExt"/> class.
            </summary>
            <param name="explorer">
            The Explorer.
            </param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.EditAddressDialogExt.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.EditAddressDialogExt.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndAddressControl">
            <summary>
            A class capable of displaying multiple addresses.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndUserControl">
            <summary>
            Subclasses the System.Windows.Forms.UserControl and adds Theme support.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndUserControl.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndUserControl class.  
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndUserControl.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Raises the ReadOnlyChanged event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndUserControl.OnHandleCreated(System.EventArgs)">
            <summary>
            Register control for themeing
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndUserControl.SetTheme">
            <summary>
            Should invoke a reset of the control properties that have been themed.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndUserControl.GetContext(System.Windows.Forms.Control)">
            <summary>
            Returns the current context.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndUserControl.GetCustomFrameworkControls">
            <summary>
            Retuns null as the default Controls property contains all the relevant controls 
            </summary>
            <returns></returns>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndUserControl.ReadOnlyChanged">
            <summary>
            Occurs when the value of the ReadOnly property has changed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndUserControl.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the user control is read-only.
            </summary>
            <value>
            <b>true</b> if the user control is read-only; otherwise, <b>false</b>. The default is <b>false</b>.
            </value>
            <remarks>
            This property is used by the framework to set the udpdatable state of the control when the control is data bound. 
            In such a situation setting this property at design time has no effect. To control the read-only behaviour even when 
            the control is data bound, first set the <see cref="P:Ifs.Fnd.Windows.Forms.FndUserControl.AutoHandleUpdatable"/> property to <b>false</b>.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndUserControl.UseThemes">
            <summary>
            Gets or sets whether the themes should be used.
            </summary>
            <value>
            True if the themes should be used, false otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndUserControl.Updatable">
            <summary>
            Gets or sets a value indicating whether the control is updatable or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndUserControl.AutoHandleUpdatable">
            <summary>
            Gets or sets a value indicating whether the updatable state of the control
            is automatically handled or not.
            Note that this is only valid when the control is data bound.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndUserControl.ContainerInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndAddressControl.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndAddressControl"/>
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndAddressControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndAddressControl.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Overridden. See <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)"/>
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="specified"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndAddressControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndAddressControl.BeginInit">
            <summary>
            Initializes the <see cref="T:Ifs.Fnd.Windows.Forms.FndAddressControl"/> control.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndAddressControl.EndInit">
            <summary>
            Finishes the initialization of the <see cref="T:Ifs.Fnd.Windows.Forms.FndAddressControl"/> control.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndAddressControl.SetTheme">
            <summary>
            Method to be used by the framework to invoke a reset of the control properties 
            that have been themed.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndAddressControl.GetDataMembersForDataSource(System.Object)">
            <summary>
            Returns an array of data members used to populate this control.
            </summary>
            <param name="dataSource">The data source from which the data members are taken from.</param>
            <returns>An array of data members.</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndAddressControl.MultipleAddresses">
            <summary>
            Gets or sets whether multiple addresses should be displayed.
            </summary>
            <value>
            True if multiple addresses are to be displayed, false if only 1 address is to be displyed.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndAddressControl.TextAreaBackColor">
            <summary>
            Gets or sets the background color of the text area.
            </summary>
            <value>
            The background color of the text area.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndAddressControl.TextAreaForeColor">
            <summary>
            Gets or sets the foreground color of the text area.
            </summary>
            <value>
            The foreground color of the text area.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndAddressControl.DataSource">
            <summary>
            Gets or sets the <see cref="T:Ifs.Fnd.Data.FndBindingListBase"/> that this control will use to fetch and save data.
            </summary>
            <value>An object that functions as a data source.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndAddressControl.AddressLine1Column">
            <summary>
            Gets or sets the column which contains the Address Line 1 information.
            </summary>
            <value>
            The address line 1 information.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndAddressControl.AddressLine2Column">
            <summary>
            Gets or sets the column which contains the Address Line 2 information.
            </summary>
            <value>
            The address line 2 information.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndAddressControl.CityColumn">
            <summary>
            Gets or sets the column which contains the City information.
            </summary>
            <value>
            The City information.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndAddressControl.StateColumn">
            <summary>
            Gets or sets the column which contains the State information.
            </summary>
            <value>
            The State information.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndAddressControl.ZipCodeColumn">
            <summary>
            Gets or sets the column which contains the ZipCode information.
            </summary>
            <value>
            The ZipCode information.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndAddressControl.CountyColumn">
            <summary>
            Gets or sets the column which contains the County information.
            </summary>
            <value>
            The County information.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndAddressControl.CountryIDColumn">
            <summary>
            Gets or sets the column which contains the County information.
            </summary>
            <value>
            The County information.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndAddressControl.AutoHandleUpdatable">
            <summary>
            Gets or sets a property which decides whether the updatable state in this control is handled automatically.
            </summary>
            <value>
            True if the updatable state is handled automatically, false otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndAddressControl.Updatable">
            <summary>
            Gets or sets whether the values in the control can be updated.
            </summary>
            <value>
            True if the values can be updated, false otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndAddressControl.UseThemes">
            <summary>
            Gets or sets whether the theming should be used with this control.
            </summary>
            <value>
            True if the theming should be used, false otherwise
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout">
            <summary>
            A class containing information on an address layout.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout"/> class.
            </summary>
            <param name="displayLayout">The layout to be used when displaying the address.</param>
            <param name="editLayout">The layout to be used when editing the address.</param>
            <param name="countryCode">The country code for this address layout.</param>
            <param name="defaultDisplayLayout">Is this the default layout for display purposes.</param>
            <param name="defaultEditLayout">Is this the default layout for edit purposes.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout.GetVisibility(System.String)">
            <summary>
            Returns whether the item is visible.
            </summary>
            <param name="placeHolder">The placeholder defined by the constant.</param>
            <returns>True if the item is visible, false otherwise.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout.GetWidth(System.String)">
            <summary>
            Returns the width of the item.
            </summary>
            <param name="placeHolder">The placeholder defined by the constant</param>
            <returns>The width of the item.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout.GetColumn(System.String)">
            <summary>
            Returns the column of the item.
            </summary>
            <param name="placeHolder">The placeholder defined by the constant</param>
            <returns>The column index the item should be displayed in.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout.GetRow(System.String)">
            <summary>
            Returns the row of the item.
            </summary>
            <param name="placeHolder">The placeholder defined by the constant</param>
            <returns>The row index the item should be displayed in.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout.GetEditValue(System.String)">
            <summary>
            Gets the value associated with an edit layout value
            </summary>
            <param name="searchString">The search string. Ex: "W6".  Do <b>not</b> include the '$' or '=' symbols.</param>
            <returns>The layout value</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout.DefaultDisplayLayout">
            <summary>
            Gets whether this layout is the default display layout
            </summary>
            <value>
            True if this is the default display layout, false otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout.DefaultEditLayout">
            <summary>
            Gets whether this layout is the default edit layout
            </summary>
            <value>
            True if this is the default edit layout, false otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout.CountryCode">
            <summary>
            Gets the country code for this Address Layout.
            </summary>
            <value>
            The Country code.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout.DisplayLayout">
            <summary>
            Gets the display layout
            </summary>
            <value>
            The display layout
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout.EditLayout">
            <summary>
            Gets the edit layout
            </summary>
            <value>
            The edit layout
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.AddressControl.FndCountry">
            <summary>
            Contains information about a country.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.FndCountry.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.FndCountry"/> class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.AddressControl.FndCountry.ToString">
            <summary>
            The display text of this country.
            </summary>
            <returns>The display text.</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.AddressControl.FndCountry.CountryCode">
            <summary>
            Gets the country code.
            </summary>
            <value>
            The country code.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.AddressControl.FndCountry.DisplayText">
            <summary>
            Gets the display text for the country.
            </summary>
            <value>
            The Display text.
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.IFndAddressBasicDataService">
            <summary>
            Summary description for IFndAddressBasicDataService.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.IFndAddressBasicDataService.Countries">
            <summary>
            Gets an array of <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.FndCountry"/> objects.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.IFndAddressBasicDataService.AddressLayouts">
            <summary>
            Gets an array of <see cref="T:Ifs.Fnd.Windows.Forms.AddressControl.FndAddressLayout"/> objects.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndCommandButton">
            <summary>
            Extends the <see cref="T:Ifs.Fnd.Windows.Forms.FndButton"/> control
            with command support. 
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndButton">
            <summary>
            Extends the <see cref="T:System.Windows.Forms.Button"/> control
            with IFS-specific behavior. 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndButton.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndButton class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndButton.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event
            </summary>
            <param name="e">Event arguments for the Click Event</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndButton.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndButton.Text">
            <summary>
            Gets or sets the text on the button. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndButton.DisplayText">
            <summary>
            Returns the display text of the control
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndButton.WhatsThisControlId">
            <summary>
            Returns the Id used for fetching what's this text
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.IFndCommand">
            <summary>
            Summary description for IFndCommand.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.IFndCommand.PreDefinedLocationId">
            <summary>
            Id of a pre defined location where the command should be located. 
            The predefined location is defined in the base class for a feature. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.IFndCommand.Command">
            <summary>
            Gets or Sets the command.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandButton.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndButton class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandButton.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event
            </summary>
            <param name="e">Event arguments for the Click Event</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandButton.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandButton.Text">
            <summary>
            Gets or sets a value indicating the caption of the menu item.
             Returns: The text caption of the menu item.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandButton.Command">
            <summary>
            Gets or sets the <see cref="T:Ifs.Fnd.Windows.Forms.FndCommand"/> associated with this <see cref="T:Ifs.Fnd.Windows.Forms.FndButton"/>.
            </summary>
            <value>
            The <see cref="T:Ifs.Fnd.Windows.Forms.FndCommand"/> associated with this <see cref="T:Ifs.Fnd.Windows.Forms.FndButton"/>
            </value>		
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandButton.PreDefinedLocationId">
            <summary>
            Specifies the pre-defined location id of the command.
            This property is not used for the <see cref="T:Ifs.Fnd.Windows.Forms.FndButton"/>
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandButton.DisplayText">
            <summary>
            Display text for the control
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandButton.WhatsThisControlId">
            <summary>
            Id used for fetching the whatsthis text
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndCommandLinkLabel">
            <summary>
            Represents a Windows label control that can display hyperlinks and handle specific navigation on 
            it's container form.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndLinkLabel">
            <summary>
            Represents a Windows label control that can display hyperlinks and handle specific navigation on it's container form 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLinkLabel.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndLinkLabel class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLinkLabel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLinkLabel.OnLinkNavigating(System.String)">
            <summary>
            Raises the FndLinkLabel.LinkNavigating event.
            </summary>
            <param name="url">The URL to send to the event listeners</param>
            <returns>New URL set by event listeners or url parameter.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLinkLabel.OnLinkClicked(System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            If LinkClickBehaviour = RaiseLinkLabelClicked it will raise the LinkClicked event,
            else it will do a IFndExplorerNavigationService.Navigate
            </summary>
            <param name="e">Provides URL for the FndLinkLabel.LinkNavigating event</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLinkLabel.OnHandleCreated(System.EventArgs)">
            <summary>
            Overridden <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)"/> 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLinkLabel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndLinkLabel.LinkNavigating">
            <summary>
            Occurs when a click on a FndLinkLabel is about to do a IFndExplorerNavigationService.Navigate
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLinkLabel.Text">
            <summary>
            Gets or sets the text of the label. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLinkLabel.LinkClickBehaviour">
            <summary>
            Gets or sets a value that represents the click behavior on this link.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLinkLabel.LinkBehavior">
            <summary>
            Gets or sets a value that represents the behavior of a link.
            The default is LinkBehavior.HoverUnderline.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLinkLabel.Url">
            <summary>
            The destination URL which is navigated when LinkClickBehaviour is NavigateToUrl.
            Null or Empty URL:s will not trigger navigation. Use scheme/protocol ifswin for Features,
            ifsapf for Application Forms and ifsweb for IFS webclient pages. Other schemas are http, https, ftp etc.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLinkLabel.DisplayText">
            <summary>
            Display text for the control
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLinkLabel.WhatsThisControlId">
            <summary>
            Id used for fetching the whatsthis text
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandLinkLabel.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndLinkLabel class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandLinkLabel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandLinkLabel.OnLinkClicked(System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            If LinkClickBehaviour = RaiseLinkLabelClicked it will raise the LinkClicked event,
            else it will do a IFndExplorerNavigationService.Navigate
            </summary>
            <param name="e">Provides URL for the FndLinkLabel.LinkNavigating event</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandLinkLabel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandLinkLabel.Text">
            <summary>
            Gets or sets the text of the 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandLinkLabel.Command">
            <summary>
            Gets or sets the <see cref="T:Ifs.Fnd.Windows.Forms.FndCommand"/> associated with this <see cref="T:Ifs.Fnd.Windows.Forms.FndButton"/>.
            </summary>
            <value>
            The <see cref="T:Ifs.Fnd.Windows.Forms.FndCommand"/> associated with this <see cref="T:Ifs.Fnd.Windows.Forms.FndButton"/>
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandLinkLabel.PreDefinedLocationId">
            <summary>
            Specifies the pre-defined location id of the command.
            This property is not used for the <see cref="T:Ifs.Fnd.Windows.Forms.FndLinkLabel"/>
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandLinkLabel.DisplayText">
            <summary>
            Display text for the control
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandLinkLabel.WhatsThisControlId">
            <summary>
            Id used for fetching the whatsthis text
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.Commands.CommandEventSourceConverter">
            <summary>
            An internal class which can serialise a FndCommandEventSource object.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.Commands.CommandEventSourceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Specifies whether the conversion can take palace
            </summary>
            <param name="context">The context.</param>
            <param name="destinationType">The type it should be converted to.</param>
            <returns>True if it is possible to convert, false otherwise.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.Commands.CommandEventSourceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Performs the conversion
            </summary>
            <param name="context">The context.</param>
            <param name="culture">The culture to perform the conversion in.</param>
            <param name="value">The value to be converted.</param>
            <param name="destinationType">The type it should be converted to.</param>
            <returns>The converted object</returns>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.Commands.CommandSerializer">
            <summary>
            The custom Serializer for the FndCommand type that adds event-related code.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.Commands.CommandSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            Deserialises the object and assigns values.
            </summary>
            <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager"/></param>
            <param name="codeObject">The object to be de-serialised</param>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.Commands.CommandSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            Serialises the object and returns the code.
            </summary>
            <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager"/></param>
            <param name="value">The object to be serialized.</param>
            <returns>The code after object serialization.</returns>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndCommandExecuteHandler">
            <summary>
             Represents the method that will handle the Execute event of a FndCommand. 
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndCommandInquireHandler">
            <summary>
             Represents the method that will handle the Inquire event of a FndCommand. 
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommandEventCategory">
            <summary>
            Enumeration that holds categories for which FndCommands is inquired.
            Controls call the CommandManager to inquire commands. To increase performance the controls 
            can categorize the event. For example when a control receive focus the Focus category is used.
            <remarks>
            Currently the only category that is used is Focus but the idea is that other categories will be taken
            into use.
            </remarks>
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandEventCategory.None">
            <summary>
            No Category which is used as NULL value
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandEventCategory.Focus">
            <summary>
            Events related to focus movement.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandEventCategory.Edit">
            <summary>
            Events related to user edit
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandEventCategory.Any">
            <summary>
            Events related to any category
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndCommand">
            <summary>
            FndCommand is a class that handles an action that can be connected to different controls (Menu Items, Buttons and Link Labels etc).
            The FndCommand handles the enabling and disabling of all connected controls. For instance if a FndCommand is connected to a Menu Item and
            a Button, both will be disabled if the Enabled property for the FndCommand is set to false.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndCommand.CommandNameChart">
            <summary>
            The name for the Chart command.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommand.#ctor">
            <summary>
            Initializes a new instance of the FndCommand class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommand.#ctor(System.ComponentModel.IContainer)">
            <summary> 
            Creates a FndCommand instance and associates it with the specified container.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommand.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommand.OnExecute(System.ComponentModel.Component)">
            <summary> 
            Raises the Execute event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommand.OnInquire(System.ComponentModel.Component,System.Object,System.EventArgs)">
            <summary> 
            Raises the Inquire event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommand.commander_LostFocus(System.Object,System.EventArgs)">
            <summary>
            commander_LostFocus is an event handler that is used with the SuspendInqure
            logic. If a command inquire is suspended because the commander is gotten focus. 
            Then this handler is called when the focus leavs the commander.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommand.PostExecute(System.Action{System.Object})">
            <summary>
            Queues the method and executes it first when the chain of commands has been executed. 
            </summary>
            <param name="method">The method to execute after all the commands has been executed.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommand.RegisterCommander(System.ComponentModel.Component)">
            <summary>
            Registers a commander for the command.
            A commander should be registered for the command inquire logic to fire at right time.
            Depending on if a command has more than one commander and the type of those the inquire
            logic is fired differently.
            </summary>
            <param name="commander">Commander to connect to the command</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommand.UnregisterCommander(System.ComponentModel.Component)">
            <summary>
            Unregister a commander
            </summary>
            <param name="commander">commander to unregister.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommand.OnInquireEventFired(System.Object,System.EventArgs)">
            <summary>
            Raises the Inquire event.
            </summary>
            <param name="sender">The sender of the inquire event.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommand.SetDirty(System.Boolean)">
            <summary>
            To be called when the feature is dirtied.
            </summary>
            <param name="setDirty">True if the field was dirtied, false otherwise</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommand.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommand.SetTheme">
            <summary>
            Method to set the theme for command.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndCommand.Execute">
            <summary>
            Represents the method that will handle the OnExecute event of a FndCommand. 
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndCommand.Inquire">
            <summary>
            Represents the method that will handle the OnInquire event of a FndCommand. 
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndCommand.CaptionChanged">
            <summary>
            Represents the method that will handle the OnCaptionChanged event of a FndCommand. 
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndCommand.EnabledChanged">
            <summary>
            Represents the method that will handle the OnEnabledChanged event of a FndCommand. 
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndCommand.VisibleChanged">
            <summary>
            Represents the method that will handle the OnVisibleChanged event of a FndCommand. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.Name">
            <summary>
            Gets or sets the name of the control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.Live">
            <summary>
            Returns true if the command is connected to a live commander. I.e. should the command 
            be inquired frequently or only on special occasions. A button is a typical live commander while a 
            menu item is not. The command manager use this property to determine if a command should be inquired 
            at a sertain time. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.EventCategory">
            <summary>
            Defines the command to support a specific set of categories.
            only when needed to optimize performance.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.EnabledState">
            <summary>
            Used to store the enabled state of a FndCommand
            </summary>
            <remarks>
            This property is hidden to application developers.
            
            EnabledState property is used by the framework to store enabled state of a
            command when the framework is controlling the state. (For example in
            Abort Request disabling commands during a server call)
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.SuspendInquire">
            <summary>
            Used to suspend all inquire events
            </summary>
            <remarks>
            This property is hidden to application developers.
            
            SuspendInquire property is used by the framework to suspend 
            inquire event to be fired when the framework is controlling the state. 
            (For example in Abort Request disabling commands during a server call)
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.Tag">
            <summary>
             Gets or sets user defined data associated with the FndCommand.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.Checked">
            <summary>
             Gets or sets a value indicating whether a check mark appears next to the text of the FndCommand.     
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.DisabledWhenDirty">
            <summary>
            Gets or sets whether the command should be disabled when the data source is dirty.
            </summary>
            <value>
            True if the command should be disabled, False otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.EnabledDuringServerCall">
            <summary>
            Gets or sets whether the FndCommand should be enabled during a server call.
            This is only valid when Abort Request is enabled in IFS Explorer.
            Typically a command which will execute another server call should never be enabled
            during a server call. Nor a command navigating to another feature or opening a modal dialog.
            Note: Set this property to True with care!
            </summary>
            <value>
            True if the command should be enabled, False otherwise. Default is False.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.Enabled">
            <summary>
              Gets or sets a value indicating whether the FndCommand is enabled.     
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.Visible">
            <summary>
              Gets or sets a value indicating whether the FndCommand is enabled.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.VisibleInternal">
            <summary>
              Gets or sets a value indicating whether the FndCommand is visible. For internal use only.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.InquireNotifiers">
            <summary>
            A collection of events that raise the OnInquire method if they are raised.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.Parent">
            <summary>
             Gets the FndCommandManager that handles this FndCommand. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.ImageIndex">
            <summary>
             Gets or sets the index of the image that is displayed for the item.   
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.Caption">
            <summary>
             Gets or sets the caption for the FndCommand.    
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.ToolTip">
            <summary>
            Gets or sets the ToolTip text displayed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.POName">
            <summary>
            Presentaion Object Name
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.POGrantChecked">
            <summary>
            Falg to check weather Presentation Object grants checked  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommand.ImageResource">
            <summary>
            Gets or sets the themeable resource string for the command. 
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndCommandCollection">
            <summary>
            Summary description for FndCommandCollection.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandCollection.Add(Ifs.Fnd.Windows.Forms.FndCommand)">
            <summary>
            Appends the specified FndCommand to the end of the collection. 
            </summary>
            <param name="command">The FndCommand to add.</param>
            <returns>The zero-based index value of the FndCommand added to the collection.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandCollection.Insert(System.Int32,Ifs.Fnd.Windows.Forms.FndCommand)">
            <summary>
            Inserts an existing FndCommand in the FndCommand collection at the specified location. 
            </summary>
            <param name="index">The indexed location within the collection to insert the FndCommand.</param>
            <param name="command">The FndCommand to insert into the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandCollection.Remove(Ifs.Fnd.Windows.Forms.FndCommand)">
            <summary>
            Removes a FndCommand from the FndCommand collection at a specified index.  
            </summary>
            <param name="command">The index of the FndCommand to remove.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandCollection.CopyTo(Ifs.Fnd.Windows.Forms.FndCommand[],System.Int32)">
            <summary>
            Copies the FndCommands or a portion of it to a one-dimensional array.
            </summary>
            <param name="commands">The destination array.</param>
            <param name="index">The index in the destination array at which storing begins.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandCollection.Contains(Ifs.Fnd.Windows.Forms.FndCommand)">
            <summary>
            Determines whether an FndCommand is in the FndCommandCollection.
            </summary>
            <param name="command">The FndCommand to locate in the FndCommandCollection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandCollection.IndexOf(Ifs.Fnd.Windows.Forms.FndCommand)">
            <summary>
            Determines the index of a specific FndCommand in the FndCommandCollection. 
            </summary>
            <param name="command">The FndCommand to locate in the FndCommandCollection.></param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the System.Collections.CollectionBase instance.  
            </summary>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="value">The new value of the element at index.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandCollection.Item(System.Int32)">
            <summary>
              
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSource">
            <summary>
            This contains information on an Event source which triggers the OnInquire method within each command.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSource.#ctor(System.ComponentModel.IComponent,System.String,System.Type)">
            <summary>
            Creates a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSource"/> class
            </summary>
            <param name="sourceComponent">The component which generates the event.</param>
            <param name="eventName">Name of the event.</param>
            <param name="eventType">Type of the event.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSource.#ctor(System.ComponentModel.IComponent,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSource"/> class
            </summary>
            <param name="sourceComponent">The component which generates the event.</param>
            <param name="eventName">Name of the event.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSource.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSource"/> class
            </summary>
            <param name="eventName">The name of the event being fired.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSource.Equals(System.Object)">
            <summary>
            Specifies whether two objects are equal.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to be compared against.</param>
            <returns>True if the objects are equal, false otherwise.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSource.GetHashCode">
            <summary>
            Returns a hash code for the current object.
            </summary>
            <returns>The hash code of the current object.</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSource.SourceComponent">
            <summary>
            Gets the source component.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSource.EventName">
            <summary>
            The name of the event
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSource.EventType">
            <summary>
            Type of the event.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSourceCollection">
            <summary>
            Summary description for FndCommandCollection.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSourceCollection.Add(Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSource)">
            <summary>
            Appends the specified FndCommandEventSource to the end of the collection. 
            </summary>
            <param name="eventSource">The FndCommandEventSource to add.</param>
            <returns>The zero-based index value of the FndCommandEventSource added to the collection.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSourceCollection.Insert(System.Int32,Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSource)">
            <summary>
            Inserts an existing FndCommandEventSource in the FndCommandEventSource collection at the specified location. 
            </summary>
            <param name="index">The indexed location within the collection to insert the FndCommandEventSource.</param>
            <param name="eventSource">The FndCommandEventSource to insert into the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSourceCollection.Remove(Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSource)">
            <summary>
            Removes a FndCommandEventSource from the FndCommandEventSource collection at a specified index.  
            </summary>
            <param name="eventSource">The index of the FndCommandEventSource to remove.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSourceCollection.CopyTo(Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSource[],System.Int32)">
            <summary>
            Copies the FndCommandEventSource or a portion of it to a one-dimensional array.
            </summary>
            <param name="eventSources">The destination array.</param>
            <param name="index">The index in the destination array at which storing begins.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSourceCollection.Contains(Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSource)">
            <summary>
            Determines whether an FndCommandEventSource is in the FndCommandEventSourceCollection.
            </summary>
            <param name="eventSource">The FndCommandEventSource to locate in the FndCommandEventSourceCollection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSourceCollection.IndexOf(Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSource)">
            <summary>
            Determines the index of a specific FndCommandEventSource in the FndCommandEventSourceCollection. 
            </summary>
            <param name="eventSource">The FndCommandEventSource to locate in the FndCommandEventSourceCollection.></param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.Commands.FndCommandEventSourceCollection.Item(System.Int32)">
            <summary>
            Returns an array which can be used to access the elements of the collection.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndCommandExecuteEventArgs">
            <summary>
            Class containing execute event arguments. 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandExecuteEventArgs.#ctor">
            <summary>
            Initializes a new instance of the FndCommandExecuteEventArgs class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandExecuteEventArgs.#ctor(Ifs.Fnd.Windows.Forms.FndCommand)">
            <summary>
            Initializes a new instance of the FndCommandExecuteEventArgs class.
            </summary>
            <param name="command">The Command that caused the event.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandExecuteEventArgs.Handled">
            <summary>
             Gets or sets the handled property for the FndCommandExecuteEventArgs.
             If handled is set to true the base class should not run the Execute command.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandExecuteEventArgs.Command">
            <summary>
            Gets the command that caused the execute event
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndCommandInquireEventArgs">
            <summary>
            Class containing inquire event arguments. 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandInquireEventArgs.#ctor">
            <summary>
            Initializes a new instance of the FndCommandInquireEventArgs class.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandInquireEventArgs.Handled">
            <summary>
             Gets or sets the handled property for the FndCommandInquireEventArgs.
             If handled is set to true the base class should not run the Inquire command.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandInquireEventArgs.InnerEventArgs">
            <summary>
            The event arguments of the event firing the command inquire event.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandInquireEventArgs.InnerSender">
            <summary>
            The sender firing the command inquire event.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.IFndPreDefinedCommands">
            <summary>
            Summary description for IFndPreDefinedCommands.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.IFndPreDefinedCommands.ActivatePreDefinedCommands">
            <summary>
            Force the feature to activate the predefined commands.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.IFndPreDefinedCommands.PreDefinedCommandManager">
            <summary>
            Get the command manager for the predefined commands. 
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndCommandManager">
            <summary>
            Summary description for FndCommandManager.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandManager.#ctor">
            <summary>
            Initializes a new instance of the FndCommandManager class.
            Warning: Use the constructor FndCommandManager(IContainer container) instead!
            If you use this constructor, you must manually call Dispose() on this object.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandManager.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the FndCommandManager class and associates it with the specified container.
            </summary>
            <param name="container">The container to add this component to</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandManager.DisposeCachedCommandManagers(System.Boolean)">
            <summary>
            Internal framework use only
            </summary>
            <param name="disposing">True to dispose</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandManager.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandManager.Inquire">
            <summary>
            Sends the inquire event to all commands in the command manager. 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandManager.Inquire(Ifs.Fnd.Windows.Forms.CommandEventCategory)">
            <summary>
            Sends inquire event to all commands of a specific command type
            </summary>
            <param name="commandType">Command type to inquire</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandManager.SetDirty(System.Boolean)">
            <summary>
            Called when feature / form containing this command was dirtied.
            </summary>
            <param name="setDirty">True to set it as dirty, false otherwise</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandManager.HookControlAddedEvent(System.Windows.Forms.Control)">
            <summary>
            This method is called in designtime when the Site property is set. 
            We hook ControlAdded event on the parent container to keep track of controls added outside the
            Command manager designer. 
            <remarks>
            Why is this implemented this way? why is the designer not enumerating the controls when opened. 
            Enumerating controls will only get controls on the form while the designer will enable controls on the 
            predefined locations as toolbar and main menues to be added as well. 
            </remarks>
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandManager.UnhookControlAddedEvent(System.Windows.Forms.Control)">
            <summary>
            See HookControlAddedEvent for more infomration.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCommandManager.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndCommandManager.DoIncludeStandardContextMenu">
            <summary>
            Event used to include standard menu items to context menues.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandManager.Commands">
            <summary>
             Gets the collection of FndCommand controls assigned to the FndCommandManager.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandManager.ImageList">
            <summary>
             Gets or sets the collection of images available to the FndCommandManager controls.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandManager.ContextMenus">
            <summary>
            Gets the collection of FndContextMenuStrip controls assigned to the FndCommandManager.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandManager.MainMenuItems">
            <summary>
            Gets the collection of FndMenuItem controls assigned to the FndCommandManager.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandManager.PreDefinedLocations">
            <summary>
            Gets the collection of FndPreDefinedLocation objects assigned to the FndCommandManager.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandManager.Parent">
            <summary>
            Gets or sets the parent Container control of the Command manager
            </summary>
            <value>
            The parent container control
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandManager.Components">
            <summary>
            Gets the collection of Components assigned to the FndCommandManager.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCommandManager.Site">
            <summary>
            Overidden, See <see cref="T:System.ComponentModel.Component"/>
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.ComponentCollection">
            <summary>
            Summary description for ComponentCollection.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.ComponentCollection.Add(System.ComponentModel.Component)">
            <summary>
            Appends the specified Component to the end of the collection.  
            </summary>
            <param name="component">The Component to add.</param>
            <returns>The zero-based index value of the Component added to the collection.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.ComponentCollection.Insert(System.Int32,System.ComponentModel.Component)">
            <summary>
            Inserts an existing Component in the Component collection at the specified location. 
            </summary>
            <param name="index">The indexed location within the collection to insert the Component.</param>
            <param name="component">The Component to insert into the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.ComponentCollection.Remove(System.ComponentModel.Component)">
            <summary>
            Removes a Component from the Component collection at a specified index.
            </summary>
            <param name="component">The index of the Component to remove.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.ComponentCollection.CopyTo(System.ComponentModel.Component[],System.Int32)">
            <summary>
            Copies the Components or a portion of it to a one-dimensional array.
            </summary>
            <param name="component">The destination array.</param>
            <param name="index">The index in the destination array at which storing begins.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.ComponentCollection.Contains(System.ComponentModel.Component)">
            <summary>
            Determines whether an Component is in the ComponentCollection.
            </summary>
            <param name="component">The Component to locate in the ComponentCollection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.ComponentCollection.IndexOf(System.ComponentModel.Component)">
            <summary>
            Determines the index of a specific Component in the ComponentCollection. 
            </summary>
            <param name="component">The Component to locate in the ComponentCollection.></param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.ComponentCollection.OnComponentAdded(System.Object)">
            <summary>
            Raises the ComponentAdded event.
            </summary>
            <param name="component">The component which was added to the collection</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.ComponentCollection.OnComponentRemoved(System.Object)">
            <summary>
            Raises the ComponentRemoved event.
            </summary>
            <param name="component">The component which was removed from the collection</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.ComponentCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after an element is inserted to the collection.
            </summary>
            <param name="index">The index at which the insertion took place.</param>
            <param name="value">The object which was inserted</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.ComponentCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after an element is removed from the collection.
            </summary>
            <param name="index">The index from which the element was removed.</param>
            <param name="value">The object which was removed from the collection.</param>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.ComponentCollection.ComponentAdded">
            <summary>
            Occurs when a component is added to the collection.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.ComponentCollection.ComponentRemoved">
            <summary>
            Occurs when a component is removed from the collection.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.ComponentCollection.Item(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndContextMenuCollection">
            <summary>
            Summary description for FndContextMenuCollection.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuCollection.Add(Ifs.Fnd.Windows.Forms.FndContextMenuStrip)">
            <summary>
            Appends the specified FndContextMenuStrip to the end of the collection.
            </summary>
            <param name="contextMenu">The FndContextMenuStrip to add.</param>
            <returns>The zero-based index value of the FndContextMenuStrip added to the collection.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuCollection.Insert(System.Int32,Ifs.Fnd.Windows.Forms.FndContextMenuStrip)">
            <summary>
            Inserts an existing FndContextMenuStrip in the FndContextMenuStrip collection at the specified location. 
            </summary>
            <param name="index">The indexed location within the collection to insert the FndContextMenuStrip.</param>
            <param name="contextMenu">The FndContextMenuStrip to insert into the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuCollection.Remove(Ifs.Fnd.Windows.Forms.FndContextMenuStrip)">
            <summary>
            Removes a FndContextMenuStrip from the FndContextMenuStrip collection at a specified index.
            </summary>
            <param name="contextMenu">The index of the FndContextMenuStrip to remove.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuCollection.CopyTo(Ifs.Fnd.Windows.Forms.FndContextMenuStrip[],System.Int32)">
            <summary>
            Copies the FndContextMenuStrip or a portion of it to a one-dimensional array.
            </summary>
            <param name="contextMenu">The destination array.</param>
            <param name="index">The index in the destination array at which storing begins.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuCollection.Contains(Ifs.Fnd.Windows.Forms.FndContextMenuStrip)">
            <summary>
            Determines whether an FndContextMenuStrip is in the FndContextMenuCollection.
            </summary>
            <param name="contextMenu">The Component to locate in the FndContextMenuCollection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuCollection.IndexOf(Ifs.Fnd.Windows.Forms.FndContextMenuStrip)">
            <summary>
            Determines the index of a specific FndContextMenuStrip in the FndContextMenuCollection. 
            </summary>
            <param name="contextMenu">The FndContextMenuStrip to locate in the FndContextMenuCollection.></param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the FndContextMenuCollection instance.  
            </summary>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="value">The new value of the element at index.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing an element from the FndContextMenuCollection instance.  
            </summary>
            <param name="index">The zero-based index at which value can be found.</param>
            <param name="value">The value of the element to remove from index.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndContextMenuCollection.Item(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndPreDefinedLocation">
            <summary>
            Summary description for FndPreDefinedLocation.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndPreDefinedLocation.#ctor(System.String,System.String,Ifs.Fnd.Windows.Forms.FndPreDefinedLocation.FndPreDefinedLocationHolderType)">
            <summary>
            Initializes a new instance of the FndPreDefinedLocation class.
            </summary>
            <param name="id">The id of a predefined location.</param>
            <param name="name">The name of a predefined location.</param>
            <param name="holderType">The holder type of a predefined location.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndPreDefinedLocation.Name">
            <summary>
            Gets or sets the name of a predefined location.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndPreDefinedLocation.Id">
            <summary>
            Gets or sets the id of a predefined location.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndPreDefinedLocation.PreDefinedLocations">
            <summary>
            Gets the collection of PreDefinedLocations assigned to the PreDefinedLocation. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndPreDefinedLocation.HolderType">
            <summary>
            Gets or sets the  holder type of a predefined location.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndPreDefinedLocation.FndPreDefinedLocationHolderType">
            <summary>
             Specifies the holder type for a predefined location.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndPreDefinedLocation.FndPreDefinedLocationHolderType.MainMenu">
            <summary>
            Specifies that the predifined location is part of the MainMenu.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndPreDefinedLocation.FndPreDefinedLocationHolderType.ContextMenu">
            <summary>
            Specifies that the predifined location is part of a ContextMenu.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndPreDefinedLocation.FndPreDefinedLocationHolderType.MenuItem">
            <summary>
            Specifies that the predifined location is part of a MenuItem.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndPreDefinedLocation.FndPreDefinedLocationHolderType.ToolBar">
            <summary>
            Specifies that the predifined location is part of a ToolBar.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndPreDefinedLocation.FndPreDefinedLocationHolderType.ToolBarButton">
            <summary>
            Specifies that the predifined location is part of a ToolBarButton.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndPreDefinedLocation.FndPreDefinedLocationHolderType.Button">
            <summary>
            Specifies that the predefined location is a Button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndPreDefinedLocation.FndPreDefinedLocationHolderType.LinkLabel">
            <summary>
            Specifies that the predefined location is a LinkLabel.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndPreDefinedLocationCollection">
            <summary>
            Summary description for FndPreDefinedLocationCollection.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndPreDefinedLocationCollection.Add(Ifs.Fnd.Windows.Forms.FndPreDefinedLocation)">
            <summary>
            Appends the specified FndPreDefinedLocation to the end of the collection. 
            </summary>
            <param name="fndPreDefinedLocation">The FndPreDefinedLocation to add.</param>
            <returns>The zero-based index value of the FndPreDefinedLocation added to the collection.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndPreDefinedLocationCollection.Insert(System.Int32,Ifs.Fnd.Windows.Forms.FndPreDefinedLocation)">
            <summary>
            Inserts an existing FndPreDefinedLocation in the FndPreDefinedLocation collection at the specified location. 
            </summary>
            <param name="index">The indexed location within the collection to insert the FndPreDefinedLocation.</param>
            <param name="fndPreDefinedLocation">The FndPreDefinedLocation to insert into the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndPreDefinedLocationCollection.Remove(Ifs.Fnd.Windows.Forms.FndPreDefinedLocation)">
            <summary>
            Removes a FndPreDefinedLocation from the Component collection at a specified index.
            </summary>
            <param name="fndPreDefinedLocation">The index of the FndPreDefinedLocation to remove.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndPreDefinedLocationCollection.CopyTo(Ifs.Fnd.Windows.Forms.FndPreDefinedLocation[],System.Int32)">
            <summary>
            Copies the FndPreDefinedLocations or a portion of it to a one-dimensional array.
            </summary>
            <param name="preDefinedLocation">The destination array.</param>
            <param name="index">The index in the destination array at which storing begins.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndPreDefinedLocationCollection.Contains(Ifs.Fnd.Windows.Forms.FndPreDefinedLocation)">
            <summary>
            Determines whether an FndPreDefinedLocation is in the FndPreDefinedLocationCollection.
            </summary>
            <param name="preDefinedLocation">The Component to locate in the FndPreDefinedLocationCollection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndPreDefinedLocationCollection.IndexOf(Ifs.Fnd.Windows.Forms.FndPreDefinedLocation)">
            <summary>
            Determines the index of a specific FndPreDefinedLocation in the FndPreDefinedLocationCollection. 
            </summary>
            <param name="preDefinedLocation">The FndPreDefinedLocation to locate in the FndPreDefinedLocationCollection.></param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndPreDefinedLocationCollection.Item(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolStripMenuItemCollection">
            <summary>
            Summary description for <b>FndToolStripMenuItemCollection</b>.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItemCollection.Add(Ifs.Fnd.Windows.Forms.FndToolStripMenuItem)">
            <summary>
            Appends the specified FndToolStripMenuItem to the end of the collection.  
            </summary>
            <param name="mainMenu">The FndToolStripMenuItem to add.</param>
            <returns>The zero-based index value of the FndToolStripMenuItem added to the collection.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItemCollection.Insert(System.Int32,Ifs.Fnd.Windows.Forms.FndToolStripMenuItem)">
            <summary>
            Inserts an existing FndToolStripMenuItem in the FndToolStripMenuItem collection at the specified location. 
            </summary>
            <param name="index">The indexed location within the collection to insert the FndToolStripMenuItem.</param>
            <param name="mainMenu">The FndToolStripMenuItem to insert into the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItemCollection.Remove(Ifs.Fnd.Windows.Forms.FndToolStripMenuItem)">
            <summary>
            Removes a FndToolStripMenuItem from the FndToolStripMenuItem collection at a specified index.
            </summary>
            <param name="mainMenu">The index of the FndToolStripMenuItem to remove.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItemCollection.CopyTo(Ifs.Fnd.Windows.Forms.FndToolStripMenuItem[],System.Int32)">
            <summary>
            Copies the FndMenuItems or a portion of it to a one-dimensional array.
            </summary>
            <param name="menuItem">The destination array.</param>
            <param name="index">The index in the destination array at which storing begins.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItemCollection.Contains(Ifs.Fnd.Windows.Forms.FndToolStripMenuItem)">
            <summary>
            Determines whether an FndToolStripMenuItem is in the collection.
            </summary>
            <param name="menuItem">The Component to locate in the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItemCollection.IndexOf(Ifs.Fnd.Windows.Forms.FndToolStripMenuItem)">
            <summary>
            Determines the index of a specific FndToolStripMenuItem in the collection. 
            </summary>
            <param name="menuItem">The FndToolStripMenuItem to locate in the collection.></param>
            <returns>The index of value if found in the list; otherwise, -1.</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripMenuItemCollection.Item(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.IFndMenuItem">
            <summary>
            This interface should be implemented by any class that represents a menu item.
            e.g. menu items, separators, etc.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.IFndMenuItem.ContextMenuSection">
            <summary>
            Gets or Sets section which the MenuItem is placed in a context menu. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.IFndMenuItem.RelativeIndex">
            <summary>
            Gets or sets the index of the menu item relative to other commands. The items will 
            be displayed in order of this index.
            </summary>
            <value>
            The index of the menu item...
            Leave -1 if the index can be placed anywhere...
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.IFndToolStripItem">
            <summary>
            This interface should be implemented by any class that represents a toolstrip item.
            e.g. buttons, dropdown buttons, split buttons, separators, etc.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.IFndToolStripItem.ToolStripSection">
            <summary>
            Gets or Sets section on which the item is placed in owner toolstrip. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.IFndToolStripItem.PlacementIndex">
            <summary>
            Gets or sets the position on the owner toolstrip to insert the item. The items will 
            be displayed in order of this index.
            </summary>
            <value>
            The index of the toolstrip item.
            Leave -1 if the item should be added at the end.
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation">
            <summary>
            Summary description for FndCommandUILocation.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.LocationInternalMenuFile">
            <summary>
            The internal File menu, "internalMenuFile"
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.LocationMainMenuFile">
            <summary>
            The main File menu, "mainMenuFile"
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.LocationInternalMenuView">
            <summary>
            The internal View menu, "internalMenuView"
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.LocationMainMenuView">
            <summary>
            The main View menu, "mainMenuView"
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.LocationInternalMenuTools">
            <summary>
            The internal Tools menu, "internalMenuTools"
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.LocationMainMenuTools">
            <summary>
            The main Tools menu, "mainMenuTools"
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.LocationMainMenuHelp">
            <summary>
            The main Help menu, "mainMenuHelp"
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.LocationNavigatorContextMenu">
            <summary>
            The Navigator context menu, "navigatorContextMenu"
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.LocationStandardContextMenu">
            <summary>
            The standard context menu, "standardContextMenu"
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.LocationFrameworkPageToolBar">
            <summary>
            The Page Toolbar , "frameworkPageToolBar"
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.LocationMainToolBar">
            <summary>
            The Main Toolbar , "mainToolBar"
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.#ctor">
            <summary>
            Initializes a new instance of the FndCommandUILocation class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.#ctor(System.String,System.ComponentModel.Component,System.Int32,Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUIProvider)">
            <summary>
            Initializes a new instance of the FndCommandUILocation class.
            </summary>
            <param name="location">The name of a predefined location.</param>
            <param name="parent">The parent component that holds the collection for the predefined location.</param>
            <param name="childIndex">Index where to insert the predefined location in the parents collection. 
            						 -1 = Always apppend at the end of the collection.
            						  0 = Always insert at the first position of the collection. 
            						  x = Insert at a specific location of the collection.
            </param>
            <param name="provider">FndCommandUIProvider that provides the UI location.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.#ctor(System.String,System.ComponentModel.Component,Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.FndCommandUILocationInsertPosition,Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUIProvider)">
            <summary>
            Initializes a new instance of the FndCommandUILocation class.
            </summary>
            <param name="location">The name of a predefined location.</param>
            <param name="parent">The parent component that holds the collection for the predefined location.</param>
            <param name="position">Position where to insert the predefined location in the parents collection.  
            insert at the first position of the collection or at the end of the collection. If you want
            to specify an exact location, use overloaded constructor with int parameter.
            </param>
            <param name="provider">FndCommandUIProvider that provides the UI location.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.LocationName">
            <summary>
            Gets the location name.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.ParentComponent">
            <summary>
            Gets the parent component that holds the collection.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.UIProvider">
            <summary>
            Gets or sets the <see cref="T:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUIProvider"/> instance that owns this location.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.ChildIndex">
            <summary>
            Gets or sets the index where to insert the predefined location in the parents collection
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.InsertPosition">
            <summary>
            Sets the position where to insert the predefined location in the parents collection
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.FndCommandUILocationInsertPosition">
            <summary>
            Position where to insert the predefined location in the parents collection.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.FndCommandUILocationInsertPosition.InFront">
            <summary>
            Predefined location is inserted at the front.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation.FndCommandUILocationInsertPosition.AtEnd">
            <summary>
            Predefined location is inserted at the end.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocationDictionary">
            <summary>
            Summary description for FndCommandUILocationDictionary.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocationDictionary.Add(Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation)">
            <summary>
            Adds an entry into the FndCommandUILocation.  
            </summary>
            <param name="location">The FndCommandUILocation to add.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocationDictionary.Contains(System.String)">
            <summary>
            Determines whether the FndCommandUILocationDictionary contains a specific key.  
            </summary>
            <param name="key">The key to locate in the FndCommandUILocationDictionary.</param>
            <returns> true if the FndCommandUILocationDictionary contains an entry with the specified key; otherwise, false.  </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocationDictionary.Remove(System.String)">
            <summary>
            Removes the entry with the specified key from the FndCommandUILocationDictionary.  
            </summary>
            <param name="key">The key of the entry to remove.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocationDictionary.CopyTo(Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocation[],System.Int32)">
            <summary>
            Copies the FndCommandUILocations or a portion of it to a one-dimensional array.
            </summary>
            <param name="array">The destination array.</param>
            <param name="index">The index in the destination array at which storing begins.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUILocationDictionary.Item(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUIProvider">
            <summary>
            Summary description for FndCommandUIProvider.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUIProvider.SetMainMenu(System.Windows.Forms.MenuStrip,System.Int32)">
            <summary>
            Sets the FndMainMenu where the predefined locations should be inserted. 
            </summary>
            <param name="mainMenu">The <see cref="T:System.Windows.Forms.MenuStrip"/> to insert new <see cref="T:System.Windows.Forms.ToolStripMenuItem"/> in.</param>
            <param name="childIndex">The index where the new <b>ToolStripMenuItems</b> should be inserted.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUIProvider.LoadCommandManager(Ifs.Fnd.Windows.Forms.FndCommandManager)">
            <summary>
            Loads a command manager so the menu items and toolbar buttons are visible in the main application.
            </summary>
            <param name="commandManager">The command manager including the menu items and toolbar buttons.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUIProvider.UnloadCommandManager(Ifs.Fnd.Windows.Forms.FndCommandManager)">
            <summary>
            Unload the current command manager to remove all the including menu items and toolbar buttons.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUIProvider.UILocationsLoaded">
            <summary>
            This event is raised after all the components of a given <see cref="T:Ifs.Fnd.Windows.Forms.FndCommandManager"/> instance
            has been loaded into the predefined locations of the main explorer form.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUIProvider.StandardToolbarVisible">
            <summary>
            Gets or sets a boolean flag indicating whether the standard toolbar buttons on the feature toolbar are visible.
            </summary>
            <value><b>true</b>, standard toolbar buttons are visible.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUIProvider.AreOverloadsAdded">
            <summary>
            FRAMEWORK FUNCTIONALITY - DO NOT USE!
            Gets or sets whether command overloads are added or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndCommandUIProvider.UILocations">
            <summary>
            Gets the collection of FndCommandUILocation assigned to the FndCommandUIProvider.  
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndMenuItemLocations">
            <summary>
            Structure containing constants to be used with positioning menu items.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndMenuItemLocations.file">
            <summary>
            Position of the file Main Menu
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndMenuItemLocations.view">
            <summary>
            Position of the View Main Menu
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndMenuItemLocations.tools">
            <summary>
            Position of the Tools Main Menu
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndMenuItemLocations.window">
            <summary>
            Position of the Window Main Menu.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndMenuItemLocations.help">
            <summary>
            Position of the Help Main Menu.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndMenuItemLocations.fileFeatureSection">
            <summary>
            Position of the File -> Feature Section
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndMenuItemLocations.filePluginSection">
            <summary>
            Position of the File -> Plugin Section
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndMenuItemLocations.fileCloseThisWindow">
            <summary>
            Position of the File -> Close This Window menu item
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndMenuItemLocations.fileExit">
            <summary>
            Position of the File -> Exit menu item
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndMenuItemLocations.helpHelp">
            <summary>
            Position of the Help -> Help menu item
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndMenuItemLocations.helpWhatsThis">
            <summary>
            Position of the Help -> Whats This menu item
            </summary>		
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndMenuItemLocations.helpAbout">
            <summary>
            Position of the Help -> About menu item
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndMenuItemLocations.contextMenuFeatureSection">
            <summary>
            Positions of the feature menu options placed in the standard context menu
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndMenuItemLocations.contextMenuPluginSection">
            <summary>
            Positions of the plugins placed in the standard context menu
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndMenuItemLocations.contextMenuControlSection">
            <summary>
            Position of the Control menu items in the context menu.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndMenuItemLocations.contextMenuPropertiesSection">
            <summary>
            Position of the properties menu items in the context menu.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndMenuItemLocations.contextMenuNavigationSection">
            <summary>
            Positions of the framework navigation menu options placed in the standard context menu
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndContextMenuLocations">
            <summary>
            Enumeration to be used with positioning menu items in context menus.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndContextMenuLocations.FeatureSection">
            <summary>
            Context menu items belonging to Features
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndContextMenuLocations.PluginSection">
            <summary>
            Context menu items belonging to Plugins
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndContextMenuLocations.ControlSection">
            <summary>
            Context menu items belonging to Controls
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndContextMenuLocations.PropertiesSection">
            <summary>
            Properties control menu items
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndContextMenuLocations.NavigationSection">
            <summary>
            Default context menu items
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripItemLocations">
            <summary>
            Structure containing constants to be used with positioning toolstrip items.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripItemLocations.Populate">
            <summary>
            Query button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripItemLocations.Query">
            <summary>
            Query button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripItemLocations.Save">
            <summary>
            Save button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripItemLocations.Separator1">
            <summary>
            Internal separator 1.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripItemLocations.AddNew">
            <summary>
            New button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripItemLocations.Duplicate">
            <summary>
            Duplicate button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripItemLocations.Remove">
            <summary>
            Delete button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripItemLocations.Separator2">
            <summary>
            Internal separator 2.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripItemLocations.Lov">
            <summary>
            LOV button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripItemLocations.Zoom">
            <summary>
            Zoom button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripItemLocations.Drafts">
            <summary>
            Drafts button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripItemLocations.WhatsThis">
            <summary>
            What's This button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripItemLocations.TouchContextMenu">
            <summary>
            TouchContextMenu button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripItemLocations.Chart">
            <summary>
            Chart button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripItemLocations.InformationCards">
            <summary>
            Information Cards button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripItemLocations.Notes">
            <summary>
            Notes button.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripSections">
            <summary>
            Enumeration to be used when placing items in the Feature ToolStrip.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripSections.FeatureSection">
            <summary>
            Feature specific items
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommandUIProvider.FndToolStripSections.FrameworkSection">
            <summary>
            Items added by the Framework
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.DataPanel.FndDataActionsControl">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.DataPanel.FndDataMemberType">
            <summary>
            Valid types of data members.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.DataPanel.FndDataNavigationControl">
            <summary>
            Summary.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel">
            <summary>
            Base class for all controls using complex data binding.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.AddNew">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.Delete">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.Add(System.Windows.Forms.Control)">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.Clear">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.Remove(System.Windows.Forms.Control)">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.ToString">
            <summary>
            Overridden.  See <see cref="T:System.Windows.Forms.Panel"/>
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.#ctor">
            <summary>
            Creates a new instance of the <b>FndDataPanel</b>.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.DataSourceChanged">
            <summary>
            Fires when data in the bound data store has been changed.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.DataInfrastructureInitialized">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.MovedFirst">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.MovedLast">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.MovedNext">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.MovedPrevious">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.MovingFirst">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.MovingLast">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.MovingNext">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.MovingPrevious">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.PositionChanged">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.PositionChanging">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.CurrentChanged">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.CurrentChanging">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.AddedNew">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.AddingNew">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.Deleted">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.Deleting">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.Edited">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.Editing">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.DataSource">
            <summary>
            Use this property to get or set a list data source that inherit from FndBindingListBase.
            </summary>
            <value>
            An object that functions as a data source.
            </value>
            <remarks>
            TODO: Update this --&gt; At run time, use <see cref="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.DataSource"/> to set this property.
            See the <see cref="T:System.Windows.Forms.Binding"/> class documentation for more information on data sources.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.ParentDataSource">
            <summary>
            The parent data source.
            </summary>
            <value>
            The parent data source.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.EventWiringInProgress">
            <summary>
            Gets or sets the indicator for event wiring activity.
            </summary>
            <remarks>
            This property should only be used at runtime.
            Returns <b>true</b> if the control is currently busy
            subscribing or unsubscribing to events.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.Properties">
            <summary>
            Gets the <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/>
            for the currently bound data-list.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.Count">
            <summary>
            Gets number of objects in the scope of the <see cref="T:System.Windows.Forms.CurrencyManager"/>
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.Current">
            <summary>
            Gets current object in the scope of the <see cref="T:System.Windows.Forms.CurrencyManager"/>
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.CurrentParent">
            <summary>
            Gets current object in the scope of the <see cref="T:System.Windows.Forms.CurrencyManager"/>
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.List">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.Position">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.ShowAddNewButton">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.ShowEditButton">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.ShowDeleteButton">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.ShowNavigationPanel">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanel.ShowActionsPanel">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanelAddNewEventHandler">
            <summary>
            Represents the method that will handle adding of a new data item.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanelAddNewEventArgs">
            <summary>
            Summary.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanelAddNewEventArgs.#ctor(System.Boolean)">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanelAddNewEventArgs.NewObject">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataPanelAddNewEventArgs.Handled">
            <summary>
            TODO: Add documentation here.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper">
             <summary>
             Special wrapper class implementing the most important interfaces for 
             interaction with the data source.
             </summary>
             <remarks>
             <list type="bullet">
             <description>The implemented interfaces are as follows:</description>
             <item>
             <see cref="T:System.Collections.IList"/>. 
             </item>
             <item>
             <see cref="T:System.ComponentModel.IBindingList"/>. Provides the features 
             required to support both complex and simple scenarios when binding to 
             a data source.
             </item>
             <item>
             <see cref="T:System.Collections.ICollection"/>. Defines size, 
             enumerators and synchronization methods for a collection.
             </item>
             <item>
             <see cref="T:System.Collections.IEnumerable"/>. Exposes an enumerator, 
             which supports iteration over a collection.
             </item>
             <item>
             <see cref="T:System.ComponentModel.ITypedList"/>. Provides functionality 
             to discover the schema for a bindable list where the properties available 
             for binding differ from the public properties of the object to bind to.
             </item>
             </list>
             <b>Note!</b> An explicit cast to the interface type is required
             in order to use any of the above interface implementation.
            </remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Adds a <see cref="T:System.ComponentModel.PropertyDescriptor"/>  
            to the indexes used for searching.
            </summary>
            <param name="property">
            A <see cref="T:System.ComponentModel.PropertyDescriptor"/> to add 
            to the indexes used for searching.
            </param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#ComponentModel#IBindingList#AddNew">
            <summary>
            Adds a new item to the list.
            </summary>
            <returns>
            The item added to the list.
            </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the list based on a <see cref="T:System.ComponentModel.PropertyDescriptor"/> 
            and a <see cref="T:System.ComponentModel.ListSortDirection"/>.
            </summary>
            <param name="property">
            The <see cref="T:System.ComponentModel.PropertyDescriptor"/> to sort by.
            </param>
            <param name="sort">
             One of the <see cref="T:System.ComponentModel.ListSortDirection"/> values.
            </param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#ComponentModel#IBindingList#Find(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Returns the index of the row that has the given 
            <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </summary>
            <param name="property">
            The <see cref="T:System.ComponentModel.PropertyDescriptor"/> to search on.
            </param>
            <param name="key">
            The value of the property parameter to search for.
            </param>
            <returns>
            The index of the row that has the given <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Removes the <see cref="T:System.ComponentModel.PropertyDescriptor"/> 
            from the indexes used for searching.
            </summary>
            <param name="property">
            The <see cref="T:System.ComponentModel.PropertyDescriptor"/> 
            that should be removed from the indexes used for searching.
            </param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#ComponentModel#IBindingList#RemoveSort">
            <summary>
            Removes any sort applied using <see cref="M:System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)"/>.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to add to the <see cref="T:System.Collections.IList"/>.
            </param>
            <returns>
            The position into which the new element was inserted.
            </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#Collections#IList#Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.IList"/>.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IList"/> 
            contains a specific value.
            </summary>
            <param name="item">
            A <see cref="T:System.Object"/> that should be located in the 
            <see cref="T:System.Collections.IList"/>.
            </param>
            <returns>
            <b>true</b> if the <see cref="T:System.Object"/> is found in the 
            <see cref="T:System.Collections.IList"/>, otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to locate in the <see cref="T:System.Collections.IList"/>.
            </param>
            <returns>
            Index of the value if found in the list, otherwise -1.
            </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item into the <see cref="T:System.Collections.IList"/> 
            at the specified position.
            </summary>
            <param name="index">
            Zero-based index at which the value should be inserted.
            </param>
            <param name="item">
            The <see cref="T:System.Object"/> to insert into the <see cref="T:System.Collections.IList"/>.
            </param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList"/>.
            </summary>
            <param name="item">
            The <see cref="T:System.Object"/> to remove from the <see cref="T:System.Collections.IList"/>.
            </param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Removes an item from an <see cref="T:System.Collections.IList"/> at a specified index.
            </summary>
            <param name="index">
            Zero-based index of the item to remove.
            </param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the System.Collections.ICollection 
            to an <see cref="T:System.Array"/>, starting at a particular 
            <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">
            The one-dimensional <see cref="T:System.Array"/> that is the 
            destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. 
            The array must have zero-based indexing.
            </param>
            <param name="index">
            The zero-based index in the array at which copying begins.
            </param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.IEnumerator"/> that can be used 
            to iterate through a collection. 
            </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#ComponentModel#ITypedList#GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
             <summary>
             Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> 
             that represents the properties on each item used to bind data.
             </summary>
             <param name="listAccessors">
             An array of <see cref="T:System.ComponentModel.PropertyDescriptor"/> 
             bound objects to get from the collection. The array can be null.
             </param>
             <returns>
             A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> 
             that contains properties for each item used to bind data.
            </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Returns the name of the list.
            </summary>
            <param name="listAccessors">
            An array of <see cref="T:System.ComponentModel.PropertyDescriptor"/> 
            objects, the list name for which is returned. The array can be null.
            </param>
            <returns>The name of the list.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.ResetList">
            <summary>
            Raises the <see cref="F:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.ListChanged"/> event in order to reset the
            undelying list.
            </summary>
            <remarks>
            The list index is set to -1.
            </remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.#ctor">
            <summary>
            Creates a new instance of the <b>FndDataSourceWrapper</b>
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#ComponentModel#IBindingList#ListChanged">
            <summary>
            Occurs when the list changes or an item in the list changes. 
            </summary>
            <remarks>
            Notifies the subscriber of any changes (additions, removals, 
            or edits) to the list.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#ComponentModel#IBindingList#AllowEdit">
            <summary>
            Gets indication on whether items in the list are updatable.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#ComponentModel#IBindingList#AllowNew">
            <summary>
            Gets indication on whether it is possible to add items to the 
            list using <see cref="M:System.ComponentModel.IBindingList.AddNew"/>.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#ComponentModel#IBindingList#AllowRemove">
            <summary>
            Gets an indication on whether it is possible to remove items from the 
            list using <see cref="M:System.Collections.IList.Remove(System.Object)"/> or 
            <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/>.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#ComponentModel#IBindingList#IsSorted">
            <summary>
            Gets an indication on whether the items in the list are sorted.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#ComponentModel#IBindingList#SortDirection">
            <summary>
            Gets the direction of the sort.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#ComponentModel#IBindingList#SortProperty">
            <summary>
            Gets the <see cref="T:System.ComponentModel.PropertyDescriptor"/> used for sorting.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#ComponentModel#IBindingList#SupportsChangeNotification">
            <summary>
            Gets an indication on whether a <see cref="E:System.ComponentModel.IBindingList.ListChanged"/> 
            event is raised when the list changes or an item in the list changes.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#ComponentModel#IBindingList#SupportsSearching">
            <summary>
            Gets an indication on whether the list supports searching using 
            the <see cref="M:System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)"/> method.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#ComponentModel#IBindingList#SupportsSorting">
            <summary>
            Gets an indication on whether the list supports sorting.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#Collections#IList#IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"/> has a fixed size.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#Collections#IList#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"/> is read-only.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets an item of the current <see cref="T:System.Collections.IList"/> instance.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#Collections#ICollection#Count">
            <summary>
            Gets the number of elements contained in the 
            <see cref="T:System.Collections.ICollection"/>.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the 
            <see cref="T:System.Collections.ICollection"/> is thread-safe. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.DataPanel.FndDataSourceWrapper.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the 
            <see cref="T:System.Collections.ICollection"/>.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.Alignment">
            <summary>
            Public Enumeration type which Specifies the Alignment of the Calendar
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.Alignment.Left">
            <summary>
            Left Justifies the MonthCalendar
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.Alignment.Right">
            <summary>
            Right Justifies the MonthCalendar
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.DateFormat">
            <summary>
            Public Enumeration type which Specifies the DateFormat for the FndDateTimePicker
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.DateFormat.Long">
            <summary>
            Displays only the Date Field in Long Date Format
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.DateFormat.Short">
            <summary>
            Displays only the Date Field in Short Date Format
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.DateFormat.Custom">
            <summary>
            Displays both the Date and Time in a Custom Format
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.DateFormat.LongDateTime">
            <summary>
            Displays both the Date and Time in Long Format
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.DateFormat.ShortDateTime">
            <summary>
            Displays both the Date and time in Short Date Format
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.DateFormat.ShortTime">
            <summary>
            Displays only the Time Field in Short Time Format
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.DateFormat.LongTime">
            <summary>
            Displays only the Time Field in Long Time Format
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.TimeFormat">
            <summary>
            Public Enumeration type which Specifies the TimeFormat for the FndDateTimePicker
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.TimeFormat.Time">
            <summary>
            Displays the Time in the Format which the Date is displayed 
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.TimeFormat.Custom">
            <summary>
            Displays the Time Custom Format
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.DateTimePickerMode">
            <summary>
            Public Enumeration type which Specifies the DisplayMode of the FndDateTimePicker
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.DateTimePickerMode.DateTime">
            <summary>
            Displays both Date and Time Fields of the FndDateTimePicker 
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.DateTimePickerMode.Date">
            <summary>
            Displays Only the Date Field 
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.DateTimePickerMode.Time">
            <summary>
            Displays Only the Time Field 
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndDateTimePicker">
            <summary>
            A Customized DateTimePicker can Act as a replacement for the MS DateTimePicker.
            </summary>
            <remarks>
            <b>FndDateTimePicker</b> provides additional functionality and provides the option of 
            Displaying the Time component Seperately. 
            </remarks>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.IFndLabelConnectedControl">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.IFndLabelConnectedControl.ConnectedLabel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.OnCurrentDateChanged">
            <summary>
            OnCurrentDateChanged
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.ShouldSerializeCurrentDate">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.ResetCurrentDate">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.SetEditorString(System.Object)">
            <summary>
            SetEditorString.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.OnIncorrectTextChange(System.String)">
            <summary>
            OnIncorrectTextChange.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.ButtonDownImage(System.Int32)">
            <summary>
            ButtonDownImage.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndDateTimePicker class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>
            Overrides <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)"/>
            </summary>
            <param name="e">Provides data for a cancelable event.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.OnResize(System.EventArgs)">
            <summary>
            Resize Method of the control overriden.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            OnLayout.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.Focus">
            <summary>
            Focus.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.GetFormattedDateTime(System.DateTime)">
            <summary>
            GetFormattedDateTime.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Functionlity yet to be implemented.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            ProcessCmdKey.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Raises the ReadOnlyChanged event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.OnCreateControl">
            <summary>
            Raises the <see cref="M:System.Windows.Forms.Control.CreateControl"/> event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.SetTheme">
            <summary>
            Set the Ifs specific theme
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDateTimePicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndDateTimePicker.CurrentDateChanged">
            <summary>
            Fires when the Selected DateTime Value is Changed.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndDateTimePicker.TextChanged">
            <summary>
            Fires when the Selected DateTime Value is Changed.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndDateTimePicker.ReadOnlyChanged">
            <summary>
            Occurs when the value of the ReadOnly property has changed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.ControlLayoutChanged">
            <summary>
            Gets or sets the value whether the layout has been changed
            </summary>
            <remarks>
            Implemented to suport DateTimePicker designer functionality no external use
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.DesignerAdjustments">
            <summary>
            Gets or sets the value of the adjustments made through the designer
            </summary>
            <remarks>
            Implemented to suport DateTimePicker designer functionality no external use
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.BackColor">
            <summary>
            Overrides BackColor property of the Usercontrol
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.BackgroundImage">
            <summary>
            Overrides BackgroundImage property of the Usercontrol
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.AutoScroll">
            <summary>
            Overrides AutoScroll property of the Usercontrol
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.AutoScrollMargin">
            <summary>
            Overrides AutoScrollMargin property of the Usercontrol
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.AutoScrollMinSize">
            <summary>
            Overrides AutoScrollMinSize property of the Usercontrol
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.DockPadding">
            <summary>
            Overrides DockPadding property of the Usercontrol
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.ForeColor">
            <summary>
            Overrides the ForeColor Property of the UserControl.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.Font">
            <summary>
            Overrides BackColor property of the Usercontrol
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.AutoSize">
            <summary>
            Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.DisplayMode">
            <summary>
            Gets or Sets the value which specifies the fields to be displayed.
            </summary>
            <value>DateTimePickerMode.</value>
            <remarks>
            If set to DateTime both the date and time parts would be displayed.
            If set to Date only the date part would be displayed.
            If set to time only the Time part would be displayed. 
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.DropDownAlign">
            <summary>
            Gets or Sets the Alignement of the FndMonthCalendar.
            </summary>
            <value>Ifs.Fnd.Windows.Forms.Alignment.</value>
            <remarks>
            Enables the user to adjust the Alignment of the MonthCalendar Dropdown
            <see cref="T:Ifs.Fnd.Windows.Forms.Alignment"/> </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.CurrentDateIsNull">
            <summary>
            Get or Sets Whether the Selected Date is a null Value.
            </summary>
            <value>bool</value>
            <remarks>
            Is used when the Control is FndDataBound. This Property is set to true 
            when the CurrentDate dosenot contain a valid value.
            <see cref="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.CurrentDate"/> </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.CurrentDate">
            <summary>
            Get or Sets the Selected Date in the Format of string.
            </summary>
            <value>DateTime</value>
            <remarks>
            Bindable property of the Type Value, cannot be set to null; incase of makeing the value null 
            make use of public property.
            <see cref="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.CurrentDateIsNull"/> </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.ShowErrorMessages">
            <summary>
            showErrorMessages.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.PreviousDate">
            <summary>
            PreviousDate.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.TextIsNull">
            <summary>
            Get or Sets Whether the Selected Date is a null Value.
            </summary>
            <value>bool</value>
            <remarks>
            Is used when the Control is FndDataBound. This Property is set to true 
            when the CurrentDate dosenot contain a valid value.
            <see cref="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.CurrentDate"/> </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.Text">
            <summary>
            Overridden. Gets or sets the text associated with this control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.DateFormat">
            <summary>
            Gets or sets the format of the Date displayed in the control.
            </summary>
            <value>Ifs.Fnd.Windows.Forms.DateFormat</value>
            <remarks>
            default value is <b>Ifs.Fnd.Windows.Forms.DateFormat.Short</b>
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.Checked">
            <summary>
            Gets or sets a value indicating whether the System.Windows.Forms.DateTimePicker.CurrentDate property 
            has been set with a valid DateTime value and the displayed value is able to be updated.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.CustomTimeFormat">
            <summary>
            Gets or sets the custom Time format string.
            </summary>
            <value>String</value>
            <remarks>
            Inorder to make use of this property the Format property of the FndDateTimePicker
            control should be set to <b>System.Windows.Forms.DateTimePickerFormat.Custom</b>
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.CustomDateFormat">
            <summary>
            Gets or sets the custom Date format string.
            </summary>
            <value>String</value>
            <remarks>
            Inorder to make use of this property the DateFormat property of the FndDateTimePicker
            control should be set to <b>System.Windows.Forms.DateTimePickerFormat.Custom</b>
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.SelectionStart">
            <summary>
            Gets or sets the starting point of text selected in the text box.
            </summary>
            <value>int</value>
            <remarks>
            Implemented to support FndDataGrid
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.SelectionLength">
            <summary>
            Gets or sets the number of characters selected in control.
            </summary>
            <value>int</value>
            <remarks>
            Implemented to support FndDataGrid
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.FrequencyList">
            <summary>
            Gets or sets the KeyWords and their frquencies in the format of string.
            </summary>
            <value>string</value>
            <remarks>
            being used only for profiling puprposes no external use.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.KeyWordList">
            <summary>
            Gets or Sets the Keywords and their Frequency Listing.
            </summary>
            <value>StructKeyWord[] a user defined structure</value>
            <remarks>
            Being used for frequenxy based ordering of Elements and no extrenal.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.ReadOnly">
            <summary>
            Gets or sets a value indicating whether text in the FndDateTimePicker is read-only.
            </summary>
            <value>
            <b>true</b> if the text box is read-only; otherwise, <b>false</b>. The default is <b>false</b>.
            </value>
            <remarks>
            This property is used by the framework to set the udpdatable state of the control when the control is data bound. 
            In such a situation setting this property at design time has no effect. To control the read-only behaviour even when 
            the control is data bound, first set the <see cref="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.AutoHandleUpdatable"/> property to <b>false</b>.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.ShowZeroTime">
            <summary>
            Gets or sets the value indication a zero time.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.BorderStyle">
            <summary>
            Gets or sets the border type of the reference box control.
            </summary>
            <value>One of the <see cref="T:System.Windows.Forms.BorderStyle"/> values.
            Default is <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D"/></value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.DateTimeValue">
            <summary>
            This is the property to use for binding when you need to allow null values in the dataset
            </summary>
            <value>object</value>
            <remarks>
            Special Property Included to support the DataGrid </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.ShowDropDown">
            <summary>
            Gets or Sets the value which says whether MonthCalendar DropDown should be displayed
            </summary>
            <value>bool</value>
            <remarks>
            Implemented to support the FndDataGrid where the default is false</remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.GapInBetween">
            <summary>
            Gets or sets a Gap between the Date Field and the TimeStamp.
            </summary>
            <value>int</value>
            <remarks>
            Applicable only when the Time component is displayed or when the DiplayTimeComponent
            is set to true
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.FieldSpacing">
            <summary>
            Gets or sets a Gap between the Date Field and the TimeStamp.
            </summary>
            <value>int</value>
            <remarks>
            Applicable only when the Time component is displayed or when the DiplayTimeComponent
            is set to true
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.MinDate">
            <summary>
            Gets or sets the minimum date that can be set using the FndDateTimePicker.
            </summary>
            <value>DateTime</value>
            <remarks>
            FndMonthCalendar min date has been taken as the default and is read only.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.MaxDate">
            <summary>
            Gets or sets the Maximum date that can be set using the FndDateTimePicker.
            </summary>
            <value>DateTime</value>
            <remarks>
            FndMonthCalendar Max date has been taken as the default and is read only.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.BindingContext">
            <summary>
            Overrides BindingContext property of the Usercontrol inorder to overcome the
            Data Refreshing problem encountered when used with complex controls Like the 
            IndexList, dataGrid ...etc 
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.Controls">
            <summary>
            Gets the collection of all the child controls of this object.
            </summary>
            <value>
            The collection of all the child controls of this object.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.IsValidComponent">
            <summary>
            Get or Set the Valid part of the component
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.Focused">
            <summary>
            Focused.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.Updatable">
            <summary>
            Gets or sets a value indicating whether the control is updatable or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.AutoHandleUpdatable">
            <summary>
            Gets or sets a value indicating whether the updatable state of the control
            is automatically handled or not.
            Note that this is only valid when the control is data bound.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.UseThemes">
            <summary>
            Gets or sets whether the theming should be used with this control.
            </summary>
            <value>
            True if the theming should be used, false otherwise
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.ConnectedLabel">
            <summary>
            Label connected to this control for showing a display text
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.DisplayText">
            <summary>
            Display text for the control
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDateTimePicker.WhatsThisControlId">
            <summary>
            Id used for fetching the whatsthis text
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.StructKeyWord">
            <summary>
            Structure which consists of a string Field "KeyWord" and a double Filed "Count"
            </summary>
            <remarks>
            Implemented to support the TypeAhead Functionality of the FndDateTimePicker based on the 
            Frequency of the KeyWord useage. The structure has been designed to hold the Keyword and 
            and itz frequency of usage as a double value
            </remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.StructKeyWord.#ctor(System.String,System.Int32)">
            <summary>
            Creates a new instance of StructKeyWord with given Parameters
            </summary>
            <param name="word"></param>
            <param name="frequency"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.StructKeyWord.Equals(System.Object)">
            <summary>
             Equals implemented because the default implementation on 
             System.ValueType will not perform as well as your custom implementation.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.StructKeyWord.GetHashCode">
            <summary>
            GetHashCode method overriden to allow the StructKeyWord
            type to work correctly in a hash table
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.StructKeyWord.op_Equality(Ifs.Fnd.Windows.Forms.StructKeyWord,Ifs.Fnd.Windows.Forms.StructKeyWord)">
            <summary>
            Override the Equals method whenever you implement ==, and make them do the same thing. 
            This allows infrastructure code such as Hashtable and ArrayList, which use the Equals method, 
            to behave the same way as user code written using ==. 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.StructKeyWord.op_Inequality(Ifs.Fnd.Windows.Forms.StructKeyWord,Ifs.Fnd.Windows.Forms.StructKeyWord)">
            <summary>
            Override the Equals method whenever you implement ==, and make them do the same thing. 
            This allows infrastructure code such as Hashtable and ArrayList, which use the Equals method, 
            to behave the same way as user code written using ==. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.StructKeyWord.Count">
            <summary>
            Holds the usage of the keyword
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.StructKeyWord.KeyWord">
            <summary>
            Holds the the keyword itself
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.SystemPanel">
            <summary>
            Summary description for SystemPanel.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.SystemPanel.AutoSize">
            <summary>
            AutoSize
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.SystemPanel.BackColor">
            <summary>
            Overrides BackColor property of the Usercontrol
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.SystemPanel.Text">
            <summary>
            Overrides Text
            </summary>	
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.ValidField">
            <summary>
            Represents the Part of the DateTime Value which is valid.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.ValidField.Date">
            <summary>
            Only the date part is Valid.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.ValidField.Time">
            <summary>
            Only the Time part is valid.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.ValidField.DateTime">
            <summary>
            Both Date and Time parts are valid.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.ValidField.None">
            <summary>
            None of the parts are valid.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.TextConverter">
            <summary>
            Initializes a new Instance of the TextConverter class
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.TextConverter.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.TextConverter class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.TextConverter.RefreshValueArrays">
            <summary>
            Refreshes the translated value array
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.TextConverter.ConvertText(System.String,System.String,System.DateTime)">
            <summary>
            Converts the String into a Date Format.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.TextConverter.ReplaceTranslatedTextWithEnglish(System.String)">
            <summary>
            Replaces all translated values with English text values.
            </summary>
            <param name="userText">DateTime text in local language</param>
            <returns>Translated text</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.TextConverter.IsValidEntry(System.String)">
            <summary>
            Check for valid date types supported by default DateTime.Parse() method.
            </summary>
            <param name="userText">DateTime text</param>
            <returns>Result of the validation</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.TextConverter.CurrentDateTime">
            <summary>
            Get or Set the Current DateTimeValue of the control
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.TextConverter.ValidComponent">
            <summary>
            Get or Set the Valid part of the component
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.TextConverter.IsDateTimeNull">
            <summary>
            Get or Set the Whether the CurrentDate Property of the FndDateTimePicker is set to true
            whether the DateTimeValue is null
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.TypeAheadTextBox">
            <summary>
            Summary description for TypeAheadTextBox.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.TypeAheadTextBox.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new Instance of TypeAheadTextBox.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.TypeAheadTextBox.#ctor">
            <summary>
            Initializes a new Instance of TypeAheadTextBox.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.TypeAheadTextBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.TypeAheadTextBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.KeyDown event.
            </summary>
            <param name="e">A System.Windows.Forms.KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.TypeAheadTextBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.KeyUp event.
            </summary>
            <param name="e">A System.Windows.Forms.KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.TypeAheadTextBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.TypeAheadTextBox.AutoCompleting">
            <summary>
            Indicates whether the control is performing the 'auto complete' operation
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndCheckBox">
            <summary>
            Extends the <see cref="T:System.Windows.Forms.CheckBox"/> control
            with IFS-specific behavior. 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCheckBox.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndCheckBox class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCheckBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCheckBox.OnClick(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)"/>.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCheckBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCheckBox.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Raises the ReadOnlyChanged event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndCheckBox.ReadOnlyChanged">
            <summary>
            Occurs when the value of the ReadOnly property has changed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCheckBox.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the check box is read-only.
            </summary>
            <value>
            <b>true</b> if the check box is read-only; otherwise, <b>false</b>. The default is <b>false</b>.
            </value>
            <remarks>
            This property is used by the framework to set the udpdatable state of the control when the control is data bound. 
            In such a situation setting this property at design time has no effect. To control the read-only behaviour even when 
            the control is data bound, first set the <see cref="P:Ifs.Fnd.Windows.Forms.FndCheckBox.AutoHandleUpdatable"/> property to <b>false</b>.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCheckBox.Updatable">
            <summary>
            Gets or sets a value indicating whether the control is updatable or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCheckBox.AutoHandleUpdatable">
            <summary>
            Gets or sets a value indicating whether the updatable state of the control
            is automatically handled or not.
            Note that this is only valid when the control is data bound.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCheckBox.DisplayText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCheckBox.WhatsThisControlId">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndColorPicker">
            <summary>
            Color picking control
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndColorPicker.#ctor">
            <summary>
            FndColorPicker
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndColorPicker.OnCreateControl">
            <summary>
            OnCreateControl 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndColorPicker.SetCustomColors(System.Drawing.Color[])">
            <summary>
            Give the color picker a custom range of colors.
            </summary>
            <param name="colorRange">An array of Colors</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndColorPicker.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Draws a color item
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndColorPicker.SelectedColor">
            <summary>
            Selected color
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndComboBox">
            <summary>
            Extends the <see cref="T:System.Windows.Forms.ComboBox"/> control
            with IFS-specific behavior. This class has additional functionality for FndEnumerations, 
            but you should consider using the FndEnumerationBox for that.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndComboBox"/> class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.BindListToEnumerationType(System.Type)">
            <summary>
            Fills combo with contents of an enumeration type 
            </summary>
            <param name="enumType">The enumeration type</param>
            <example>
            <code>
            fndComboBox1.BindListToEnumerationType(typeof(File.FileStateEnumeration));
            </code>
            </example>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.BindListToEnumerationItems(Ifs.Fnd.Data.FndEnumerationItemTable)">
            <summary>
            Fills combo with contents of a FndEnumerationItemTable
            </summary>
            <param name="enumItems">The FndEnumerationItemTable</param>
            <example>
            <code>
            fndComboBox1.BindListToEnumerationItems(enumItems);
            </code>
            </example>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Raises the ReadOnlyChanged event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.OnEnter(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.InitiateMru">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.OnValidated(System.EventArgs)">
             <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)"/>.
             </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)"/>.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            OnSelectedIndexChanged.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.OnSelectionChangeCommitted(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ComboBox.SelectionChangeCommitted" /> event.
            </summary>
            
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.InitLayout">
            <summary>
            OnLayout. 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            OnLayout. 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.OnCreateControl">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnCreateControl"/>.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)"/>.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ComboBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)"/>.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ComboBox.WndProc(System.Windows.Forms.Message@)"/>.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Specifies the bounds of the control
            </summary>
            <param name="x">The X Coordinate.</param>
            <param name="y">The Y Coordinate</param>
            <param name="width">The Width</param>
            <param name="height">The Height</param>
            <param name="specified"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndComboBox.SetTheme">
            <summary>
            Method to be used by the framework to invoke a reset of the control properties 
            that have been themed.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndComboBox.ReadOnlyChanged">
            <summary>
            Occurs when the value of the ReadOnly property has changed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.ApplicationMruEnabled">
            <summary>
            Gets whether Mru functionality is enabled at application level.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.ReadOnly">
            <summary>
            Gets or sets a value indicating whether text in the combo box is read-only.
            </summary>
            <value>
            <b>true</b> if the combo box is read-only; otherwise, <b>false</b>. The default is <b>false</b>.
            </value>
            <remarks>
            This property is used by the framework to set the udpdatable state of the control when the control is data bound. 
            In such a situation setting this property at design time has no effect. To control the read-only behaviour even when 
            the control is data bound, first set the <see cref="P:Ifs.Fnd.Windows.Forms.FndComboBox.AutoHandleUpdatable"/> property to <b>false</b>.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.DropDownStyle">
            <summary>
            Gets or sets the DropDownStyle of the combo box.
            </summary>
            <value>
            The Drop Down style of the combo box.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.SelectedValueIsNull">
            <summary>
            Returns true if the selected value is Null, false otherwise.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.AutoCompleteMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.AutoCompleteSource">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.AutoCompleteCustomSource">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.AutoInitializeMRU">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.Font">
            <summary>
            Font.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.BackColor">
            <summary>
            Gets or sets the background color of the control.
            </summary>
            <value>
            The background color of the control.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.ForeColor">
            <summary>
            Gets or sets the foreground color of the control
            </summary>
            <value>
            The foreground color of the control. 
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.Updatable">
            <summary>
            Gets or sets a value indicating whether the control is updatable or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.AutoHandleUpdatable">
            <summary>
            Gets or sets a value indicating whether the updatable state of the control is automatically handled or not.
            Note that this is only valid when the control is data bound.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.UseThemes">
            <summary>
            Gets or sets whether the theming should be used with this control.
            </summary>
            <value>
            True if the theming should be used, false otherwise
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.Mru">
            <summary>
            Gets or sets the mode of activation of Recently Used Values functionality.
            </summary>
            <value>
            <b>Default</b>  - will be activated conditionally (depending on the type of data contained in the field).
            <b>Disabled</b> - Disabled.
            <b>Enabled</b>  - will be activated regardless of the type of data contained.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.MruBehaviour">
            <summary>
            Gets or sets if Most Recently Used should be global or local.
            Global means that the Most Recently Used values will be accessible in all TextBoxes which have the same term.
            Local means that the Most Recently Used values will be local the this specific TextBox.
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.MruGlobalTerm">
            <summary>
            Gets or sets the term that descibes the data in the TextBox. 
            All textboxes with the same term will use the same Most Recently Used values if the MruBehaviour is set to global.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.MruObject">
            <summary>
            Gets Most Recently Used Object
            </summary>		
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.MruListDroppedDown">
            <summary>
            Gets whether the MRU list is currently shown.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.ConnectedLabel">
            <summary>
            Label connected to this control for showing a display text
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.DisplayText">
            <summary>
            Display text for the control
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndComboBox.WhatsThisControlId">
            <summary>
            Id used for fetching the whatsthis text
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndDelayedEventDispatcher">
            <summary>
            The <see cref="T:Ifs.Fnd.Windows.Forms.FndDelayedEventDispatcher"/> class implements support 
            for general delayed event handling.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDelayedEventDispatcher.#ctor(System.Delegate)">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndDelayedEventDispatcher"/> class with 
            the specified event delegate.
            </summary>
            <param name="eventDelegate">The delegate that actually raises or processes the delayed event.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDelayedEventDispatcher.#ctor(System.Delegate,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndDelayedEventDispatcher"/> class with 
            the specified event delegate and the period of time (in milliseconds) the event is delayed.
            </summary>
            <param name="eventDelegate">The delegate that actually raises or processes the delayed event.</param>
            <param name="delayMilliseconds">The period of time (in milliseconds) the event is delayed</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDelayedEventDispatcher.#ctor(System.Delegate,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndDelayedEventDispatcher"/> class with 
            the specified event delegate, the period of time (in milliseconds) the event is delayed and 
            whether the delayed event handling is active for events caused by mouse input.
            </summary>
            <param name="eventDelegate">The delegate that actually raises or processes the delayed event.</param>
            <param name="delayMilliseconds">The period of time (in milliseconds) the event is delayed</param>
            <param name="delayMouseEvents">A value indicating whether delayed event handling is active for events caused by mouse input.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDelayedEventDispatcher.Dispose">
            <summary>
            Disposes FndDelayedEventDispatcher
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDelayedEventDispatcher.RegisterAuthenticEvent(System.Object,System.EventArgs)">
            <summary>
            Registers an event for delayed processing.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndDelayedEventDispatcher.RegisterAuthenticEvent(System.Object,System.EventArgs,System.Boolean)">
            <summary>
            Registers an event for delayed processing.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
            <param name="eventCausedByMouse">A value indicating if the event was caused by mouse input.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDelayedEventDispatcher.DefaultDelay">
            <summary>
            Gets the default period of time (in milliseconds) that must pass before the associated 
            event is raised.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDelayedEventDispatcher.Delay">
            <summary>
            Gets or sets the time that passes before the associated event is fired.
            </summary>
            <value>
            The period of time (in milliseconds) that the associated event will be delayed, 
            before it is fired. The defalut value is the delay give by <see cref="P:Ifs.Fnd.Windows.Forms.FndDelayedEventDispatcher.DefaultDelay"/> property.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDelayedEventDispatcher.DelayEnabled">
            <summary>
            Gets or sets a value indicating whether the delayed even handling is enabled.
            </summary>
            <value><b>true</b> if delayed event handling is enabled, otherwise <b>false</b>. The default is <b>true</b>.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndDelayedEventDispatcher.DelayMouseEvents">
            <summary>
            Gets or sets a value indicating whether the delayed event handling is active 
            for events caused by mouse input.
            </summary>
            <value>
            <b>true</b> if delayed event handling feature is activefor events caused by mouse input, 
            otherwise <b>false</b>. The default value is <b>false</b>.
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndDialogResult">
            <summary>
            Type of dialog results
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogResult.OK">
            <summary>
            OKButton was clicked
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogResult.Cancel">
            <summary>
            CancelButton was clicked
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogResult.No">
            <summary>
            NoButton was clicked
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogResult.NoToAll">
            <summary>
            NoToAllButton was clicked
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogResult.Yes">
            <summary>
            YesButton was clicked
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogResult.YesToAll">
            <summary>
            YesToAllButton was clicked
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogResult.Continue">
            <summary>
            ContinueButton was clicked
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogResult.Abort">
            <summary>
            AbortButton was clicked
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogResult.Retry">
            <summary>
            AbortButton was clicked
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogResult.Ignore">
            <summary>
            AbortButton was clicked
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogResult.None">
            <summary>
            None 
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndDialogButton">
            <summary>
            Type of dialog buttons
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogButton.ButtonOK">
            <summary>
            OKButton 
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogButton.ButtonCancel">
            <summary>
            CancelButton 
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogButton.ButtonNo">
            <summary>
            NoButton 
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogButton.ButtonNoToAll">
            <summary>
            NoToAllButton 
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogButton.ButtonYes">
            <summary>
            YesButton 
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogButton.ButtonYesToAll">
            <summary>
            YesToAllButton  
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogButton.ButtonContinue">
            <summary>
            ContinueButton  
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndDialogButton.ButtonAbort">
            <summary>
            AbortButton  
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndButtonStyle">
            <summary>
            Type of dialog
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndButtonStyle.YesNo">
            <summary>
            Dialog with Yes and No buttons
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndButtonStyle.YesNoCancel">
            <summary>
            Dialog with Yes, No and Cancel buttons
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndButtonStyle.OKCancel">
            <summary>
            Dialog with Ok and Cancel buttons
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndButtonStyle.OKOnly">
            <summary>
            Dialog with Ok button
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndButtonStyle.ContinueAbort">
            <summary>
            Dialog with Contine and Abort buttons
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndButtonStyle.YesNoToAllCancel">
            <summary>
            Dialog with Yes, No, YesToAll, NoToAll and Cancel button
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndButtonStyle.None">
            <summary>
            Dialog with no buttons
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndButtonStyle.YesNoToAll">
            <summary>
            Dialog with Yes, No, YesToAll and NoToAll button
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndEnumerationBox">
            <summary>
            Specialized combo box class of type drop down list.
            This class is primarily designed to be used for data bound enumerations.
            </summary>
            <remarks>
            To use this control simply bind an enumeration attribute of a FndDataSet
            to the bind attribute SelectedValue.
            </remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndEnumerationBox.#ctor">
            <summary>
            Initializes a new instance of the FndEnumerationBox class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndEnumerationBox.OnSelectedValueChanged(System.EventArgs)">
            <summary>
            Overrides <b>FndComboBox.OnSelectedIndexChanged</b> method.
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndEnumerationBox.OnBindingContextChanged(System.EventArgs)">
            <summary>
            Overrides <b>FndComboBox.OnBindingContextChanged</b> method.
            </summary>
            <param name="e">Event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndEnumerationBox.BindingAdded(System.Object)">
            <summary>
            Notifies the control that a binding is added.
            </summary>
            <param name="binding">The binding object that is added.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndEnumerationBox.BindingRefreshed(System.Object)">
            <summary>
            Notifies the control that a binding is refreshed.
            </summary>
            <param name="binding">The binding object that is refreshed.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndEnumerationBox.BindingRemoved(System.Object)">
            <summary>
            Notifies the control that a binding is removed.
            </summary>
            <param name="binding">The binding object that is removed.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndEnumerationBox.ShowDropDownArrow">
            <summary>
            Gets or sets a property saying whether the drop down arrow should be displayed.
            </summary>
            <value>
            True if the arrow should be displayed, false otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndEnumerationBox.DataSource">
            <summary>
            Gets an object that specifies the data source that this control is bounded to.
            </summary>
            <remarks>
            This class hides the set operator becuase this member should not be set directly.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndEnumerationBox.DisplayMember">
            <summary>
            Gets a string that specifies the property of the data source whose contents is displayed.
            </summary>
            <remarks>
            This class hides the set operator becuase this member should not be set directly.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndEnumerationBox.ValueMember">
            <summary>
            Gets a string that specifies the property of the data source from which to draw the value.
            </summary>
            <remarks>
            This class hides the set operator becuase this member should not be set directly.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndEnumerationBox.DropDownStyle">
            <summary>
            Gets a value specifying the style of the combo box.
            </summary>
            <remarks>
            This specialized class only implement style DropDownList hence this property
            can not be set. 
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndEnumerationBox.SelectedEnumValue">
            <summary>
            Gets selected items term id, if exists.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndEnumerationBox.ReadOnly">
            <summary>
            Gets or sets a value indicating whether text in the combo box is read-only.
            </summary>
            <value>
            <b>true</b> if the combo box is read-only; otherwise, <b>false</b>. The default is <b>false</b>.
            </value>
            <remarks>
            This property is used by the framework to set the udpdatable state of the control when the control is data bound. 
            In such a situation setting this property at design time has no effect. To control the read-only behaviour even when 
            the control is data bound, first set the AutoHandleUpdatable property to <b>false</b>.
            </remarks>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl">
            <summary>
            A List that has a filter text field on top. Which can be 
            used to filter the items on the list. 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.#ctor">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl._Move(System.Boolean)">
            <summary>
            Moves items up/down
            </summary>
            <param name="down"></param>
            <returns>Was successful or not</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.PreserveMasterListOrder(System.Collections.Generic.List{Ifs.Fnd.Windows.Forms.CommonControls.FndListItem})">
            <summary>
            When Items are added to this, preserve the order from a master list.
            In other words, don't just add them to the end of the list. 
            </summary>
            <param name="masterList"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.MoveDown">
            <summary>
            Move the Selected Items one step down.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.MoveUp">
            <summary>
            Move the Selected Items one step up.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.MoveToTop">
            <summary>
            Move the Selected Items to the top.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.MoveToBottom">
            <summary>
            Move the Selected Items to the bottom.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.Add(Ifs.Fnd.Windows.Forms.CommonControls.FndListItem)">
            <summary>
            Add an item to the list.
            </summary>
            <param name="item">FndListItem to be added.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.Remove(Ifs.Fnd.Windows.Forms.CommonControls.FndListItem)">
            <summary>
            Removes an item from the list.
            </summary>
            <param name="item">FndListItem to be removed.</param>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.SearchType">
            <summary>
            Two search types available: Filter and Search. 
            Filter: Searches the list of items and brings the matching items to the top of the list.
            Search: Searches the list and highlights the matching items.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.SelectedIndices">
            <summary>
            Returns indices of the selected items on the list.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.SelectedItems">
            <summary>
            Returns the selected set of items.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.AllItems">
            <summary>
            Returns all the items in the list.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.DataSource">
            <summary>
            Represents the list items to outside
            If set, the list in the listbox is cleared, and all items are added again.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.SuspendUpdate">
            <summary>
            Suspend the update of the List UI. 
            Wait till the end to update while multiple items are added.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.OnListBoxDoubleClick">
            <summary>
            Fired on double click on the list box.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.SearchTypes">
            <summary>
            Two different types of Search are available.
            Filter and Highlight. 
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.SearchTypes.Filter">
            <summary>
            Filter: Shows the matching items by bringing them on the top of the list.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListControl.SearchTypes.Highlight">
            <summary>
            Hightlight: Highlights the matching items.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListModel">
            <summary>
            FilterableListModel is a list
            Additionally it has two lists, 
            one master list, one visible list which is the result after filtering.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListModel.Add(Ifs.Fnd.Windows.Forms.CommonControls.FndListItem)">
            <summary>
            Add a new item to the list.
            If a PreserveMasterListOrder() is assigned, then the newly added item 
            will be inserted to the proper location. 
            Else just a simple addition to the end of the list.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListModel.Clear">
            <summary>
            Clears Items from both visible list and the main
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListModel.Swap(System.Int32,System.Int32)">
            <summary>
            Swap two items
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListModel.PreserveMasterListOrder(System.Collections.Generic.List{Ifs.Fnd.Windows.Forms.CommonControls.FndListItem})">
            <summary>
            Since items are added/removed by the user, the order can get different.
            You can set a master list to refer to and preserve the items according to that order.
            </summary>
            <param name="masterList"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListModel.Remove(Ifs.Fnd.Windows.Forms.CommonControls.FndListItem)">
            <summary>
            Remove an item both from visible and main lists.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListModel._UpdateVisibleList">
            <summary>
            Filter the items depending on the filter text
            Show the filtered items, bold on top
            Rest below 
            Preserving the order
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListModel.CountChanged">
            <summary>
            Fires when the "matching count" changes.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListModel.FilterText">
            <summary>
            Filtertext used to filter items
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListModel.VisibleItems">
            <summary>
            Visible Items are bound to the listbox
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommonControls.FndListItem">
            <summary>
            Represents a list item of a FilterableListControl
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndListItem.#ctor(System.String)">
            <summary>
            Ctor.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndListItem.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.FndListItem.Value">
            <summary>
            Visible Label of the item.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.FndListItem.IsVisible">
            <summary>
            If this is a visible item.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.FndListItem.IsDefaultVisible">
            <summary>
            If this was default visible. 
            By F1 Properties.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.FndListItem.IsSelected">
            <summary>
            If this is selected.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommonControls.CountChangedEventArgs">
            <summary>
            EventArgs used to notify that the filter matched items count has changed.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommonControls.FndFilterableListBox">
            <summary>
            A listbox that can highlight its items based on a condition.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndForm">
            <summary>
            Subclass of System.Windows.Forms.Form which adds IFS specific
            functionality such as themeing.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndForm.CommandManager">
            <summary>
            Command manager object owned by the FndForm.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndForm.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndForm class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndForm.#ctor(Ifs.Fnd.Explorer.Interfaces.IFndExplorer)">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndForm class.
            </summary>
            <param name="explorer"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndForm.OnReadOnlyChanged">
            <summary>
            Raises the ReadOnlyChanged event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndForm.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages. Trapped in FndForm to catch and show Exceptions.
            TODO: Maybe we should remove this?!?
            </summary>
            <param name="m">The Windows System.Windows.Forms.Message to process. </param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndForm.OnHandleCreated(System.EventArgs)">
            <summary>
            Register control for themeing
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndForm.OnLoad(System.EventArgs)">
            <summary>
            Override OnLoad
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndForm.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Override Closing
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndForm.SetTheme">
            <summary>
            Fnd dialogs should not be themed
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndForm.ReadOnlyChanged">
            <summary>
            Fired when the value of the ReadOnly property changes.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndForm.ReadOnly">
            <summary>
            Gets or sets whether the control is read only.
            </summary>
            <value>
            True if the control is read only, false otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndForm.Explorer">
            <summary>
            Gets or sets the <see cref="T:Ifs.Fnd.Explorer.Interfaces.IFndExplorer"/>
            member variable.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndForm.Name">
            <summary>
            This is a quick and dirty fix to get DPI scaling for each dialog inheriting FndForm in fnddev and fndadm etc. 
            AutoScaleDimensions is required to be called within the InitializeComponent method for the inheriting dialog
            in order for the dialog to scale. By shadowing/overriding the name property and setting the AutoScaleDimension property 
            within this property that is always set in InitializeComponent we quarantee it. (FndForm is obsolete and should be replaced by FndDialog) /Japise
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndForm.AutoScaleMode">
            <summary>
            Force AutoScaleMode to DPI to prevent inheriting dialogs from overriding these properties
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndForm.AutoScaleDimensions">
            <summary>
            Force AutoScaleDimensions to DPI dimensions to prevent inheriting dialogs from overriding these properties
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndForm.AutoHandleUpdatable">
            <summary>
            Gets or sets whether the Updatable property should be handled automatically.
            Note: This property is not used.
            </summary>
            <value>
            True if the Updatable property should be handled automatically, false otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndForm.Updatable">
            <summary>
            Gets or sets whether the control is updatable.
            </summary>
            <value>
            True if the control is updatable, false otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndForm.UseThemes">
            <summary>
            Property to set if the dialog is to be themed or not
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndGroupBox">
            <summary>
            Subclass of System.Windows.Forms.GroupBox which adds IFS specific functionality.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndGroupBox.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndGroupBox class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndGroupBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndGroupBox.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Raises the ReadOnlyChanged event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndGroupBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndGroupBox.OnHandleCreated(System.EventArgs)">
            <summary>
            Register control for themeing
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndGroupBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override OnPaint to provide IFS's own painting logic
            </summary>
            <param name="e">Arguments relating to this Paint event</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndGroupBox.SetTheme">
            <summary>
            Retrieve the themed border color etc and repaint the control
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndGroupBox.ReadOnlyChanged">
            <summary>
            Occurs when the value of the ReadOnly property has changed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndGroupBox.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the group box is read-only.
            </summary>
            <value>
            <b>true</b> if the group box is read-only; otherwise, <b>false</b>. The default is <b>false</b>.
            </value>
            <remarks>
            This property is used by the framework to set the udpdatable state of the control when the control is data bound. 
            In such a situation setting this property at design time has no effect. To control the read-only behaviour even when 
            the control is data bound, first set the <see cref="P:Ifs.Fnd.Windows.Forms.FndGroupBox.AutoHandleUpdatable"/> property to <b>false</b>.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndGroupBox.Updatable">
            <summary>
            Gets or sets a value indicating whether the control is updatable or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndGroupBox.AutoHandleUpdatable">
            <summary>
            Gets or sets a value indicating whether the updatable state of the control
            is automatically handled or not.
            Note that this is only valid when the control is data bound.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndHelpLabel">
            <summary>
            Summary description for FndHelpLabel.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndHelpLabel.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndHelpLabel class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndHelpLabel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndHelpLabel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndHelpLabel.IsFieldLabel">
            <summary>
            True if the label is connected to a field.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndHelpLabel.OwnerControl">
            <summary>
            Only the FndFieldExtender should set this property.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndHelpLabel.AutoSize">
            <summary>
            Gets or sets a value indicating whether the control is automatically resized to display its entire contents.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndHelpLabel.AutoHandleUpdatable">
            <summary>
            Do not use this method.  It is there in the FndHelpLabel merely for UI consistancy when readonly.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndHelpLabel.Updatable">
            <summary>
            Do not use this method.  It is there in the FndHelpLabel merely for UI consistancy when readonly.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CustomSortDialog">
            <summary>
            Summary description for CustomSortDialog.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CustomSortDialog.fndGroupBox1">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CustomSortDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CustomSortDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FindDialog">
            <summary>
            Find dialog
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FindDialog.#ctor(Ifs.Fnd.Windows.Forms.FndIndexList,System.String,Ifs.Fnd.Explorer.Interfaces.IFndExplorer)">
            <summary>
            Initializes an instance of FindDialog.
            </summary>
            <param name="owner">Parent FndIndexList control instance.</param>
            <param name="previousFoundText">Text that was previously successfully searched.</param>
            <param name="explorer">Explorer instance.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FindDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FindDialog.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FindDialog.OnSearchSuccess">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FindDialog.OnActivated(System.EventArgs)">
            <summary>
            OnActivated.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FindDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FindDialog.SearchSuccess">
            <summary>
            Raised when an instance of the text searched is found. If <b>HighlightAllOccurrences</b> is <b>true</b>,
            the event is fired once after searching all the items.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FindDialog.FoundItem">
            <summary>
            Reference to the instance of <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListItem"/> on which the searched text
            was last found.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FindDialog.FoundIndex">
            <summary>
            Index of the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListItem"/> on which the searched text was last found.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FindDialog.MatchCase">
            <summary>
            Indicates whether to perform a case-sensitive search or not. If <b>true</b>, the search will be 
            case-sensitive.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FindDialog.MatchWholeWord">
            <summary>
            Indicates whether to match the whole word when searching. If <b>true</b>, searches for the exact
            that occur as whole words. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FindDialog.HighlightAllOccurrences">
            <summary>
            Indicates whether to perform an incremental search or to search the entire content at once.
            If <b>true</b>, searches all the items and highlights occurrences of the text searched.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FindDialog.SearchPositive">
            <summary>
            Indicates whether the last search was a success or not. 
            <b>true</b>, if the last search was successful.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FindDialog.SearchText">
            <summary>
            Gets the text that was searched for. 
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexList">
            <summary>
            Foundation1 Windows Forms FndIndexList control displays a list of items from which the user can select one or more. It provides 
            a lot of flexibility for formatting what is shown for each item. There is also grouping and sorting capabilities built into this 
            control.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndListControlBase">
            <summary>
            Base class for list controls
            </summary>
            <remarks>
            This class keeps track of visible row range and scroll status and delegates paint work to subclasses. 
            firstVisibleItem and lastVisibleItem fields are used for painting invalid RECTs. 
            maxVScrollTopItemIndex field is used for setting scrollbar.
            </remarks>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndListControlBase.FirstVisibleItem">
            <summary>
            Index of the top most item in the visible item range in the item collection.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndListControlBase.LastVisibleItem">
            <summary>
            Index of the last item in the visible item range in the item collection.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndListControlBase.focusedIndex">
            <summary>
            Index of the focused item in the item collection.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndListControlBase.FocusChangedByControl">
            <summary>
            Indicates if a focus change was initiated from within the control or not.
            </summary>
            <value>true - change of focus was initiated by the control.</value>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndListControlBase.selectedRangeStart">
            <summary>
            Starting index of a multiple selection. This value is used when extending the selection in either direction. 
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndListControlBase.prevFocusedIndex">
            <summary>
            Previous focused item index. 
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndListControlBase.prevFocusedItem">
            <summary>
            Previous focused item.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndListControlBase.ItemCache">
            <summary>
            Cache of current items accessible by the corresponding <see cref="T:Ifs.Fnd.Data.FndDataRow"/> item of the data source. 
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndListControlBase.ItemRectCache">
            <summary>
            Cache of rectangle settings of the current items. 
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndListControlBase.dataSource">
            <summary>
            <see cref="T:Ifs.Fnd.Data.FndBindingListBase"/> type of object that supplies data to the control.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndListControlBase.components">
            <summary>
            Timer used when displaying tooltips.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndListControlBase.FirstVisibleItemHiddenHeight">
            <summary>
            Height of the first visible item that is hidden from view.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.#ctor">
            <summary>
            Creates a new instance of the control
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the SelectedIndexChanged event
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.OnSelectedValueChanged(System.EventArgs)">
            <summary>
            Raises the SelectedValueChanged event
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.Init(System.Int32,System.Array)">
            <summary>
            Initialize the control
            </summary>
            <param name="headerHeight">Height of the header</param>
            <param name="items">Item array</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.Init(System.Int32,System.Collections.Generic.List{Ifs.Fnd.Windows.Forms.FndIndexListItem})">
            <summary>
            Initialize the control
            </summary>
            <param name="headerHeight">Height of the header</param>
            <param name="items">Item arraylist</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.MeasureItem(System.Int32)">
            <summary>
            Measure the item at the specified index
            </summary>
            <param name="index">Item index</param>
            <returns>The size</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.DrawItem(System.Int32,Ifs.Fnd.Core.FndRTLGraphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DrawItemState)">
            <summary>
            Draw the specified item
            </summary>
            <param name="index">Item index</param>
            <param name="g">Graphics to use</param>
            <param name="itemBounds">Bounds of the item</param>
            <param name="clipRectangle">Invalid clip</param>
            <param name="state">State of the item</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.DrawHeader(Ifs.Fnd.Core.FndRTLGraphics,System.Drawing.Rectangle)">
            <summary>
            Draw the header
            </summary>
            <param name="g">Graphics to use</param>
            <param name="headerBounds">Header bounds</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Do control specific stuff for MouseDown
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseEnter"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Do control specific stuff for MouseWheel
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Do control specific stuff for Paint
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.OnSizeChanged(System.EventArgs)">
            <summary>
            Do control specific stuff for SizeChanged
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Do control specific stuff for ProcessDialogKey
            </summary>
            <param name="keyData">Event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.GetItemRect(System.Int32)">
            <summary>
            Returns the item rect for the specified index
            </summary>
            <param name="index">Item index</param>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.GetItemRangeRect(System.Int32,System.Int32)">
            <summary>
            returns the rectangle of area containing specified no. items starting at index. 
            </summary>
            <param name="index">index of first item</param>
            <param name="count">no. of items within the rectangle.</param>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.HitTest(System.Int32,System.Int32)">
            <summary>
            Returns index of the row at the specified x, y position. If no row is at the specified position -1 is returned.
            </summary>
            <param name="x">X position</param>
            <param name="y">Y position</param>
            <returns>Row index</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.ItemIsVisible(System.Int32)">
            <summary>
            Returns a value indicating if the item at the specified index is visible
            </summary>
            <param name="index">Item index</param>
            <returns>true if visible; otherwise false</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.InvalidateEntireRowRange">
            <summary>
            Invalidates the entire range of rows
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.GetBlankRect">
            <summary>
            Returns the blank rect at bottom caused by the fact that partial bottom rows are not displayed
            </summary>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.GetHeaderRect">
            <summary>
            Returns the header rect
            </summary>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.GetItemRect(System.Int32,System.Drawing.Rectangle)">
            <summary>
            Returns the item rect for the specified index where the previous item's rectangle is given.
            </summary>
            <param name="index">Item index</param>
            <param name="prevRect">Drawing rectangle of previous item.</param>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.GetItemSize(System.Int32)">
            <summary>
            Get the size of an item
            </summary>
            <param name="index">Item index</param>
            <returns>The size</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.GetDistanceToTop(System.Int32,System.Boolean)">
            <summary>
            Returns the distance to the top of this item with respect to the 0th item.
            </summary>
            <param name="index">item index</param>
            <param name="recalculate">boolean flag indicating whether item size should be recalculated or read from an internal property of the item.</param>
            <returns>distance to top from the 0th item.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.AddToSelection(System.Int32)">
            <summary>
            Adds an item to the selected items
            </summary>
            <param name="index">Item index</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.ItemIsSelected(System.Int32)">
            <summary>
            Returns a value indicating if an item is selected
            </summary>
            <param name="index">Item index</param>
            <returns>true if selected; otherwise false</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.RemoveFromSelection(System.Int32)">
            <summary>
            Removes an item from the selectection
            </summary>
            <param name="index">Item index</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.ToggleSelection(System.Int32)">
            <summary>
            Toggles item selected state
            </summary>
            <param name="index">Item index</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.ClearSelection">
            <summary>
            Sets the state of all selected items to 'Unselected'.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.CountVisibleItems(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns number of visible rows above last row or below first row
            </summary>
            <param name="startAt">Index of item to start with</param>
            <param name="step">Pass 1 to cound below, pass -1 to count above</param>
            <param name="stopAt">Index to stop calculation at</param>
            <param name="doRecalculate">boolean flag indicating whether item sizes should be recalculated or read from an internal property of the item instance.</param>
            <returns>Number of visible items</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.EnsureVisible(System.Int32,System.Boolean)">
            <summary>
            Ensure that the specified item is visible
            </summary>
            <param name="index">Item index</param>
            <param name="forceRecalculate">boolean flag indicating whether item sizes should be recalculated or read from an internal property of the item instance.</param>
            <returns>true if item already was visible; otherwise false</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.RecalculateRanges">
            <summary>
            Recalculate visible item + scroll ranges
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.RecalculateVisibleItemRange">
            <summary>
            Recalculate visible item range assuming that proposed firstVisibleItem has been set
            </summary>
            <remarks>firstVisibleItem might be changed to a smaller value if lines above should be displayed</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.RecalculateVisibleItemRange(System.Boolean,System.Boolean)">
            <summary>
            Recalculate visible item range assuming that proposed firstVisibleItem has been set
            </summary>
            <param name="forceInvalidate">Pass true to repaint enture range</param>
            <param name="forceRecalculate">boolean flag indicating whether item sizes should be recalculated or read from an internal property of the item instance.</param>
            <remarks>firstVisibleItem might be changed to a smaller value if lines above should be displayed</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.RecalculateMaxScroll">
            <summary>
            Recalculate top row index when control scrolled down to maximum
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.RecalculateVScrollbar(System.Boolean)">
            <summary>
            Recalculates and sets VScrollbar properties
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.LoadImage(System.String,System.String)">
            <summary>
            Creates an image instance from the given resource string. If the resource string is invalid, the
            method will attempt to create the image using the file name specified. If both attempts fail,
            a null reference will be returned.
            </summary>
            <param name="resourcePath">resource string</param>
            <param name="fileName">filename of image file. (e.g. myimage.gif)</param>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.LoadImages">
            <summary>
            Loads all images used by this control from themed resource collection.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.CheckItemValuesEqual(Ifs.Fnd.Windows.Forms.FndIndexListItem,Ifs.Fnd.Windows.Forms.FndIndexListItem)">
            <summary>
            Checks if the 2 given items represent the same datarow or different datarows.
            </summary>
            <param name="item1">first item</param>
            <param name="item2">second item</param>
            <returns><b>true</b> if both refer to the same datarow, <b>false</b> if not.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.BeginUpdate">
            <summary>
            Signals the start of one or more operations within which control is not invalidated.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListControlBase.EndUpdate">
            <summary>
            Signals the end of one or more operations and invalidates the control.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndListControlBase.SelectedIndexChanged">
            <summary>
            Raised when the selected index is changed.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndListControlBase.SelectedValueChanged">
            <summary>
            Raised when the selected item is changed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListControlBase.BorderStyle">
            <summary>
            Gets or sets the border style of the indexlist control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListControlBase.MultiSelect">
            <summary>
            Gets or sets a value indicating whether multiple items can be selected.
            </summary>
            <value><b>true</b> if multiselect is allowed, otherwise <b>false</b>. The default value is <b>false</b>.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListControlBase.SelectedIndex">
            <summary>
            Gets the index of the focused item.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListControlBase.InternalItems">
            <summary>
            Gets the Items
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListControlBase.FocusedIndex">
            <summary>
            Gets or sets the focused index
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListControlBase.FocusedIndexInternal">
            <summary>
            Gets or sets the focused index. When setting, does not change the datasource position.
            Intended to be used when datasource's position has already been changed and we need to
            update the focus of the IndexList accordingly. e.g. in dataSource_PositionChanged event handler
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListControlBase.HeaderHeight">
            <summary>
            Gets or sets the height of the header.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListControlBase.CurrentSelection">
            <summary>
            selectedItems collection will store references to selected items.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListControlBase.ActualWidth">
            <summary>
            Returns the width where the scrollbar has been considered
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.#ctor">
            <summary>
            Creates a new instance of the FndIndexList class
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.Dispose(System.Boolean)">
            <summary>
            Disposes FndIndexList.
            </summary>
            <param name="disposing">true if disposing</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ExpandSelection">
            <summary>
            Expands all selected items.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.CollapseSelection">
            <summary>
            Collpases all selected items.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ExpandAll">
            <summary>
            Expands all items.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.CollapseAll">
            <summary>
            Collapses all items.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ExpandAllGroups">
            <summary>
            Expands all groups if the index list is in grouped mode.
            </summary>
            <returns><b>true</b> if the expanded state of any group was changed, otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.CollapseAllGroups">
            <summary>
            Collapses all groups if the index list is in grouped mode.
            </summary>
            <returns><b>true</b> if the expanded state of any group was changed, otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.GetItemAt(System.Drawing.Point)">
            <summary>
            Retrieves the item that is at the specified point.
            </summary>
            <param name="point">The <see cref="T:System.Drawing.Point"/> to evaluate and retrieve the item from.</param>
            <returns>The <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListItem"/> at the specified location.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.GetItemAt(System.Int32,System.Int32)">
            <summary>
            Retrieves the item at the point with the specified coordinates.
            </summary>
            <param name="x">The X position to evaluate and retrieve the item from.</param>
            <param name="y">The Y position to evaluate and retrieve the item from.</param>
            <returns>The <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListItem"/> at the specified location.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.InvalidateEntireItemRange">
            <summary>
            Invalidates the entire range of visible items.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.OnFetchImageIndex(Ifs.Fnd.Windows.Forms.FndImageIndexEventArgs)">
            <summary>
            Raises the FetchImageIndex event
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.OnFetchCellImageResource(Ifs.Fnd.Windows.Forms.FndCellImageResourceEventArgs)">
            <summary>
            Raises the FetchCellImageResource event
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.OnExpandGroup(Ifs.Fnd.Windows.Forms.FndIndexListGroupExpandEventArgs)">
            <summary>
            Raises the GroupExpand event
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.OnCellCheck(Ifs.Fnd.Windows.Forms.FndIndexListCellCheckedEventArgs)">
            <summary>
            Raises the CellCheck event
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.OnLinkClicked(Ifs.Fnd.Windows.Forms.FndIndexListLinkClickedEventArgs)">
            <summary>
            Raises the LinkClicked event
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.OnIconClicked(Ifs.Fnd.Windows.Forms.FndIndexListIconClickedEventArgs)">
            <summary>
            Raises the IconClicked event
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.OnItemClicked(Ifs.Fnd.Windows.Forms.FndIndexListItemClickedEventArgs)">
            <summary>
            Raises the ItemClicked event.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.OnFetchGroupHeaderCaption(Ifs.Fnd.Windows.Forms.FndGroupHeaderCaptionEventArgs)">
            <summary>
            Raises the FetchGroupHeaderCaption event.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.OnToolTipSet(Ifs.Fnd.Windows.Forms.FndToolTipSetEventArgs)">
            <summary>
            Raises the ToolTipSet event.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.DrawHeader(Ifs.Fnd.Core.FndRTLGraphics,System.Drawing.Rectangle)">
            <summary>
            Draws the header
            </summary>
            <param name="g">The graphics to use</param>
            <param name="headerBounds">Bounds for header</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.DrawItem(System.Int32,Ifs.Fnd.Core.FndRTLGraphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Windows.Forms.DrawItemState)">
            <summary>
            Draws an item
            </summary>
            <param name="index">Index of item</param>
            <param name="g">Graphics to use</param>
            <param name="itemBounds">Bounds for item</param>
            <param name="clipRectangle">Invalid clip</param>
            <param name="state">Item state</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.DrawColumn(System.Drawing.Rectangle,Ifs.Fnd.Core.FndRTLGraphics,System.Drawing.Brush,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Draw one column within a row
            </summary>
            <param name="colRect">RECT for the column</param>
            <param name="g">Graphics to use</param>
            <param name="b">Brush to use</param>
            <param name="selected">Selected flag</param>
            <param name="rowIndex">Row index</param>
            <param name="columnIndex">Column index</param>
            <param name="expanded">Expanded flag</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.DrawCell(System.Drawing.Rectangle,Ifs.Fnd.Core.FndRTLGraphics,System.Drawing.Brush,System.Boolean,System.Int32,System.Int32,System.Int32,Ifs.Fnd.Windows.Forms.FndIndexListCell)">
            <summary>
            Draw one cell within a column within a row
            </summary>
            <param name="cellRect">RECT to paint in</param>
            <param name="g">Graphics to use</param>
            <param name="brush">Brush to use</param>
            <param name="selected">Selected flag</param>
            <param name="itemIndex">Row index</param>
            <param name="columnIndex">index of column that owns this cell</param>
            <param name="cellIndex">index of this cell in the column</param>
            <param name="cell">Cell configuration</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.MeasureItem(System.Int32)">
            <summary>
            Measure an item
            </summary>
            <param name="index">Index of item</param>
            <returns>The size</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ChangeStateInItemRange(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Selects/Deselects all items within the specified range. If groups are encountered they are selected along with children.
            </summary>
            <param name="start">index of first item.</param>
            <param name="end">index of last item.</param>
            <param name="selected">true - all items within the range will be selected.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.LoadImages">
            <summary>
            Loads images used by the control, from themed resource collection.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.GetColumnWidth(System.Int32,System.Int32)">
            <summary>
            Calculates the width of a column specified by the columnIndex parameter. The width calculated includes
            column spacing values.
            </summary>
            <param name="columnIndex">Index of the column within the array of <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListColumn"/> instances.</param>
            <param name="clearWidth">Total width available for percentage based columns excluding the fixed width columns. If -1 is sent, 
             then clear width is recalculated and used in the calculation of column width.</param>
            <returns>Width of the column specified by columnIndex.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.OnDoubleClick(System.EventArgs)">
            <summary>
            Do control specific doubleclick stuff
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.OnHandleCreated(System.EventArgs)">
            <summary>
            Register control for themeing
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Determines whether the specified key is a regular input key or a special key that requires preprocessing.
            </summary>
            <param name="key">One of the <see cref="T:System.Windows.Forms.Keys"/> values.</param>
            <returns><b>true</b> if the specified key is a regular input key; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="M:Ifs.Fnd.Windows.Forms.FndIndexList.OnKeyDown(System.Windows.Forms.KeyEventArgs)"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Handles physical keys, such as TAB, RETURN, ESCAPE, and arrow keys. 
            </summary>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"/> values that represents the key to process.</param>
            <returns><b>true</b> if the key was processed by the control; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetAlternatingBackColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.AlternatingBackColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetBackColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.BackColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetCellCaptionForeColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.CellCaptionForeColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetCellCaptionSelectionForeColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.CellCaptionSelectionForeColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetGroupHeaderBackColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupHeaderBackColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetGroupHeaderFont">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupHeaderFont"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetGroupHeaderForeColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupHeaderForeColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetGroupHeaderLineColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupHeaderLineColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetGroupHeaderSelectionForeColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupHeaderSelectionForeColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetHeaderBackColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.HeaderBackColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetHeaderBackColorLight">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.HeaderBackColorLight"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetHeaderFont">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.HeaderFont"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetHeaderForeColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.HeaderForeColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetHeaderSortDirectionMarkerColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.HeaderForeColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetLineColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.LineColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetLinkColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.LinkColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetLinkSelectionColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.LinkSelectionColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetSelectionBackColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.SelectionBackColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetSelectionForeColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.SelectionForeColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetGroupBy">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupBy"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ResetSortBy">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.SortBy"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeAlternatingBackColor">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.AlternatingBackColor"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeBackColor">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.BackColor"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeCellCaptionForeColor">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.CellCaptionForeColor"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeCellCaptionSelectionForeColor">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.CellCaptionSelectionForeColor"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeGroupHeaderBackColor">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupHeaderBackColor"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeGroupHeaderFont">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupHeaderFont"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeGroupHeaderForeColor">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupHeaderForeColor"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeGroupHeaderLineColor">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupHeaderLineColor"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeGroupHeaderSelectionForeColor">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupHeaderSelectionForeColor"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeHeaderBackColor">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.HeaderBackColor"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeHeaderBackColorLight">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.HeaderBackColorLight"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeHeaderFont">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.HeaderFont"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeHeaderForeColor">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.HeaderForeColor"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeHeaderSortDirectionMarkerColor">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.HeaderSortDirectionMarkerColor"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeLineColor">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.LineColor"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeLinkColor">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.LinkColor"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeLinkSelectionColor">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.LinkSelectionColor"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeSelectionBackColor">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.SelectionBackColor"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeSelectionForeColor">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.SelectionForeColor"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeGroupBy">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupBy"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.ShouldSerializeSortBy">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.SortBy"/> property should be persisted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the SelectedIndexChanged event
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.OnSelectedValueChanged(System.EventArgs)">
            <summary>
            Raises the SelectedValueChanged event
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.SetTheme">
            <summary>
            Sets theming values of the control. 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.GetDataMembersForDataSource(System.Object)">
            <summary>
            Returns a list of datamembers for the specified datasource
            </summary>
            <param name="dataSource">The datasource</param>
            <returns>A list of datamembers for the specified datasource</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexList.GetTranslatableAt(System.Int32,System.Int32)">
            <summary>
            Get translatable text for the clild element at the requested location.
            <param name="x">X coordinate within control.</param>
            <param name="y">Y coordinate within control.</param>
            <returns>Translatable object at requsted location, null if no object found</returns>
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexList.FetchImageIndex">
            <summary>
            Event raised to fetch the imagelist index of the image for the specified row
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexList.FetchCellImageResource">
            <summary>
            Event raised to fetch the resource string of the image for the specified cell
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexList.GroupExpand">
            <summary>
            Event raised when the Group is Expanded.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexList.CellCheck">
            <summary>
            Event raised when the checkbox in a cell is checked/unchecked.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexList.LinkClicked">
            <summary>
            Event raised when a url displayed in a cell is clicked.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexList.IconClicked">
            <summary>
            Event raised when an icon displayed in a cell is clicked.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexList.ItemClicked">
            <summary>
            Event raised when the user clicks on an item.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexList.FetchGroupHeaderCaption">
            <summary>
            Event raised to fetch the caption of a group header item.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexList.ToolTipSet">
            <summary>
            Event raised to fetch a custom tooltip.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexList.ListChanged">
            <summary>
            Event raised when the list change
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexList.ListSorted">
            <summary>
            Event raised when list being (re)sorted, grouped or expanded
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.AlternatingBackColor">
            <summary>
            Gets or sets the background color of odd-numbered items of the index list.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.BackColor">
            <summary>
            Gets or sets the background color of even-numbered items of the index list.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.CellCaptionForeColor">
            <summary>
            Gets or sets the foreground color of cell captions.
            </summary>
            <value>The foreground color to apply to cell captions displayed in the control. 
            The default is the value of the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.DefaultCellCaptionForeColor"/> property.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.CellCaptionSelectionForeColor">
            <summary>
            Gets or sets the selection foreground color of cell captions.
            </summary>
            <value>The selection foreground color to apply to cell captions displayed in the control. 
            The default is the value of the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.DefaultCellCaptionSelectionForeColor"/> property.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.Columns">
            <summary>
            Gets the collection of all columns that appear in the control.
            </summary>
            <value>
            A <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection"/> that represents the column that appear in the FndIndexList.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.ColumnSpacing">
            <summary>
            Gets or sets the space to maintain between columns in the IndexList.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.ContextMenuStrip">
            <summary>
            Overrides the context menu property of <see cref="T:System.Windows.Forms.Control"/> class.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.ContextMenuBackground">
            <summary>
            Gets or sets the context menu to display when the user right-clicks the background of the control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.ContextMenuBackgroundDisplayMode">
            <summary>
            Gets or sets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.ContextMenuBackground"/> display mode.
            </summary>
            <value>The <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.ContextMenuBackground"/> display mode. Default value is <see cref="F:Ifs.Fnd.Windows.Forms.FndIndexListContextMenuDisplayMode.MergeWithStandard"/>.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.ContextMenuHeader">
            <summary>
            Gets or sets the context menu to display when the user right-clicks the header of the control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.ContextMenuHeaderDisplayMode">
            <summary>
            Gets or sets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.ContextMenuHeader"/> display mode.
            </summary>
            <value>The <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.ContextMenuHeader"/> display mode. Default value is <see cref="F:Ifs.Fnd.Windows.Forms.FndIndexListContextMenuDisplayMode.MergeWithStandard"/>.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.ContextMenuGroupHeader">
            <summary>
            Gets or sets the context menu to display when the user right-clicks a group header of the control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.ContextMenuGroupHeaderDisplayMode">
            <summary>
            Gets or sets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.ContextMenuGroupHeader"/> display mode.
            </summary>
            <value>The <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.ContextMenuGroupHeader"/> display mode. Default value is <see cref="F:Ifs.Fnd.Windows.Forms.FndIndexListContextMenuDisplayMode.MergeWithStandard"/>.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.ContextMenuItem">
            <summary>
            Gets or sets the context menu to display when the user right-clicks an item in the control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.ContextMenuItemDisplayMode">
            <summary>
            Gets or sets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.ContextMenuItem"/> display mode.
            </summary>
            <value>The <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexList.ContextMenuItem"/> display mode. Default value is <see cref="F:Ifs.Fnd.Windows.Forms.FndIndexListContextMenuDisplayMode.MergeWithStandard"/>.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.CustomGroupHeaders">
            <summary>
            Indicates whether the developer can set custom group header captions for groups in grouped mode.
            <b>false</b> by default.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.DataSource">
            <summary>
            Gets or sets the binding list that this control will use to get its items.
            </summary>
            <value>An object that functions as a data source.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.DrawEmptyCells">
            <summary>
            Gets or sets a boolean value that indicates whether cells with empty/null values should be displayed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.Font">
            <summary>
            Gets or sets the font of the text displayed in the control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupBy">
            <summary>
            Gets or sets the name of the data column on which the items will be grouped.
            </summary>
            <value>The name of the data column on which the items will be grouped. The default is an empty string ("").</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.Group">
            <summary>
            Gets or sets a value indicating whether the items in the control is shown in groups.
            </summary>
            <value>
            <b>true</b> if items in the control is shown in groups, otherwise <b>false</b>. The default value is <b>false</b>.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupOrder">
            <summary>
            Gets or sets the sort order for groups in the control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupHeaderBackColor">
            <summary>
            Gets or sets the background color of the group headers.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupHeaderFont">
            <summary>
            Gets or sets the font of the text displayed in the group headers.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupHeaderForeColor">
            <summary>
            Gets or sets the foreground color of group headers.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupHeaderLineColor">
            <summary>
            Gets or sets the line color of the group headers.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.GroupHeaderSelectionForeColor">
            <summary>
            Gets or sets the selection foreground color of group items in the control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.HeaderBackColor">
            <summary>
            Gets or sets the background color of the header.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.HeaderBackColorLight">
            <summary>
            Gets or sets the light background color of the header.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.HeaderFont">
            <summary>
            Gets or sets the font of the text displayed in the header.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.HeaderForeColor">
            <summary>
            Gets or sets the foreground color of header.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.HeaderSortDirectionMarkerColor">
            <summary>
            Gets or sets the header sort direction marker color.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.HeaderVisible">
            <summary>
            Gets or sets a value indicating whether the index list header is visible.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.ImageList">
            <summary>
            Gets or sets the ImageList that contains the Image objects used by the control.
            </summary>
            <value>The ImageList that contains the Image objects used by the control. The default value is a null reference.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.Items">
            <summary>
            Gets all the items of this indexlist.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.LineColor">
            <summary>
            Gets or sets the color of the index list lines.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.LinkColor">
            <summary>
            Gets or sets the color of links displayed in the Indexlist.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.LinkSelectionColor">
            <summary>
            Gets or sets the color of a link displayed in a selected item of the Indexlist.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.LineStyle">
            <summary>
            Gets or sets the line style of the index list.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.RowSpacing">
            <summary>
            Gets or sets the space to maintain between rows in the IndexList.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.SavedGroups">
            <summary>
            For saving and retrieving from profiled Expanded/Collapsed state of each group.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.SelectionBackColor">
            <summary>
            Gets or sets the background color of selected items.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.SelectionForeColor">
            <summary>
            Gets or sets the selection foreground color of items in the control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.SortBy">
            <summary>
            Gets or sets the name of the data column on which the items will be sorted.
            </summary>
            <value>The name of the data column on which the items will be sorted. The default is an empty string ("").</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.SortOrder">
            <summary>
            Gets or sets the sort order for items in the control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.ShowItemImages">
            <summary>
            Indicates if an image should be displayed at the beginning of each item.
            In order to display the image,
            1. set ShowImageOnItem to <b>true</b>.
            2. attach a valid imagelist to IndexList.
            3. trap <see cref="E:Ifs.Fnd.Windows.Forms.FndIndexList.FetchImageIndex"/> event and set the index of required image in ImageList at runtime.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.ShowToolTips">
            <summary>
            Gets/sets a boolean value indicating whether a tooltip should be displayed where necessary.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.SelectedItems">
            <summary>
            Gets the selected items on the IndexList.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.Text">
            <summary>
            Gets or sets the text contained in the control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.SelectedIndexChangedDispatcher">
            <summary>
            Gets the delayed <see cref="E:Ifs.Fnd.Windows.Forms.FndListControlBase.SelectedIndexChanged"/> event dispatcher.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.SelectedValueChangedDispatcher">
            <summary>
            Gets the delayed <see cref="E:Ifs.Fnd.Windows.Forms.FndListControlBase.SelectedValueChanged"/> event dispatcher.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.SelectionLostEventRaised">
            <summary>
            Gets or sets whether the <see cref="E:Ifs.Fnd.Windows.Forms.FndListControlBase.SelectedIndexChanged"/> event is raised when the selection is cleared
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.DefaultCellCaptionForeColor">
            <summary>
            Gets the default cell caption foreground color of the control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.DefaultCellCaptionSelectionForeColor">
            <summary>
            Gets the default cell caption selection foreground color of the control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexList.DefaultHeaderSortDirectionMarkerColor">
            <summary>
            Gets the default header sort direction marker color of the control.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListCell">
            <summary>
            The <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> class represents a cell
            in the control. 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> class with 
            the specified caption and display member.
            </summary>
            <param name="caption">The text displayed as the caption of cell.</param>
            <param name="displayMember">The data column member to display in this cell.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.GetOwnerIndexList">
            <summary>
            Gets the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexList"/> that owns this <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> instance.
            </summary>
            <returns>The <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexList"/> that owns this <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> instance.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.OnCaptionChanged(System.EventArgs)">
            <summary>
            Called when the Caption Property Changes
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.OnIsGroupByCandidateChanged(System.EventArgs)">
            <summary>
            Called when the IsGroupByCandidate Property Changes
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.OnIsSortByCandidateChanged(System.EventArgs)">
            <summary>
            Called when the IsSortByCandidate Property Changes
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.ShouldSerializeCaption">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.Caption"/> property should be persisted.
            </summary>
            <returns><b>true</b> if the property value has changed from its default; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.ShouldSerializeCaptionFont">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.CaptionFont"/> property should be persisted.
            </summary>
            <returns><b>true</b> if the property value has changed from its default; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.ShouldSerializeCaptionForeColor">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.CaptionForeColor"/> property should be persisted.
            </summary>
            <returns><b>true</b> if the property value has changed from its default; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.ShouldSerializeForeColor">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.ForeColor"/> property should be persisted.
            </summary>
            <returns><b>true</b> if the property value has changed from its default; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.ShouldSerializePadding">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.Padding"/> property should be persisted.
            </summary>
            <returns><b>true</b> if the property value has changed from its default; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.ShouldSerializeTextFont">
            <summary>
            Indicates whether the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.TextFont"/> property should be persisted.
            </summary>
            <returns><b>true</b> if the property value has changed from its default; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.ResetCaption">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.Caption"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.ResetCaptionFont">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.CaptionFont"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.ResetCaptionForeColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.CaptionForeColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.ResetForeColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.ForeColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.ResetTextFont">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.TextFont"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.ResetSerializePadding">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.Padding"/> property to its default value.
            </summary>	
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.Dispose(System.Boolean)">
             <summary>
             Disposes both managed/unmanaged resources in this instance.
             </summary>
             <param name="disposing">
             If disposing equals true, the method has been called directly
             or indirectly by a user's code. Managed and unmanaged resources
             can be disposed.
             If disposing equals false, the method has been called by the
             runtime from inside the finalizer and you should not reference
             other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.SetThemeVariables">
            <summary>
            Should invoke a reset of the control properties that have been themed.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCell.Dispose">
            <summary>
            Disposes of an instance of <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> 
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexListCell.CaptionChanged">
            <summary>
            Fired when the Caption property changes value.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexListCell.IsGroupByCandidateChanged">
            <summary>
            Fired when the IsGroupByCandidate property changes value.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexListCell.IsSortByCandidateChanged">
            <summary>
            Fried when the IsSortByCandidate property changes value.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.Caption">
            <summary>
            Gets or sets the text to be displayed as the caption of the cell.
            </summary>
            <value>
            A string to be displayed as the caption of the cell. The default is the same as the value 
            set for <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.DisplayMember"/> property if it has a value, otherwise an empty string ("").
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.CaptionFont">
            <summary>
            Gets or sets the font to apply to the caption of text displayed in a cell.
            </summary>
            <value>The font to apply to the caption text displayed in a cell. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont"/> property if 
            the cell is not associated with a FndIndexListColumn; otherwise the font specified in the Font property for the FndIndexListColumn is used.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.CaptionForeColor">
            <summary>
            Gets or sets the fore color of the caption.
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> value.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.CaptionVisible">
            <summary>
            Gets or sets a value indicating whether the cell caption is visible.
            </summary>
            <value>Indicates whether cell caption is visible. The default value is <b>true</b>.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.CheckBox">
            <summary>
            Gets or sets a value indicating whether a check box is displayed for this cell in the control.
            </summary>
            <value><b>true</b> if a check box is displayed for this cell in the control; otherwise, <b>false</b>. The default is false.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.TextFont">
            <summary>
            Gets or sets the font to apply to text displayed by a cell in the control.
            </summary>
            <value>The font to apply to text displayed by a cell in the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont"/> property if 
            the cell is not associated with a FndIndexListColumn; otherwise the font specified in the Font property for the FndIndexListColumn is used.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.DisplayMember">
            <summary>
            Gets or sets data column to display in this cell.
            </summary>
            <value>The data column to display in this cell. The default value is <b>null</b>.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.DisplayStyle">
            <summary>
            Gets or sets a value indicating the display style for this <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/>.
            </summary>
            <value>The <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> display style. Default value is <see cref="F:Ifs.Fnd.Windows.Forms.FndIndexListCellDisplayStyle.TextAndImage"/>.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.ForeColor">
            <summary>
            Gets or sets the fore colour of the displayed text.
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> value.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.IsGroupByCandidate">
            <summary>
            Gets or sets a value indicating whether data column connected to this cell is used as a grouping candidate.
            </summary>
            <value><b>true</b> if the data column connected to this cell is used as a grouping candidate, otherwise <b>false</b>. The default value is <b>false</b>.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.IsSortByCandidate">
            <summary>
            Gets or sets a value indicating whether data column connected to this cell is used as a sorting candidate.
            </summary>
            <value><b>true</b> if the data column connected to this cell is used as a sorting candidate, otherwise <b>false</b>. The default value is <b>false</b>.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.ImageLink">
            <summary>
            Indicates if the image displayed functions as a link.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.ImageResource">
            <summary>
            Gets or sets the resource string representing the image to be displayed in this cell.
            </summary>
            <value>
            Resource string representing the image to be displayed in this cell. The default value is <b>null</b>.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.Link">
            <summary>
            Indicates if the text displayed behaves as a url.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.Padding">
            <summary>
            Gets or sets the amount of space around the cell contents and the cell border.
            </summary>
            <value><see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCellPadding"/></value> object containing the values.
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.DisplayEmptyCell">
            <summary>
            Indicates whether the cell would be painted when the connected data column's value is null or empty. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.WordWrap">
            <summary>
            Indicates whether text displayed in this cell should be word wrapped.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.WordWrapLineCount">
            <summary>
            Number of lines to display in word-wrapped mode.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.ImageToolTipEnabled">
            <summary>
            Gets/sets a boolean value to indicate if a tooltip would be displayed when mouse moves over image.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.CheckBoxToolTipEnabled">
            <summary>
            Gets/sets a boolean value to indicate if a tooltip would be displayed when mouse moves over checkbox.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.TextToolTipEnabled">
            <summary>
            Gets/sets a boolean value to indicate if a tooltip would be displayed when mouse moves over text.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.CellToolTipEnabled">
            <summary>
            Gets/sets a boolean value to indicate if a tooltip would be displayed when mouse moves over the cell.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.TextToolTipStyle">
            <summary>
            Gets/sets a <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListToolTipStyle"/> value to indicate the display style of text tooltip.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.HighlightStartTag">
            <summary>
            Gets or sets the highlight start tag.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.HighlightEndTag">
            <summary>
            Gets or sets the highlight end tag.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCell.HighlightColor">
            <summary>
            Gets or sets the background color of the highlight text.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection">
            <summary>
            Represents the collection of cells in a <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexList"/> control.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.Add(Ifs.Fnd.Windows.Forms.FndIndexListCell)">
            <summary>
            Adds an existing <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> to the collection.
            </summary>
            <param name="value">The <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> to add to the collection.</param>
            <returns>The zero-based index into the collection where the item was added.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.AddRange(Ifs.Fnd.Windows.Forms.FndIndexListCell[])">
            <summary>
            Adds an array of cells to the collection.
            </summary>
            <param name="values">An array of <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> objects to add to the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.Contains(Ifs.Fnd.Windows.Forms.FndIndexListCell)">
            <summary>
            Determines whether the specified cell is located in the collection.
            </summary>
            <param name="value">A <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> representing the cell to locate in the collection.</param>
            <returns><b>true</b> if the cell is contained in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.IndexOf(Ifs.Fnd.Windows.Forms.FndIndexListCell)">
            <summary>
            Returns the index within the collection of the specified cell.
            </summary>
            <param name="value">A <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> representing the cell to locate in the collection.</param>
            <returns>The zero-based index of the cell's location in the collection. If the cell is not located in the collection, the return value is negative one (-1).</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.Insert(System.Int32,Ifs.Fnd.Windows.Forms.FndIndexListCell)">
            <summary>
            Inserts an existing cell into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index location where the cell is inserted.</param>
            <param name="value">The <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> to insert into the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.Remove(Ifs.Fnd.Windows.Forms.FndIndexListCell)">
            <summary>
            Removes the specified cell from the collection.
            </summary>
            <param name="cell">A <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> representing the cell to remove from the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.OnGroupByListChanged(System.EventArgs)">
            <summary>
            Raises the GroupByListChanged event.
            </summary>
            <param name="e">The Event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.OnSortByListChanged(System.EventArgs)">
            <summary>
            Raises the SortByListChanged event.
            </summary>
            <param name="e">The Event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.Clear">
            <summary>
            Removes all cells from the collection.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the specified cell from the collection.
            </summary>
            <param name="index">A <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> representing the cell to remove from the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection"/> to a compatible one-dimensional Array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection"/>. The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.GetEnumerator">
            <summary>
            Returns an enumerator to use to iterate through the column collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> that represents the column collection.</returns>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.SortByListChanged">
            <summary>
            Fired when the Sort By List needs to be refreshed
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.GroupByListChanged">
            <summary>
            Fired when the Group by List needs to be refreshed
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.Item(System.Int32)">
            <summary>
            Gets the cell at the specified index within the collection.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value>
            <b>true</b> if the collection is read-only; otherwise, <b>true</b>.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection"/> is synchronized (thread-safe).
            </summary>
            <value>
            <b>true</b> if access to the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection"/> is synchronized (thread-safe); otherwise, <b>false</b>. The default is <b>false</b>.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
            <value>
            The number of items in the collection.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection"/>.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection"/>.
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListCellPadding">
            <summary>
            Represents the amount of padding to be kept between the bounds and the contents of a <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/>.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCellPadding.#ctor">
            <summary>
            Creates an instance of <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCellPadding"/> class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCellPadding.ToString">
            <summary>
            Overridden. See <see cref="M:System.Object.ToString"/>
            </summary>
            <returns> A string representation of an instance of <I>FndIndexListCellPadding</I> class.</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCellPadding.All">
            <summary>
            Gets or sets the padding width for all edges of a docked control.
            </summary>
            <value>An integer representing common dock padding width in all directions</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Value should be positive.</exception>
            <remarks>When any of the <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexListCellPadding.Top"/>, <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexListCellPadding.Bottom"/>, <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexListCellPadding.Left"/> or <see cref="P:Ifs.Fnd.Windows.Forms.FndIndexListCellPadding.Right"/>
            properties has a different value, then 0 is returned.</remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCellPadding.Top">
            <summary>
            Gets or sets the padding with respect to the top edge of <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> rectangle.
            </summary>
            <value>an integer</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Value should be positive</exception>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCellPadding.Bottom">
            <summary>
            Gets or sets the padding with respect to the bottom edge of <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> rectangle.
            </summary>
            <value>an integer</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Value should be positive</exception>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCellPadding.Left">
            <summary>
            Gets or sets the padding with respect to the left edge of <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> rectangle.
            </summary>
            <value>an integer</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Value should be positive</exception>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCellPadding.Right">
            <summary>
            Gets or sets the padding with respect to the right edge of <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> rectangle.
            </summary>
            <value>an integer</value>
            <exception cref="T:System.ArgumentOutOfRangeException">Value should be positive</exception>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListCellPaddingConverter">
            <summary>
            This type supports the .NET Framework infrastructure and is not intended to be used directly from your code.
            </summary>
            <remarks>Provides a type converter to convert to and from a string representation of <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCellPadding"/> instance.</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCellPaddingConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCellPaddingConverter"/> class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCellPaddingConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object"/> that specifies the type of array for which to get properties.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute"/> that is used as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> with the properties that are exposed for this data type, or a null reference if there are no properties.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCellPaddingConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns><b>true</b> if <see cref="M:Ifs.Fnd.Windows.Forms.FndIndexListCellPaddingConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])"/> should be called to find the properties of this object; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListColumn">
            <summary>
            The <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListColumn"/> class represents a column
            in the control. 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListColumn"/> class.
            </summary>		
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListColumn.OnGroupByListChanged(System.EventArgs)">
            <summary>
            Raises the GroupByListChanged event.
            </summary>
            <param name="e">The Event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListColumn.OnSortByListChanged(System.EventArgs)">
            <summary>
            Raises the SortByListChanged event.
            </summary>
            <param name="e">The Event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListColumn.SetThemeVariables">
            <summary>
            Should invoke a reset of the control properties that have been themed.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexListColumn.SortByListChanged">
            <summary>
            Fired when the Sort By List needs to be refreshed
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexListColumn.GroupByListChanged">
            <summary>
            Fired when the Group by List needs to be refreshed
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListColumn.CellCaptionForeColor">
            <summary>
            Gets or sets the foreground color of cell captions.
            </summary>
            <value>The foreground color to apply to cell captions displayed by a column in the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor"/> property if 
            the column is not associated with a FndIndexList control; otherwise the color specified in the CellCaptionForeColor property for the FndIndexList control is used.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListColumn.DrawEmptyCells">
            <summary>
            Gets or sets a boolean value that indicates if cells with empty/null values should be displayed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListColumn.FixedWidth">
            <summary>
            Gets or sets a boolean to indicate whether to keep the width of this column fixed when the control is resized.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListColumn.Font">
            <summary>
            Gets or sets the font to apply to text displayed by a column in the control.
            </summary>
            <value>The font to apply to text displayed by a column in the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont"/> property if 
            the column is not associated with a FndIndexList control; otherwise the font specified in the Font property for the FndIndexList control is used.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListColumn.ForeColor">
            <summary>
            Gets or sets the foreground color used to display text in the column.
            </summary>
            <value>The foreground color used to display text in the column. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor"/> property if 
            the column is not associated with a FndIndexList control; otherwise the color specified in the ForeColor property for the FndIndexList control is used.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListColumn.MinimumWidth">
            <summary>
            Gets or sets the minimum column width that should be maintained.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListColumn.Percent">
            <summary>
            Gets or sets a value indicating width of the column as a percentage of the 
            total width of the control.
            </summary>
            <value>
            The width of the column as a percentage of the total width of the control.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListColumn.Visible">
            <summary>
            Gets or sets a boolean to indicate if this column is visible or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListColumn.Width">
            <summary>
            Gets or sets the column width.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListColumn.Cells">
            <summary>
            Gets the collection of all cells that appear in the control.
            </summary>
            <value>
            A <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCellCollection"/> that represents the cells that appear in the control.
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection">
            <summary>
            Represents the collection of columns in a <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexList"/> control.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.Add(Ifs.Fnd.Windows.Forms.FndIndexListColumn)">
            <summary>
            Adds an existing <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListColumn"/> to the collection.
            </summary>
            <param name="value">The <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListColumn"/> to add to the collection.</param>
            <returns>The zero-based index into the collection where the item was added.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.AddRange(Ifs.Fnd.Windows.Forms.FndIndexListColumn[])">
            <summary>
            Adds an array of column to the collection.
            </summary>
            <param name="values">An array of <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListColumn"/> objects to add to the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.Contains(Ifs.Fnd.Windows.Forms.FndIndexListColumn)">
            <summary>
            Determines whether the specified column is located in the collection.
            </summary>
            <param name="value">A <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListColumn"/> representing the column to locate in the collection.</param>
            <returns><b>true</b> if the column is contained in the collection; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.IndexOf(Ifs.Fnd.Windows.Forms.FndIndexListColumn)">
            <summary>
            Returns the index within the collection of the specified column.
            </summary>
            <param name="value">A <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListColumn"/> representing the column to locate in the collection.</param>
            <returns>The zero-based index of the column's location in the collection. If the column is not located in the collection, the return value is negative one (-1).</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.Insert(System.Int32,Ifs.Fnd.Windows.Forms.FndIndexListColumn)">
            <summary>
            Inserts an existing column into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index location where the column is inserted.</param>
            <param name="value">The <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListColumn"/> to insert into the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.Remove(Ifs.Fnd.Windows.Forms.FndIndexListColumn)">
            <summary>
            Removes the specified column from the collection.
            </summary>
            <param name="column">A <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListColumn"/> representing the column to remove from the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.OnGroupByListChanged(System.EventArgs)">
            <summary>
            Raises the GroupByListChanged event.
            </summary>
            <param name="e">The Event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.OnSortByListChanged(System.EventArgs)">
            <summary>
            Raises the SortByListChanged event.
            </summary>
            <param name="e">The Event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.Clear">
            <summary>
            Removes all columns from the collection.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the specified column from the collection.
            </summary>
            <param name="index">A <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListColumn"/> representing the column to remove from the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection"/> to a compatible one-dimensional Array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection"/>. The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.GetEnumerator">
            <summary>
            Returns an enumerator to use to iterate through the column collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> that represents the column collection.</returns>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.SortByListChanged">
            <summary>
            Fired when the Sort By List needs to be refreshed
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.GroupByListChanged">
            <summary>
            Fired when the Group by List needs to be refreshed
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.Item(System.Int32)">
            <summary>
            Gets the column at the specified index within the collection.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value>
            <b>true</b> if the collection is read-only; otherwise, <b>true</b>.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection"/> is synchronized (thread-safe).
            </summary>
            <value>
            <b>true</b> if access to the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection"/> is synchronized (thread-safe); otherwise, <b>false</b>. The default is <b>false</b>.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
            <value>
            The number of items in the collection.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection"/>.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListColumnCollection"/>.
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListItem">
            <summary>
            Represents an item displayed on the IndexList.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItem.#ctor(Ifs.Fnd.Windows.Forms.FndIndexList,System.String)">
            <summary>
            Creates a new item.
            </summary>
            <param name="owner">Reference to the owner IndexList.</param>
            <param name="name">A name for this item</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItem.DefineGroup(Ifs.Fnd.Windows.Forms.FndIndexListGroup)">
            <summary>
            Flags the current item as a group header. Also sets a reference to the 
            corresponding <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListGroup"/>
            </summary>
            <param name="group"><b>FndIndexListGroup</b> corresponding to this item.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItem.GetCellInfo(System.Int32,System.Int32)">
            <summary>
            Parses the CellInfo collection to find the CellInfo object referring to the cell that contains
            the point corresponding to x, y.
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <returns>FndIndexListCellInfo object if found. Otherwise returns an empty FndIndexListCellInfo object.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItem.GetCell(System.Int32,System.Int32)">
            <summary>
            Returns a reference to the cell with specified guid within the column specified by columnIndex.
            </summary>
            <param name="columnIndex">index of IndexList column.</param>
            <param name="cellIndex">index of cell within column.</param>
            <returns>A <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> instance.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItem.CopyStandardData(Ifs.Fnd.Windows.Forms.FndIndexListItem)">
            <summary>
            Copies a subset of this item's contents to the specified item.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItem.SetTextColour(System.Drawing.Color)">
            <summary>
            Sets the text colour of this <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListItem"/> instance.
            </summary>
            <param name="colour">text colour</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItem.ResetTextColour">
            <summary>
            Sets the text colour of this <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListItem"/> instance to default.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItem.SetCellFontRange(System.Int32[],System.Int32[],System.Drawing.Font[])">
            <summary>
            Sets the display font of a specified range of <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> instances.
            </summary>
            <param name="columnIndices">Array of column indices where each column index has a corresponding cell index in the cellIndices array.</param>
            <param name="cellIndices">Array of cell indices where each cell index has a corresponding column index in the columnIndices array.</param>
            <param name="fonts">Array of Font objects where each font is for a cell instance identified by the column index value in columnIndices and a cell index value cellIndices.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItem.SetCellFontRange(System.Int32[],System.Int32[],System.Drawing.Font)">
            <summary>
            Sets the display font of a specified range of <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> instances.
            </summary>
            <param name="columnIndices">Array of column indices where each column index has a corresponding cell index in the cellIndices array.</param>
            <param name="cellIndices">Array of cell indices where each cell index has a corresponding column index in the columnIndices array.</param>
            <param name="font">font to apply to each cell instance identified by the column index value in columnIndices and a cell index value cellIndices.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItem.SetCellFont(System.Int32,System.Int32,System.Drawing.Font)">
            <summary>
            Sets the display font of a specified instance of <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/>.
            </summary>
            <param name="columnIndex">Index of column containing this cell within the Columns collection.</param>
            <param name="cellIndex">Index of this cell within the Cells collection.</param>
            <param name="font">Font to set.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItem.GetCellFont(System.Int32,System.Int32)">
            <summary>
            Gets the display font of the specified cell.
            </summary>
            <param name="columnIndex">Index of column containing this cell within the Columns collection.</param>
            <param name="cellIndex">Index of this cell within the Cells collection.</param>
            <returns><see cref="P:Ifs.Fnd.Windows.Forms.FndIndexListItem.Font"/> object.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItem.SetCellCheckBoxState(System.Int32,System.Int32,System.Windows.Forms.CheckState)">
            <summary>
            Sets the checkbox state of the specified cell instance, if the corresponding cell's CheckBox property is set to <b>true</b>.
            </summary>
            <param name="columnIndex">Index of column containing this cell within the Columns collection.</param>
            <param name="cellIndex">Index of this cell within the Cells collection.</param>
            <param name="state">New state of the checkbox.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItem.GetCellCheckBoxState(System.Int32,System.Int32)">
            <summary>
            Gets the checkbox state of the specified cell instance.
            </summary>
            <param name="columnIndex">Index of column containing this cell within the Columns collection.</param>
            <param name="cellIndex">Index of this cell within the Cells collection.</param>
            <returns>Corresponding <see cref="T:System.Windows.Forms.CheckState"/> value if a cell instance is found. Returns <b>CheckState.Indeterminate</b> if the cell has no checkbox or the specified cell instance is not found.</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItem.DataRow">
            <summary>
            Gets or sets a reference to the <see cref="T:Ifs.Fnd.Data.FndDataRow"/> represented by this item.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItem.Expanded">
            <summary>
            Gets or sets whether this item should be shown expanded or collapsed on the IndexList.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItem.Group">
            <summary>
            Gets the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListGroup"/> corresponding to this item.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItem.IsGroup">
            <summary>
            Indicates whether the current item is a group header or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItem.Parent">
            <summary>
            Reference to the parent group of this item.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItem.Selected">
            <summary>
            Gets or sets whether the current item is marked as selected on the IndexList.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItem.Tag">
            <summary>
            Available for the developer to store and retrieve any info. specific to this item.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItem.Font">
            <summary>
            Gets or sets the font for display of text in this item. Unless a font has been
            set specifically to an instance of cell, value of this property will override font settings
            at FndIndexListColumn and FndIndexListCell level.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItem.IsLink">
            <summary>
            If set, decides if the item should be treated as a link. If not set, the cell settings are used.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItem.InternalData">
            <summary>
            Depending on whether the current item corresponds to a data row or a group of rows (i.e. a group header)
            this property is used to get/set the position in the binding list or a <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListGroup"/> object.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItem.PlusMinusBounds">
            <summary>
            Bounds of the rectangle containing the plus/minus image on a group header.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItem.GroupHeaderIndex">
            <summary>
            Gets the index of group header of the current focused item.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItem.Index">
            <summary>
            Gets the index of this item in the Items collection.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItem.AllSiblingsSelected">
            <summary>
            Indicates if all children of this item's parent group are selected.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItem.Name">
            <summary>
            Name of this item.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection">
            <summary>
            Represents the collection of items in a <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexList"/> control.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection.#ctor(Ifs.Fnd.Windows.Forms.FndIndexList)">
            <summary>
            Creates a new instance of an item collection.
            </summary>
            <param name="owner"><see cref="T:Ifs.Fnd.Windows.Forms.FndIndexList"/> control that owns the items.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection.IndexOf(Ifs.Fnd.Windows.Forms.FndIndexListItem)">
            <summary>
            Returns the index of the given item within the collection.
            </summary>
            <param name="item">A <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListItem"/> to locate in the collection.</param>
            <returns>The zero-based index of the item's position in the collection. If item is not found, -1 is returned.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection.Contains(Ifs.Fnd.Windows.Forms.FndIndexListItem)">
            <summary>
            Determines whether the collection contains the given item.
            </summary>
            <param name="item">A <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListItem"/> representing the item to locate.</param>
            <returns><b>true</b> if the item is found; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection.Clear">
            <summary>
            Clears the current selection.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection"/> to a compatible one-dimensional Array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection"/>. The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through this collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object.</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListItem"/> at the specified index within the collection.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListItem"/> at the specified index within the collection.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value>
            <b>true</b> if the collection is read-only; otherwise, <b>true</b>.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection"/> is synchronized (thread-safe).
            </summary>
            <value>
            <b>true</b> if access to the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection"/> is synchronized (thread-safe); otherwise, <b>false</b>. The default is <b>false</b>.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
            <value>
            The number of items in the collection.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection"/>.
            </summary>
            <value>
            An object that can be used to synchronize access to the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListItemCollection"/>.
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListContextMenuDisplayMode">
            <summary>
            Specifies the context menu display modes in a <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexList"/>.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListContextMenuDisplayMode.ExternalOnly">
            <summary>
            Display only externally provided context menu.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListContextMenuDisplayMode.MergeWithStandard">
            <summary>
            Display externally provided context menu merged with standard context menu.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListContextMenuDisplayMode.None">
            <summary>
            No context menu displayed.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListContextMenuDisplayMode.StandardOnly">
            <summary>
            Display only standard context menu.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListLineStyle">
            <summary>
            Specifies the style of lines in a <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexList"/>.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListLineStyle.None">
            <summary>
            No lines between items.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListLineStyle.Solid">
            <summary>
            Solid lines between items.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListLineStyle.Dash">
            <summary>
            Dashed lines between items.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListSortOrder">
            <summary>
            Specifies how items in a <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexList"/> are sorted.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListSortOrder.Ascending">
            <summary>
            The items are sorted in ascending order.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListSortOrder.Descending">
            <summary>
            The items are sorted in descending order.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListSortOrder.None">
            <summary>
            The items are not sorted in any order.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListCellDisplayStyle">
            <summary>
            Specifies the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> display styles in a <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexList"/>.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListCellDisplayStyle.Text">
            <summary>
            Only text will be displayed.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListCellDisplayStyle.Image">
            <summary>
            Only image will be displayed.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListCellDisplayStyle.TextAndImage">
            <summary>
            Both text and image will be displayed.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListToolTipStyle">
            <summary>
            Specifies the display styles available for tooltips in FndIndexList.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListToolTipStyle.Default">
            <summary>
            Default style. Where text is trimmed, tooltip will show the full text.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListToolTipStyle.Custom">
            <summary>
            Tooltip can be set externally.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListToolTipType">
            <summary>
            Specifies the available types of tooltip in FndIndexList.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListToolTipType.General">
            <summary>
            ToolTip displayed for the entire cell.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListToolTipType.CheckBox">
            <summary>
            ToolTip displayed for the checkbox in a cell.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListToolTipType.Image">
            <summary>
            ToolTip displayed for the image in a cell.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListToolTipType.Text">
            <summary>
            ToolTip displayed for the text in a cell.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListToolTipType.None">
            <summary>
            No tooltip displayed.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListDateFieldGroupStyle">
            <summary>
            Specifies the date field group styles.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListDateFieldGroupStyle.Date">
            <summary>
            Default style. Groups on date.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndIndexListDateFieldGroupStyle.Year">
            <summary>
            Groups on year.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListGroupExpandEventArgs">
            <summary>
            Provides data to the <cref>GroupExpand</cref> event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListGroupExpandEventArgs.#ctor(Ifs.Fnd.Windows.Forms.FndIndexListItem)">
            <summary>
            Initializes a new instance of the FndIndexListGroupExpandEventArgs class with a reference to the specified datasource item.
            </summary>
            <param name="item">Reference to the item containing the Group.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListGroupExpandEventArgs.Item">
            <summary>
            Gets the item containing this Group.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListCellCheckedEventArgs">
            <summary>
            Provides data to the <cref>CellChecked</cref> event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListCellCheckedEventArgs.#ctor(System.String,System.Windows.Forms.CheckState,System.Windows.Forms.CheckState,Ifs.Fnd.Data.FndDataRow,Ifs.Fnd.Windows.Forms.FndIndexListItem)">
            <summary>
            Initializes a new instance of the FndIndexListCellCheckedEventArgs class with a reference to the specified datasource item.
            </summary>
            <param name="displayMember">Datasource column name associated with this cell</param>
            <param name="row"><cref>Ifs.Fnd.Data.FndDataRow</cref> represented by the IndexList item that contains the cell for which the event was raised. </param>
            <param name="currentValue">Current state of the checkbox. A <cref>CheckState</cref> value.</param>
            <param name="newValue">New state of the checkbox. A <cref>CheckState</cref> value.</param>
            <param name="item">Reference to the item containing the checkbox.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCellCheckedEventArgs.DisplayMember">
            <summary>
            Name of the datasource column associated with this cell.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCellCheckedEventArgs.DataRow">
            <summary>
            <cref>Ifs.Fnd.Data.FndDataRow</cref> represented by the IndexList item.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCellCheckedEventArgs.CurrentValue">
            <summary>
            Gets the current state of the checkbox.
            </summary>
            <value><see cref="T:System.Windows.Forms.CheckState"/></value> enumerated value.
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCellCheckedEventArgs.NewValue">
            <summary>
            Gets/Sets the new state of the checkbox.
            </summary>
            <value><see cref="T:System.Windows.Forms.CheckState"/></value> enumerated value.
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListCellCheckedEventArgs.Item">
            <summary>
            Gets the item containing this checkbox.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndImageIndexEventArgs">
            <summary>
            Provides data to the <cref>FetchImageIndex</cref> event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndImageIndexEventArgs.#ctor(Ifs.Fnd.Data.FndDataRow)">
            <summary>
            Initializes a new instance of the FndImageIndexEventArgs class with a reference to the specified item of the datasource.
            </summary>
            <param name="row"><cref>Ifs.Fnd.Data.FndDataRow</cref> represented by the IndexList item for which the event was raised. </param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndImageIndexEventArgs.Index">
            <summary>
            Image index of the imagelist.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndImageIndexEventArgs.DataRow">
            <summary>
            <cref>Ifs.Fnd.Data.FndDataRow</cref> represented by the IndexList item.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndCellImageResourceEventArgs">
            <summary>
            Provides data to the <cref>FetchCellImageResource</cref> event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCellImageResourceEventArgs.#ctor(Ifs.Fnd.Data.FndDataRow,System.String)">
            <summary>
            Initialize a new instance of FetchCellImageResourceEventArgs.
            </summary>
            <param name="dataRow">Datasource member associated with the IndexList item that contained the cell.</param>
            <param name="columnName">Column name associated with the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> instance that displays the image.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCellImageResourceEventArgs.DataRow">
            <summary>
            <cref>Ifs.Fnd.Data.FndDataRow</cref> represented by the IndexList item.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCellImageResourceEventArgs.DisplayMember">
            <summary>
            Column name associated with the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> instance that displays the image.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCellImageResourceEventArgs.ImageResource">
            <summary>
            Resource string referring to the image in the themed resource collection.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListLinkClickedEventArgs">
            <summary>
            Provides data to the <cref>LickClicked</cref> event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListLinkClickedEventArgs.#ctor(System.String,Ifs.Fnd.Data.FndDataRow,Ifs.Fnd.Windows.Forms.FndIndexListItem)">
            <summary>
            Initializes a new instance of the FndIndexListLinkClickedEventArgs class.
            </summary>
            <param name="displayMember">Column name associated with the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> instance that displayed the link.</param>
            <param name="dataRow">Datasource member associated with the IndexList item that contained the cell.</param>
            <param name="item">Reference to the item containing the checkbox.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListLinkClickedEventArgs.DataRow">
            <summary>
            Datasource member associated with the IndexList item that contained the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> instance.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListLinkClickedEventArgs.DisplayMember">
            <summary>
            Column name associated with the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> instance that displayed the link.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListLinkClickedEventArgs.Item">
            <summary>
            Gets the item containing this checkbox.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListIconClickedEventArgs">
            <summary>
            Provides data to the <cref>IconClicked</cref> event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListIconClickedEventArgs.#ctor(System.String,Ifs.Fnd.Data.FndDataRow,System.String)">
            <summary>
            Initializes a new instance of the FndIndexListIconClickedEventArgs class.
            </summary>
            <param name="displayMember">Column name associated with the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> instance that displayed the link.</param>
            <param name="dataRow">Datasource member associated with the IndexList item that contained the cell.</param>
            <param name="imgResource">Resource string of the icon displayed in the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> instance.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListIconClickedEventArgs.DataRow">
            <summary>
            Datasource member associated with the IndexList item that contained the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> instance.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListIconClickedEventArgs.DisplayMember">
            <summary>
            Column name associated with the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> instance that displayed the link.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListIconClickedEventArgs.ImageResource">
            <summary>
            Resource string of the icon displayed in the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> instance.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListIconClickedEventArgs.ImageChanged">
            <summary>
            Indicates if imageResource was modified.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListItemClickedEventArgs">
            <summary>
            Provides data to the <cref>ItemClicked</cref> event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListItemClickedEventArgs.#ctor(System.Int32,Ifs.Fnd.Data.FndDataRow,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of <b>FndIndexListItemClickedEventArgs</b>
            </summary>
            <param name="index">index of the clicked item.</param>
            <param name="dataRow"><see cref="T:Ifs.Fnd.Data.FndDataRow"/> represented by the item.</param>
            <param name="columnIndex">index of column on which the user clicked. If the click was outside all columns, -1.</param>
            <param name="cellIndex">index of cell on which the user clicked. If the user didn't click on a cell, -1.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItemClickedEventArgs.Index">
            <summary>
            Index of the clicked item in the list of displayed items (zero based).
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItemClickedEventArgs.ColumnIndex">
            <summary>
            Index of the column within the item (zero based).
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItemClickedEventArgs.CellIndex">
            <summary>
            Index of the cell within the column (zero based).
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListItemClickedEventArgs.DataRow">
            <summary>
            Reference to the <see cref="T:Ifs.Fnd.Data.FndDataRow"/> that clicked item represents.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndGroupHeaderCaptionEventArgs">
            <summary>
            Provides data to the <cref>FetchGroupHeaderCaption</cref> event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndGroupHeaderCaptionEventArgs.#ctor(System.String,System.Object,System.String,Ifs.Fnd.Data.FndDataRow)">
            <summary>
            Initialize a new instance of FetchCellImageResourceEventArgs.
            </summary>
            <param name="columnName">GroupBy column name</param>
            <param name="value">GroupBy column value.</param>
            <param name="newValue">Text to use for caption. Default will be the GroupBy column value.</param>
            <param name="dataRow">The data row the group is based on. This is the data row connected to the first item in the group.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndGroupHeaderCaptionEventArgs.GroupByColumn">
            <summary>
            GroupBy column name.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndGroupHeaderCaptionEventArgs.Value">
            <summary>
            GroupBy column value for this group.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndGroupHeaderCaptionEventArgs.HeaderCaption">
            <summary>
            Caption to use in the header of this group.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndGroupHeaderCaptionEventArgs.DataRow">
            <summary>
            The data row the group is based on. This is the data row connected to the first item
            in the group.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolTipSetEventArgs">
            <summary>
            Provides data to the <cref>ToolTipSet</cref> event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTipSetEventArgs.#ctor(Ifs.Fnd.Data.FndDataRow,System.String,Ifs.Fnd.Windows.Forms.FndIndexListToolTipType)">
            <summary>
            Initialize a new instance of FndToolTipSetEventArgs.
            </summary>
            <param name="dataRow">Data row whose value the cell displays.</param>
            <param name="displayMember">Name of datasource column attached to the cell for which the tooltip is fetched.</param>
            <param name="toolTipType">Type of the tooltip to fetch. Default will be <see cref="F:Ifs.Fnd.Windows.Forms.FndIndexListToolTipType.Text"/>.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTipSetEventArgs.#ctor(Ifs.Fnd.Data.FndDataRow,System.String,Ifs.Fnd.Windows.Forms.FndIndexListToolTipType,System.Boolean)">
            <summary>
            Initialize a new instance of FndToolTipSetEventArgs.
            </summary>
            <param name="dataRow">Data row whose value the cell displays.</param>
            <param name="displayMember">Name of datasource column attached to the cell for which the tooltip is fetched.</param>
            <param name="toolTipType">Type of the tooltip to fetch. Default will be <see cref="F:Ifs.Fnd.Windows.Forms.FndIndexListToolTipType.Text"/>.</param>
            <param name="fullTextDisplayed">Indicates if the current <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCellInstance"/> displays its text completely.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolTipSetEventArgs.DataRow">
            <summary>
            Gets the <see cref="T:Ifs.Fnd.Data.FndDataRow"/> the item represents.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolTipSetEventArgs.ToolTipType">
            <summary>
            Gets the type of the tooltip to fetch.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolTipSetEventArgs.DisplayMember">
            <summary>
            Gets the column name associated with the <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCell"/> instance raised the event.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolTipSetEventArgs.ToolTipText">
            <summary>
            Gets/sets the tooltip text assigned by the developer.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolTipSetEventArgs.FullTextDisplayed">
            <summary>
            Indicates if the current <see cref="T:Ifs.Fnd.Windows.Forms.FndIndexListCellInstance"/> displays its text completely. A value of false means that
            the text is trimmed to fit the bounds of the cell instance.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListChangedEventArgs">
            <summary>
            Provides data to the <cref>GroupExpand</cref> event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListChangedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the FndIndexListChangedEventArgs.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndImageIndexEventHandler">
            <summary>
            Represents the method that will handle the <cref>FetchImageIndex</cref> event.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndCellImageResourceEventHandler">
            <summary>
            Represents the method that will handle the <cref>FetchCellImageResource</cref> event.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListCellCheckedEventHandler">
            <summary>
            Represents the method that will handle the <cref>CellCheck</cref> event.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListLinkClickedEventHandler">
            <summary>
            Represents the method that will handle the <cref>LinkClicked</cref> event.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListIconClickedEventHandler">
            <summary>
            Represents the method that will handle the <cref>IconClicked</cref> event.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListItemClickedEventHandler">
            <summary>
            Represents the method that will handle the <cref>ItemClicked</cref> event.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndGroupHeaderCaptionEventHandler">
            <summary>
            Represents the method that will handle the <cref>FetchGroupHeaderCaption</cref> event.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolTipSetEventHandler">
            <summary>
            Represents the method that will handle the <cref>ToolTipSet</cref> event.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListGroupExpandEventHandler">
            <summary>
            Represents the method that will handle the <cref>GroupExpand</cref> event.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListChangedEventHandler">
            <summary>
            Represents the method that will handle the <cref>ListChanged</cref> event
            </summary>	
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListSortedEventHandler">
            <summary>
            Represents the method that will handle the <cref>ListSorted</cref> event
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndIndexListGroup">
            <summary>
            Represents a group of items on the IndexList.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndIndexListGroup.#ctor(Ifs.Fnd.Windows.Forms.FndIndexList,System.String)">
            <summary>
            Creates a group.
            </summary>
            <param name="text">Group header caption.</param>
            <param name="owner">Owner IndexList.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListGroup.InternalChildren">
            <summary>
            Gets or sets the list of children in this group.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListGroup.Children">
            <summary>
            Gets the list of children in this group.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListGroup.Selected">
            <summary>
            Gets or sets a value indicating whether the group is selected or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListGroup.Text">
            <summary>
            Group by column value for this group.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndIndexListGroup.Caption">
            <summary>
            Group by header title.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndLabel">
            <summary>
            Summary description for FndLabel.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndLabel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLabel.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndLabel class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLabel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLabel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLabel.Format">
            <summary>
            Gets a Format.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLabel.AutoSize">
            <summary>
            Gets or sets a value indicating whether the control is automatically resized to display its entire contents.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLabel.IsFieldLabel">
            <summary>
            True if the label is connected to a field.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLabel.OwnerControl">
            <summary>
            Only the FndFieldExtender should set this property.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLabel.AutoHandleUpdatable">
            <summary>
            Do not use this method.  It is there in the FndLabel merely for UI consistancy when readonly.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLabel.Updatable">
            <summary>
            Do not use this method.  It is there in the FndLabel merely for UI consistancy when readonly.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndLinkLabelClickBehaviour">
            <summary>
            Specifies whether an click on a FndLinkLabel should raise an ordinary LinkClicked event or
            if it should navigate its container form to the specified URL.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndLinkLabelClickBehaviour.RaiseLinkLabelClicked">
            <summary>
            Raises the System.Windows.Forms.LinkLabel.LinkClicked event if the FndLinkLabel is clicked.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndLinkLabelClickBehaviour.NavigateToUrl">
            <summary>
            Calls the Explorer Navigate method with the URL property value.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndLinkLabelNavigateEventArgs">
            <summary>
            Provides URL for the FndLinkLabel.LinkNavigating event.  
            This URL can be modified for dynamic navigation destinations.
            </summary>	
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLinkLabelNavigateEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndLinkLabelNavigateEventArgs class.
            </summary>
            <param name="url">The initial URL to use in navigation</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLinkLabelNavigateEventArgs.Url">
            <summary>
            Gets or sets the URL string
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndLinkLabelNavigateEventHandler">
            <summary>
            Represents the method that will handle the FndLinkLabel.LinkNavigating event.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndListBox">
            <summary>
            Extends the <see cref="T:System.Windows.Forms.ListBox"/> control
            with IFS-specific behavior. 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListBox.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndListBox class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListBox.OnReadOnlyChanged">
            <summary>
            Raises the ReadOnlyChanged Event
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overridden to mimic readonly behavior
            </summary>
            <param name="m">The event arguments.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListBox.SetTheme">
            <summary>
            Sets the Theme Colors of this control.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndListBox.ReadOnlyChanged">
            <summary>
            Fired when the value of the ReadOnly property changes.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListBox.ReadOnly">
            <summary>
            Gets or sets a property stating whether the control is readonly.
            </summary>
            <value>
            True if the control is readonly, false otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListBox.BackColor">
            <summary>
            Gets or sets the background color of the control.
            </summary>
            <value>
            The background color of the control.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListBox.ForeColor">
            <summary>
            Gets or sets the Foreground color of the control.
            </summary>
            <value>
            The Foreground color of the control.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListBox.Updatable">
            <summary>
            Gets or sets a value indicating whether the control is updatable or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListBox.AutoHandleUpdatable">
            <summary>
            Gets or sets a value indicating whether the updatable state of the control
            is automatically handled or not.
            Note that this is only valid when the control is data bound.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListBox.UseThemes">
            <summary>
            Gets or sets whether the theming should be used with this control.
            </summary>
            <value>
            True if the theming should be used, false otherwise
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndListView">
            <summary>
            Subclass of System.Windows.Forms.ListView which adds IFS specific functionality
            such as column sorting and flicker free painting.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListView.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndListView class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListView.OnReadOnlyChanged">
            <summary>
            Raises the ReadOnlyChanged Event
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListView.AddColumn(System.String,Ifs.Fnd.Data.FndAttributeType,System.String)">
            <summary>
            Add column
            </summary>
            <param name="name"></param>
            <param name="dataType"></param>
            <param name="title"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListView.SetColumnDataType(System.String,Ifs.Fnd.Data.FndAttributeType)">
            <summary>
            Set column datatype for sorting purposes
            </summary>
            <param name="name"></param>
            <param name="dataType"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListView.RemoveColumn(System.String)">
            <summary>
            Remove column
            </summary>
            <param name="name">column name</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListView.Sort(System.Int32)">
            <summary>
            Sort the list view
            </summary>
            <param name="index">index of the column to be sorted</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)">
            <summary>
            Performs sorting on the clicked column.
            Also raises the System.Windows.Forms.ListView.ColumnClick event. 
            </summary>
            <param name="e">A System.Windows.Forms.ColumnClickEventArgs that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListView.OnGotFocus(System.EventArgs)">
            <summary>
            Fired when the control receives focus
            </summary>
            <param name="e">Event arguments when receiving focus</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListView.OnLostFocus(System.EventArgs)">
            <summary>
            Fired when the control loses focus.
            </summary>
            <param name="e">Event arguments when losing focus.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListView.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.RightToLeftChanged event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListView.OnItemSelectionChanged(System.Windows.Forms.ListViewItemSelectionChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e">Event Arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListView.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged Event
            </summary>
            <param name="e">Event Arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overridden to mimic readonly behavior
            </summary>
            <param name="m">The event arguments.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListView.SetTheme">
            <summary>
            Set the Ifs specific theme.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndListView.ReadOnlyChanged">
            <summary>
            Fired when the value of the ReadOnly property changes.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListView.FocusSelection">
            <summary>
            Specifies whether the selection is highlighted with Focused colours even when the control has lost its focus
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListView.ReadOnly">
            <summary>
            Gets or sets a property stating whether the control is readonly.
            </summary>
            <value>
            True if the control is readonly, false otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListView.SortColumn">
            <summary>
            Gets the column for which the list view is currently sorted.
            <value>returns the column id if the list view is sorted and -1 if not.</value>
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListView.Sorting">
            <summary>
            Gets or sets the sort order for items in the control.
            <value>returns the SortOrder of the ListView control.</value>
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListView.BackColor">
            <summary>
            Gets or sets the background color of the control.
            </summary>
            <value>
            The background color of the control.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListView.ForeColor">
            <summary>
            Gets or sets the Foreground color of the control.
            </summary>
            <value>
            The Foreground color of the control.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListView.Updatable">
            <summary>
            Gets or sets a value indicating whether the control is updatable or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListView.AutoHandleUpdatable">
            <summary>
            Gets or sets a value indicating whether the updatable state of the control
            is automatically handled or not.
            Note that this is only valid when the control is data bound.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListView.UseThemes">
            <summary>
            Gets or sets whether the theming should be used with this control.
            </summary>
            <value>
            True if the theming should be used, false otherwise
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.ListViewExtensions">
            <summary>
            Utility class providing Win32 helper methods.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.ListViewExtensions.SetSortIcon(System.Windows.Forms.ListView,System.Int32,System.Windows.Forms.SortOrder)">
            <summary>
            Sets the 'arrow head' icon on the listview column indicating the sort order.
            </summary>
            <param name="ListViewControl"><see cref="T:System.Windows.Forms.ListView"/> control hosting the column.</param>
            <param name="ColumnIndex">Zero based index of the column.</param>
            <param name="Order"><see cref="T:System.Windows.Forms.SortOrder"/> value indicating the sort order.</param>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndListViewItemSortType">
            <summary>
            An enumeration for the datatype that a list view column will be treated as, for the purpose of sorting.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndListViewItemSortType.String">
            <summary>
            Sort the FndIndexList treating the selected column as a String column
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndListViewItemSortType.Numeric">
            <summary>
            Sort the FndIndexList treating the selected column as a Numeric column
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndListViewItemSortType.DateTime">
            <summary>
            Sort the FndIndexList treating the selected column as a DateTime column
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndListViewItemSorter">
            <summary>
            Provides the implementation that allows an FndListView column to be sorted.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndListViewItemSorter.Compare(System.Object,System.Object)">
            <summary>
            Required Implementation: Returns the result of the sort
            </summary>
            <param name="object1">Left side of the comparison</param>
            <param name="object2">Right side of the the comparison</param>
            <returns>
            Less than zero if Object1 is less than Object2. 
            Zero if Object1 equals Object2. 
            Greater than zero if Object1 is greater than Object2.
            </returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndListViewItemSorter.Column">
            <summary>
            Gets column that is sorted
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndLovButton">
            <summary>
            Summary description for FndLovButton.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLovButton.#ctor">
            <summary> 
            FndLovButton.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLovButton.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLovButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnMouseDown
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLovButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnMouseUp
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLovButton.OnMouseEnter(System.EventArgs)">
            <summary>
            OnMouseEnter
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLovButton.OnMouseLeave(System.EventArgs)">
            <summary>
            OnMouseLeave
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLovButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            OnPaint.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLovButton.PaintButton(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            PaintButton
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLovButton.MaximumHeight">
            <summary>
            Gets or sets a value indicating maximum height.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLovButton.DownDirection">
            <summary>
            Gets or sets a value indicating direction of dropdown icon in SystemThemed mode.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLovButton.IconColor">
            <summary>
            Gets or sets a value indicating color of icon.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLovButton.BackColor">
            <summary>
            Gets or sets a value indicating BackColor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLovButton.Appearance">
            <summary>
            Gets or sets a value indicating appearance.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLovButton.LovStyle">
            <summary>
            Gets or sets a value indicating lov style.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLovButton.IconOffset">
            <summary>
            Gets or sets a value indicating icon-offset from the Center,Bottom.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLovButton.PointDistance">
            <summary>
            Gets or sets a value indicating distance between points.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLovButton.OwnerControls">
            <summary>
            Gets or sets a value indicating owner controls.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndLovButton.ButtonAppearance">
            <summary>
            Specifies the drawing style.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndLovButton.ButtonAppearance.Flat">
            <summary>
            Flat.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndLovButton.ButtonAppearance.Fixed3D">
            <summary>
            Fixed3D.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndLovButton.ButtonAppearance.System3D">
            <summary>
            System3D.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndLovButton.ButtonAppearance.SystemThemed">
            <summary>
            SystemThemed.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndLovButton.ButtonAppearance.Gradiant">
            <summary>
            Gradiant.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndLovButton.ButtonLovStyle">
            <summary>
            Specifies the lov style.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndLovButton.ButtonLovStyle.DropDown">
            <summary>
            DropDown.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndLovButton.ButtonLovStyle.PopUp">
            <summary>
            PopUp.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndMruList">
            <summary>
            List containing Most-Recently-Used entries attached to an editable text control
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMruList.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndMruList class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMruList.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMruList.SelectPreviousEntry">
            <summary> 
            Moves selected entry to previous entry in mru list.
            <returns>Value of currently selected text.</returns>
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMruList.SelectNextEntry">
            <summary> 
            Moves selected entry to next entry in mru list.
            <returns>Value of currently selected text.</returns>
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMruList.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndMruList.MruItemSelected">
            <summary>
            Event triggered when item has been selected in the MRU list.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMruList.Active">
            <summary>
            Gets or sets Active property, indicating drop-down list state.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMruList.Count">
            <summary>
            Gets count of entries in the mru list.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMruList.SelectedEntry">
            <summary>
            Gets currently selected text in the mru list.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMruList.ListEntries">
            <summary> 
            Sets or gets the entries displayed in the mru List.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndMultiPanel">
            <summary>
            FndMultiPanel can be used to show/hide different panels.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMultiPanel.#ctor">
            <summary>
            Creates a FndMultiPanel
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMultiPanel.SelectedPanel">
            <summary>
            Gets or sets the selected panel. Can be null (no panels shown)
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMultiPanel.Pages">
            <summary>
            Gets the pages in the FndMultiPanel
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.MultiPanelPage">
            <summary>
            Represents a panel in FndMultiPanel
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.MultiPanelPage.#ctor">
            <summary>
            Creates a MultiPanelPage
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.MultiPanelPage.OnHandleCreated(System.EventArgs)">
            <summary>
            Override OnHandleCreate to apply new layout for controls if running in right to left language.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.MultiPanelPage.Location">
            <summary>
            Gets/Sets location
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.MultiPanelPage.Size">
            <summary>
            Gets/Sets size
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.MultiPanelPage.Anchor">
            <summary>
            Gets/Sets anchor style
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.MultiPanelPage.Dock">
            <summary>
            Gets/Sets dock style
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.MultiPanelPage.TabStop">
            <summary>
            Gets/Sets whether the panel is a tab stop
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.MultiPanelPage.Visible">
            <summary>
            Gets/Sets whether the panel is visible
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommonControls.FndPersistentSizeForm">
            <summary>
            Persists the size of the dialog between sessions
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndPersistentSizeForm.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndPersistentSizeForm.OnLoad(System.EventArgs)">
            <summary>
            Override OnLoad
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndPersistentSizeForm.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Override Closing
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommonControls.FndPersistentSizeForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndPersistentSizeForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndPersistentSizeForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndPictureBox">
            <summary>
            Subclass of System.Windows.Forms.PictureBox which adds IFS specific functionality.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndPictureBox.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndPictureBox class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndPictureBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndPictureBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndPictureBox.CreateBorderPadding">
            <summary>
            Creates the border padding.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndPictureBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paint our own border.
            </summary>
            <param name="pe">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndPictureBox.Updatable">
            <summary>
            Gets or sets a value indicating whether the control is updatable or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndPictureBox.AutoHandleUpdatable">
            <summary>
            Gets or sets a value indicating whether the updatable state of the control
            is automatically handled or not.
            Note that this is only valid when the control is data bound.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndPictureBox.BorderStyle">
            <summary>
            Indicates the border style for the control.
            </summary>
            <value></value>
            <returns>One of the <see cref="T:System.Windows.Forms.BorderStyle"></see> enumeration values. The default is <see cref="F:System.Windows.Forms.BorderStyle.None"></see>.</returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:System.Windows.Forms.BorderStyle"></see> values. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/></PermissionSet>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndPictureBox.Padding">
            <summary>
            Gets or sets padding within the control.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Windows.Forms.Padding"></see> representing the control's internal spacing characteristics.</returns>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/></PermissionSet>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndRadioButton">
            <summary>
            Subclass of System.Windows.Forms.RadioButton which adds IFS specific functionality.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRadioButton.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRadioButton.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndRadioButton class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRadioButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRadioButton.OnClick(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.CheckBox.OnClick(System.EventArgs)"/>.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRadioButton.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRadioButton.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Raises the ReadOnlyChanged event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRadioButton.ReadOnlyChanged">
            <summary>
            Occurs when the value of the ReadOnly property has changed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRadioButton.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the radio button is read-only.
            </summary>
            <value>
            <b>true</b> if the radio button is read-only; otherwise, <b>false</b>. The default is <b>false</b>.
            </value>
            <remarks>
            This property is used by the framework to set the udpdatable state of the control when the control is data bound. 
            In such a situation setting this property at design time has no effect. To control the read-only behaviour even when 
            the control is data bound, first set the <see cref="P:Ifs.Fnd.Windows.Forms.FndRadioButton.AutoHandleUpdatable"/> property to <b>false</b>.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRadioButton.Updatable">
            <summary>
            Gets or sets a value indicating whether the control is updatable or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRadioButton.AutoHandleUpdatable">
            <summary>
            Gets or sets a value indicating whether the updatable state of the control
            is automatically handled or not.
            Note that this is only valid when the control is data bound.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRadioButton.DisplayText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRadioButton.WhatsThisControlId">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndRangeSlider">
            <summary>
            A slider capable of acting as a scroll bar with zooming functionality.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRangeSlider.maxHeight">
            <summary>
            Maximum height of the control.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRangeSlider.#ctor">
            <summary>
            Creates a new instance of the class FndRangeSlider
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRangeSlider.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRangeSlider.SetThemeVariables">
            <summary>
            Sets the colors from IFS Themeing.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRangeSlider.SetSelectedRange(System.Double,System.Double)">
            <summary>
            Sets the min and max range for the FndRangeSlider
            </summary>
            <param name="selectedMinValue">The min value</param>
            <param name="selectedMaxValue">Te max value</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRangeSlider.OnHandleCreated(System.EventArgs)">
            <summary>
            Register control for themeing
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRangeSlider.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Performs the painting activities of the Range Slider.
            </summary>
            <param name="e">Event Arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRangeSlider.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Performs activities when the mouse is moved above the control.
            </summary>
            <param name="e">Event Arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRangeSlider.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Performs activities when the mouse is clicked above the control.
            </summary>
            <param name="e">Event Arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRangeSlider.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Performs activities when the mouse is release above the control.
            </summary>
            <param name="e">Event Arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRangeSlider.OnResize(System.EventArgs)">
            <summary>
            Called when the control is resized.
            </summary>
            <param name="e">Resizing Event Arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRangeSlider.OnDoubleClick(System.EventArgs)">
            <summary>
            Called when the control is double clicked.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRangeSlider.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Called when the bounds are set
            </summary>
            <param name="x">The x Coordinate</param>
            <param name="y">The y Coordinate</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="specified">The <see cref="T:System.Windows.Forms.BoundsSpecified"/></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRangeSlider.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRangeSlider.SetTheme">
            <summary>
            Changes the colors used to match the colors in the theme.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRangeSlider.BeginInit">
            <summary>
            Called when the control is about to be initialised.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRangeSlider.EndInit">
            <summary>
            Called after the control is initialised.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRangeSlider.RangeSliderChanged">
            <summary>
            Fired when the selection are of the range slider is changed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.ClipboardImage">
            <summary>
            Gets a clipboard image.
            </summary>
            <value>
            Contains an image to be used in a clipboard.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.DrawBorder">
            <summary>
            Specifies whether or not to draw the border.
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.UseThemes">
            <summary>
            Specifies whether or not to use IFS themeing functionality.
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.ZoomEnabled">
            <summary>
            Specifies whether or not to provide zooming functionality.
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.BackColor2">
            <summary>
            Gets or sets the 2nd background color.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.ForeColorLight">
            <summary>
            Gets or sets the colour of the light side of the foreground objects.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.SliderColor1">
            <summary>
            Gets or sets the first color of the slider.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.SliderColor2">
            <summary>
            Gets or sets the second color of the slider.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.MaxDate">
            <summary>
            Returns the Last date to be used in the Range Slider.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.MinDate">
            <summary>
            Returns the First date to be used in the Range Slider.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.SelectedMaxDate">
            <summary>
            Returns the Last selected date in the Range Slider.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.SelectedMinDate">
            <summary>
            Returns the First selected date in the Range Slider.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.MinimumRange">
            <summary>
            Gets or sets the minimum range that can be zoomed with the slider.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.MinValue">
            <summary>
            Gets or sets the Minimum value to be used in the Range Slider.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.MaxValue">
            <summary>
            Gets or sets the Maximum value to be used in the Range Slider.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.AxisHeightRatio">
            <summary>
            Gets or sets the Height Ratio of the axis.	
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.SliderHeightRatio">
            <summary>
            Gets or sets the Height Ratio of the slider.	
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.SelectedMaxValue">
            <summary>
            Gets or sets the maximum selected value to be displayed in the Range Slider.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.SelectedMinValue">
            <summary>
            Gets or sets the minimum selected value to be displayed in the Range Slider.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.SliderMode">
            <summary>
            Sets the mode of the range slider.		 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.SliderStyle">
            <summary>
            Sets the display style of the range slider.		 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.BorderSize">
            <summary>
            Gets or sets the Border Size.	
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.MinSliderSize">
            <summary>
            Gets the minimum slider size
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.BackgroundGradientMode">
            <summary>
            Gets or sets the gradient mode to be used in the background.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.SliderGradientMode">
            <summary>
            Gets or sets the gradient mode to be used in the background of the ruler
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.SliderOrientation">
            <summary>
            Gets or sets the orientation of the slider.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.MinimumDateRange">
            <summary>
            Gets or sets the minimum range that can be zoomed with the slider.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.SliderBackColor">
            <summary>
            Gets or sets the slider background color.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.SliderBorderColor">
            <summary>
            Gets or sets the slider border color.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.BackColor">
            <summary>
            Gets or sets the 1st background color.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSlider.ForeColor">
            <summary>
            Gets or sets the foreground color.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndRangeSliderStyle">
            <summary>
            Specifies the range slider style.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRangeSliderStyle.Plain">
            <summary>
            Range Slider will have a Plain Look and Feel
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRangeSliderStyle.XPStyle">
            <summary>
            Range Slider will have a XP Styled Look and Feel
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndRangeSliderMode">
            <summary>
            Specifies the Range Slider Mode.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRangeSliderMode.Numerical">
            <summary>
            Range Slider will use numerical values.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRangeSliderMode.DateTime">
            <summary>
            Range Slider will use Date Time Values
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndRangeSliderChangedEventArgs">
            <summary>
            The event arguments when a range slider is moved.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRangeSliderChangedEventArgs.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a new instance of the FndRangeSliderChangedEventArgs class.
            </summary>
            <param name="minValue">Minimum value of the range slider</param>
            <param name="maxValue">Maximum value of the range slider</param>
            <param name="selectedMinValue">The selected minimum value of the range slider</param>
            <param name="selectedMaxValue">The selected maximum value of the range slider</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSliderChangedEventArgs.MaxValue">
            <summary>
            Returns the maximum value of the range.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSliderChangedEventArgs.MinValue">
            <summary>
            Returns the minimum value of the range.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSliderChangedEventArgs.SelectedMaxValue">
            <summary>
            Returns the selected maximum value of the range.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSliderChangedEventArgs.SelectedMinValue">
            <summary>
            Returns the selected minimum value of the range.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSliderChangedEventArgs.MaxDate">
            <summary>
            Returns the maximum date of the range.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSliderChangedEventArgs.MinDate">
            <summary>
            Returns the minimum date of the range.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSliderChangedEventArgs.SelectedMaxDate">
            <summary>
            Returns the selected maximum date of the range.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRangeSliderChangedEventArgs.SelectedMinDate">
            <summary>
            Returns the selected minimum date of the range.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndRangeSliderChangedEventHandler">
            <summary>
            A delegate for the FndRangeSliderChanged event.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndReadOnlyField">
            <summary>
            The text label class is a specialized TextBox class to be used to display 
            attribute values. The difference between an ordinary label and this class is that 
            this class will permit the user to copy the displayed value.
            </summary>
            <remarks>
            Use this class to bind dataset attributes where a value is to be displayed to the user
            in a read only information fashion. For field labels the FndLabel class should be used.
            </remarks>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndReadOnlyField.dateFormat">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReadOnlyField.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndReadOnlyField class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReadOnlyField.InitLayout">
            <summary>
            This override of the InitLayout copies the background 
            color of the parent to the label. 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReadOnlyField.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Performs the work of setting the specified bounds of this control.  
            </summary>
            <param name="x">The new System.Windows.Forms.Control.Left property value of the control.</param>
            <param name="y">The new System.Windows.Forms.Control.Right property value of the control.</param>
            <param name="width">The new System.Windows.Forms.Control.Width property value of the control.</param>
            <param name="height">The new System.Windows.Forms.Control.Height property value of the control.</param>
            <param name="specified">A bitwise combination of the System.Windows.Forms.BoundsSpecified values.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReadOnlyField.AutoSize">
            <summary>
            Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReadOnlyField.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReadOnlyField.DateTimeIsNull">
            <summary>
            Friend property to the DateTime property that is needed for the data binding.
            Gets and sets the internal status to be NULL or not.
            </summary>
            <remarks>
            The set operator does not take consideration to the supplied value. Each call to 
            the set operator is considered to be to set the property to true.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReadOnlyField.DateTime">
            <summary>
            Set the value of the text field from a DateTime value type.
            </summary>
            <remarks>
            The text representation of the DateTime value is dependent upon the DateFormat property 
            the default format is short date time.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReadOnlyField.DateFormat">
            <summary>
            Gets and Sets the format to be used to format date time values
            if set to the control
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReadOnlyField.Multiline">
            <summary>
            Gets or sets a value indicating whether this is a multiline text box control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReadOnlyField.AutoHandleUpdatable">
            <summary>
            Do not use this method.  It is there in the FndLabel merely for UI consistancy when readonly.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReadOnlyField.Updatable">
            <summary>
            Do not use this method.  It is there in the FndLabel merely for UI consistancy when readonly.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndReferenceComboBox">
            <summary>
            Summary description for FndReferenceComboBox.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndReferenceComboBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndReferenceComboBox"/> class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceComboBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceComboBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Overridden. See <see cref="M:System.Windows.Forms.ComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)"></see>
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceComboBox.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Overridden. See <see cref="E:System.Windows.Forms.ComboBox.SelectedIndexChanged"></see>
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceComboBox.OnReferentChanged">
            <summary>
            Raises the <see cref="E:Ifs.Fnd.Windows.Forms.FndReferenceComboBox.ReferentChanged"/> event.
            </summary>
            <remarks> for more information on event handling see <I>Handling events and delegates</I>
            in MSDN documentation.</remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceComboBox.SelectedValue">
            <summary>
            Overridden. See <see cref="P:System.Windows.Forms.ListControl.SelectedValue"></see>
            </summary>
            <remarks>
            This class hides the set operator becuase this member should not be set directly.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceComboBox.SelectedItem">
            <summary>
            Overridden. See <see cref="P:System.Windows.Forms.ComboBox.SelectedItem"></see>
            </summary>
            <remarks>
            This class hides the set operator becuase this member should not be set directly.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceComboBox.ValueMember">
            <summary>
            Gets a string that specifies the property of the data source from which to draw the value.
            </summary>
            <remarks>
            This class hides the set operator becuase this member should not be set directly.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceComboBox.DropDownStyle">
            <summary>
            Gets a value specifying the style of the combo box.
            </summary>
            <remarks>
            This specialized class only implement style DropDownList hence this property
            can not be set. 
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceComboBox.Referent">
            <summary>
            Gets or sets the reference data row.
            the Referent property will be the reference data row. If it's not
            valid the Referent property will be null.
            </summary>
            <value>A <see cref="T:System.Object"/> object, representing the data row
            refered by the reference combobox.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceComboBox.ReferentIsNull">
            <summary>
            Friend property for the bindable Referent property, indicating whethere
            the control has a value or not.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndReferenceComboBox.ReferentChanged">
            <summary>
            Occurs when the Referent property value changes.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndSplitContainer">
            <summary>
            Sub class of System.Windows.Forms.SplitContainer which is having theme support
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndSplitContainer.#ctor">
            <summary>
            Creates a new instance of the class FndSplitContainer
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndSplitContainer.OnPaint(System.Windows.Forms.PaintEventArgs)">
             <summary>
             Do custom painting
             </summary>
            
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndSplitContainer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndSplitContainer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndSplitContainer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndSplitter">
            <summary>
            Subclass of System.Windows.Forms.Splitter for IFS specific functionality.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndSplitter.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndSplitter.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndSplitter class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndSplitter.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndSplitter.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndSplitter.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndSplitterExt">
            <summary>
            Obsolete control. This class now simply inherits FndSplitter
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndSplitterExt.BackColorLight">
            <summary>
            Obsolte - do not use.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndSystemBorder">
            <summary>
            Summary description for FndSystemBorder.
            </summary>
            <example>
            <code>
            FndSystemBorder.SetBorder(this, FndSystemBorder.FndBorderStyle.System3D);
            </code>
            </example>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndSystemBorder.DrawBorder(System.Drawing.Graphics,System.Windows.Forms.Control,Ifs.Fnd.Windows.Forms.FndSystemBorder.FndBorderStyle)">
            <summary>
            DrawBorder.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndSystemBorder.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle,Ifs.Fnd.Windows.Forms.FndSystemBorder.FndBorderStyle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            DrawBorder.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndSystemBorder.SetBorder(System.Windows.Forms.Control,Ifs.Fnd.Windows.Forms.FndSystemBorder.FndBorderStyle)">
            <summary>
            SetBorder.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndSystemBorder.FndBorderStyle">
            <summary>
            Specifies the border style for a control.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndSystemBorder.FndBorderStyle.None">
            <summary>
            No border.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndSystemBorder.FndBorderStyle.FixedSingle">
            <summary>
            A single-line border.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndSystemBorder.FndBorderStyle.System3D">
            <summary>
            A system 3D style border.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndSystemBorder.FndBorderStyle.SystemFlat">
            <summary>
            A system style flat border.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndSystemBorder.FndBorderStyle.Fixed3D">
            <summary>
            A three-dimensional style border.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTextBox">
            <summary>
            Subclass of System.Windows.Forms.TextBox which adds IFS specific functionality.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTextBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndTextBox"/> class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTextBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTextBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTextBox.OnEnter(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTextBox.InitiateMru">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTextBox.OnValidated(System.EventArgs)">
             <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)"/>.
             </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTextBox.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.TextBoxBase.ProcessDialogKey(System.Windows.Forms.Keys)"/>.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTextBox.OnHandleCreated(System.EventArgs)">
            <summary>
            Register control for themeing
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTextBox.OnTextChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)"/>
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTextBox.SetTheme">
            <summary>
            Method to be used by the framework to invoke a reset of the control properties 
            that have been themed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.ApplicationMruEnabled">
            <summary>
            Gets whether Mru functionality is enabled at application level.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.ReadOnly">
            <summary>
            Gets or sets a value indicating whether text in the text box is read-only.
            </summary>
            <value>
            true if the text box is read-only; otherwise, false. The default is false.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.TextIsValid">
            <summary>
            Friend property for the bindable Text property.
            This property is set by the FndBinding depending on the valid state
            of the dataset attribute.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.Mru">
            <summary>
            Gets or sets the mode of activation of Recently Used Values functionality.
            </summary>
            <value>
            <b>Default</b>  - will be activated conditionally (depending on the type of data contained in the field).
            <b>Disabled</b> - Disabled.
            <b>Enabled</b>  - will be activated regardless of the type of data contained.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.MruBehaviour">
            <summary>
            Gets or sets if Most Recently Used should be global or local.
            Global means that the Most Recently Used values will be accessible in all TextBoxes which have the same term.
            Local means that the Most Recently Used values will be local the this specific TextBox.
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.MruGlobalTerm">
            <summary>
            Gets or sets the term that descibes the data in the TextBox. 
            All textboxes with the same term will use the same Most Recently Used values if the MruBehaviour is set to global.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.MruObject">
            <summary>
            Gets Most Recently Used Object
            </summary>		
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.MruListDroppedDown">
            <summary>
            Gets whether the MRU list is currently shown.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.AutoCompleteMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.AutoCompleteSource">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.AutoCompleteCustomSource">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.BackColor">
            <summary>
            Gets or sets the background color of the control.
            </summary>
            <value>
            The background color of the control.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
            <value>
            The foreground color of the control.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.AutoInitializeMRU">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.Updatable">
            <summary>
            Gets or sets a value indicating whether the control is updatable or not.
            Note that this has no effect when the control is data bound as the framework
            will override the value set at design time, provided AutoHandleUpdatable is
            set to true.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.AutoHandleUpdatable">
            <summary>
            Gets or sets a value indicating whether the updatable state of the control
            is automatically handled or not.
            Note that this is only valid when the control is data bound.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.UseThemes">
            <summary>
            Gets or sets whether the theming should be used with this control.
            </summary>
            <value>
            True if the theming should be used, false otherwise
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.ConnectedLabel">
            <summary>
            Label connected to this control for showing a display text
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.DisplayText">
            <summary>
            Display text for the control
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTextBox.WhatsThisControlId">
            <summary>
            Id used for fetching the whatsthis text
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndThemeResourceList">
            <summary>
            FndThemeResourceList is used to keep a collection of theme resource names. The collection is based on a resource index. 
            This could be specially useful with controls that has ImageList objects, as theme resource names
            corresponding to ImageList images could be stored in this resources collection.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndThemeResourceList.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <b>FndThemeResourceList</b> class, associating it with a container.
            </summary>
            <param name="container">An object implementing <b>IContainer</b> to associate with this instance of <b>FndThemeResourceList</b>.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndThemeResourceList.#ctor">
            <summary>
            Initializes a new instance of the <b>FndThemeResourceList</b> class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndThemeResourceList.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>		
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndThemeResourceList.Clear">
            <summary>
            Removes all items from the FndThemeResourceList instance.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndThemeResourceList.Add(System.Int32,System.String)">
            <summary>
            Inserts an element into the FndThemeResourceList.
            </summary>
            <param name="index">The resource index.</param>
            <param name="resourceKey">The ResourceKey to insert.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndThemeResourceList.SetResource(System.Int32,System.String)">
            <summary>
            Sets an element in FndThemeResourceList and raises the <b>ThemeResourceChanged</b> event.
            </summary>
            <param name="index">The resource index.</param>
            <param name="resourceKey">The ResourceKey to set.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndThemeResourceList.Remove(System.Int32)">
            <summary>
            Removes the element with the specified index from the FndThemeResourceList instance.
            </summary>
            <param name="index">The resource index.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndThemeResourceList.CopyResourcesToImageList(System.Windows.Forms.ImageList)">
            <summary>
            Copy all resources to specified ImageList.
            </summary>
            <param name="imageList">The ImageList to copy resources.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndThemeResourceList.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndThemeResourceList.SetTheme">
            <summary>
            Updates the theme resource list with current theme resources, when 
            theme settings are changed this method should be manually called.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndThemeResourceList.ThemeResourceChanged">
            <summary>		
            Occurs when a resource item in the <b>FndThemeResourceList</b> is changed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndThemeResourceList.ImageListResources">
            <summary>
            Gets or sets ImageList resources.
            </summary>
            <value>
            <b>string</b> array of theme resource names.
            </value>		
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndThemeResourceList.ImageList">
            <summary>
            Gets or sets an instance of <see cref="T:System.Windows.Forms.ImageList"/> class which the resource
            list will populate with images 
            </summary>
            <value>An instance of <see cref="T:System.Windows.Forms.ImageList"/> to which the resource list
            will populate images
            </value>
            <remarks>
            You should always change the imageList supplied to the resourceList through resource list.
            Do not directly edit the imageList supplied to this property.
            </remarks>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolTip">
             <summary>
             FndToolTip.
             </summary>
             <example>
             <code>
            	FndToolTip toolTip=null;
            	public ControlEx()
            	{
            		InitializeComponent();
            
            		toolTip=new FndToolTip(FindForm(), components);
            		toolTip.BeginInit();
            		Rectangle wa=Screen.PrimaryScreen.WorkingArea;
            		toolTip.MaximumSize=new Size(wa.Width/2, wa.Height/2);
            		toolTip.Selectable=true;
            		toolTip.EndInit();
            	}
            
            	void OnMouseMove()
            	{
            		...
            		if(rect.Contains(eX, eY))
            			toolTip.SetToolTip(ctrl, "My tool tip", new Point(eX, eY));
            		else
            			toolTip.RemoveAll();
            	}
             </code>
             </example>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTip.#ctor">
            <summary>
            FndToolTip.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTip.#ctor(System.ComponentModel.IContainer)">
            <summary>
            FndToolTip.
            </summary>
            <param name="container">component collection of parent</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTip.#ctor(System.Windows.Forms.Form)">
            <summary>
            FndToolTipEx.
            </summary>
            <param name="frm">parent form</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTip.#ctor(System.Windows.Forms.Form,System.ComponentModel.IContainer)">
            <summary>
            FndToolTipEx.
            </summary>
            <param name="frm">parent form</param>
            <param name="container">component collection of parent</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTip.RemoveAll">
            <summary>
            RemoveAll.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTip.GetToolTip(System.Windows.Forms.Control)">
            <summary>
            GetToolTip.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTip.SetToolTip(System.Windows.Forms.Control,System.String)">
            <summary>
            SetToolTip.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTip.SetToolTip(System.Windows.Forms.Control,System.String,System.Drawing.Point)">
            <summary>
            SetToolTip.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTip.SetToolTip(System.Windows.Forms.Control,System.String,System.Drawing.Point,Ifs.Fnd.Windows.Forms.FndToolTip.VerticalDirection)">
            <summary>
            SetToolTip. Show tool tip verticaly.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTip.SetToolTip(System.Windows.Forms.Control,System.String,System.Object,System.Drawing.Point)">
            <summary>
            SetToolTip.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTip.SetToolTip(System.Windows.Forms.Control,System.String,System.Drawing.Point,System.Boolean)">
            <summary>
            SetToolTip.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTip.SetToolTip(System.Windows.Forms.Control,System.String,System.Drawing.Point,System.Drawing.Size,System.Boolean)">
            <summary>
            SetToolTip.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTip.SetToolTip(System.Windows.Forms.Control,System.String,System.Drawing.Size)">
            <summary>
            SetToolTip.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTip.SetToolTip(System.Windows.Forms.Control,System.String,System.Drawing.Point,System.Drawing.Size)">
            <summary>
            SetToolTip.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTip.Dispose(System.Boolean)">
            <summary>
            Dispose.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTip.CanExtend(System.Object)">
            <summary>
            CanExtend.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTip.BeginInit">
            <summary>
            BeginInit.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolTip.EndInit">
            <summary>
            EndInit.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolTip.Parent">
            <summary>
            Parent form.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolTip.DropDownSize">
            <summary>
            Gets or sets whether the tooltip should be use dropdown and specify dropdown size.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolTip.TipControl">
            <summary>
            TipControl.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolTip.MaximumSize">
            <summary>
            MaximumSize.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolTip.VisibleTime">
            <summary>
            VisibleTime.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolTip.InitialDelay">
            <summary>
            InitialDelay.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolTip.AutoControl">
            <summary>
            AutoControl.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolTip.CloseButton">
            <summary>
            CloseButton.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolTip.ShowAlways">
            <summary>
            ShowAlways.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolTip.MoveWithCursor">
            <summary>
            MoveWithCursor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolTip.Selectable">
            <summary>
            Selectable.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolTip.TextStyle">
            <summary>
            TextStyle.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolTip.Font">
            <summary>
            Selectable.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolTip.VerticalDirection">
            <summary>
            VerticalDirection.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolTip.VerticalDirection.None">
            <summary>
            Not specified direction.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolTip.VerticalDirection.Up">
            <summary>
            Vertical direction is up.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolTip.VerticalDirection.Down">
            <summary>
            Vertical direction is down.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.WndToolTip">
            <summary>
            WndToolTip.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.WndToolTipBase">
            <summary>
            WndToolTipBase.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.WndToolTipBase.WndProc(System.Windows.Forms.Message@)">
            <summary>
            WndProc.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.WndToolTipBase.CreateParams">
            <summary>
            CreateParams
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.WndToolTip.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            ProcessCmdKey
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.WndToolTip.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnMouseDown
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.WndToolTip.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            OnMouseMove
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.WndToolTip.OnMouseLeave(System.EventArgs)">
            <summary>
            OnMouseMove
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.WndToolTip.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            OnPaint
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.WndToolTip.AutoControl">
            <summary>
            AutoControl.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.WndToolTip.TipControl">
            <summary>
            TipControl.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.WndToolTip.VisibleTime">
            <summary>
            VisibleTime.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.WndToolTip.InitialDelay">
            <summary>
            InitialDelay.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.WndToolTip.TextStyle">
            <summary>
            TextStyle.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.WndToolTip.CloseButton">
            <summary>
            CloseButton.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.WndToolTip.Font">
            <summary>
            Font
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.WndToolTip.Location">
            <summary>
            Location
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.WndToolTip.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.WndToolTip.BackColor">
            <summary>
            BackColor
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.WndToolTip.TextBoxEx.#ctor">
            <summary> 
            TextBoxEx.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.WndToolTip.TextBoxEx.OnParentChanged(System.EventArgs)">
            <summary> 
            OnParentChanged.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.WndToolTip.TextBoxEx.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary> 
            OnMouseDown.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.WndToolTip.TextBoxEx.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary> 
            OnMouseMove.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.WndToolTip.TextBoxEx.OnMouseLeave(System.EventArgs)">
            <summary> 
            OnMouseLeave.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.WndToolTip.TextBoxEx.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.WndToolTip.RichTextBoxEx.#ctor">
            <summary> 
            RichTextBoxEx.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.WndToolTip.RichTextBoxEx.OnParentChanged(System.EventArgs)">
            <summary> 
            OnParentChanged.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.WndToolTip.RichTextBoxEx.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary> 
            OnMouseDown.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.WndToolTip.RichTextBoxEx.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary> 
            OnMouseMove.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.WndToolTip.RichTextBoxEx.Font">
            <summary>
            Font
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.WndToolTip.RichTextBoxEx.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.WndToolTip.DropDownTools.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.WndToolTip.DropDownTools.OnParentChanged(System.EventArgs)">
            <summary> 
            OnParentChanged.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.WndToolTip.DropDownTools.DropDownMenu.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            SetBoundsCore
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.ToolTipTextStyle">
            <summary>
            ToolTipTextStyle.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.ToolTipTextStyle.Default">
            <summary>
            Default.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.ToolTipTextStyle.MultilineText">
            <summary>
            MultilineText.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.ToolTipTextStyle.RichText">
            <summary>
            RichText.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.ToolTipTextStyle.DropDown">
            <summary>
            DropDown.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.ToolTipTextStyle.Custom">
            <summary>
            Custom.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter">
            <summary>
            Implements a transparent splitter.
            </summary>
            <remarks>
            System.Windows.Forms.Splitter has been deprecated and currently used for backward compatibility reasons only.
            We're using it as the 'last resort' in terms of having a transparent splitter.
            We're currently using this to provide a 'transparent splitter' between the navigator and feature area in <see cref="T:Ifs.Fnd.Explorer.UI.AuroraExplorerForm"/>.
            Thus, what is found here is STRICTLY LIMITED to the needs of that use.
            </remarks>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter.#ctor">
            <summary>
            Constructs a <see cref="T:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter"/> object.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter.SetSnap(System.Int32,System.Int32)">
            <summary>
            Sets a point where the splitter should snap when user moves it.
            </summary>
            <param name="snapPosition">The position to snap, measured from the origin of the splitter's range</param>
            <param name="snapDistance">Distance where we should start snapping, from the snap position, at either side</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse down.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse up.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse move.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter.OnMouseEnter(System.EventArgs)">
            <summary>
            Handle mouse enter.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter.OnMouseLeave(System.EventArgs)">
            <summary>
            Handle mouse leave.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handle requests to paint the background.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter.OnBackColorChanged(System.EventArgs)">
            <summary>
            Handle background color changing.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter.OnParentBackColorChanged(System.EventArgs)">
            <summary>
            Handle background color changing on the parent.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter.OnSplitterMoved(System.Windows.Forms.SplitterEventArgs)">
            <summary>
            Handle the splitter moving.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.SplitterEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter.OnParentChanged(System.EventArgs)">
            <summary>
            Handle the splitter's parent changing.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter.CreateParams">
            <summary>
            Override <see cref="P:Ifs.Fnd.Windows.Forms.CommonControls.FndTransparentSplitter.CreateParams"/> to style this.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.IFndCustomChartModeProvider">
            <summary>
            When implemented by a feature, provides the ability to return a list of FndCommand objects
            that can implement 'custom' chart mode views.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.IFndCustomChartModeProvider.GetCustomChartModeOverloads">
            <summary>
            Return a list of <see cref="T:Ifs.Fnd.Windows.Forms.FndCommand"/> objects associated with custom chart modes.
            </summary>
            <returns>List of <see cref="T:Ifs.Fnd.Windows.Forms.FndCommand"/> objects that can be executed for custom chart mode views; null otherwise.</returns>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.RectangleState">
            <summary>
            Summary description for ActiveRectangles.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.ActiveRectangles.Clear">
            <summary>
            Clears the collection and reset the Initialized property. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.ActiveRectangles.Initialized">
            <summary>
            If Initialized is set the collection will not add more items and the 
            collection count should be regarded as fixed. It is still possible to
            change properties on specific items in the collection. 
            Note: The Clear method reset this property when the collection is cleared.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndCalendarDay">
            <summary>
            Summary description for Day.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCalendarDay.#ctor(System.Int32)">
            <summary>
            initialize dayInMonth of type FndCalendarDay 
            </summary>
            <param name="dayInMonth"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCalendarDay.#ctor(System.DateTime)">
            <summary>
            initialize dateInMonth of type FndCalendarDay 
            </summary>
            <param name="dateInMonth"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndCalendarDay.#ctor(System.DayOfWeek)">
            <summary>
            initialize dayOfWeek of type FndCalendarDay 
            </summary>
            <param name="dayOfWeek"></param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCalendarDay.DayInMonth">
            <summary>
            get or sets the DayInMonth
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCalendarDay.DateInMonth">
            <summary>
            get or sets the DateInMonth
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCalendarDay.WeekInYear">
            <summary>
            get or sets the WeekInYear
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCalendarDay.DayOfWeek">
            <summary>
            get or sets the DayOfWeek
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCalendarDay.TranslatedDayOfWeek">
            <summary>
            Gets the translated DayOfWeek value
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCalendarDay.MonthNumber">
            <summary>
            get or sets the DayOfWeek
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCalendarDay.YearNumber">
            <summary>
            get or sets the DayOfWeek
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndCalendarDay.Flags">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndMonthCalendar">
            <summary>
            FndMonthCalendar consists of MonthMatrices.The single MonthMatrix 7x6 consists of collection of ActiveRectangles which is a Collection of ActiveRectangle.ActiveRectangle is the smallest rectangle which holds rectangle,state,action and tag.
            Depending on the size of the control,Hypothetical ActiveRectangles are created and Filled in each MonthMatix. After being created the ManthMatrices with collection of activerectangles,for each rectangle will be asigned a day value of DateTime Object.
            </summary>
            <remarks>
            <b>FndMonthCalendar</b> is visual representation of Single/Multiple Months, which allows the user to select single,multiple,random dates or given "WeekNumber" or given "DayofWeek" of the month. 
            Month/year scrolling and direct year navigation using user inputs is implemented in accordance with <b>IFS Standards</b>. 
            </remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.OnDateChanged(Ifs.Fnd.Windows.Forms.FndSelectedDateRangeEventArgs)">
            <summary>
            Raises the <see cref="E:Ifs.Fnd.Windows.Forms.FndMonthCalendar.DateChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:Ifs.Fnd.Windows.Forms.FndSelectedDateRangeEventArgs"/> that contains the event data</param>
            <remarks>Raising an event invokes the event handler through a delegate.</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.OnDateSelected(Ifs.Fnd.Windows.Forms.FndSelectedDateRangeEventArgs)">
            <summary>
            Raises the <see cref="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.OnDateSelected(Ifs.Fnd.Windows.Forms.FndSelectedDateRangeEventArgs)"/> event.
            </summary>
            <param name="e">An <see cref="T:Ifs.Fnd.Windows.Forms.FndSelectedDateRangeEventArgs"/> that contains the event data</param>
            <remarks>Raising an event invokes the event handler through a delegate.</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.#ctor">
            <summary>
            Contains Collection of Dates in <see cref="T:Ifs.Fnd.Windows.Forms.FndCalendarDay"/>,and Collection of ActiveRectangles in <see cref="T:Ifs.Fnd.Windows.Forms.ActiveRectangle"/>.
            </summary>
            <remarks>
            When instantiated, Shows the month of the selected date.
            </remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SetSelectionRange(System.DateTime,System.DateTime)">
            <summary>
            Sets the selected dates in a FndMonthCalendar control to the specified date range
            </summary>
            <param name="date1"></param>
            <param name="date2"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SetSelectedDates(System.DateTime[])">
            <summary>
            Canbe Set Collection of Dates
            </summary>
            <param name="dates"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SetDate(System.DateTime)">
            <summary>
            Set SelectionStartDate
            </summary>
            <param name="date1"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.AddBoldedDate(System.DateTime)">
            <summary>
            Adds BoldedDate,made the dates bolded with given Font.
            </summary>
            <param name="date1"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.AddMonthlyBoldedDate(System.DateTime)">
            <summary>
            Adds MonthlyBoldedDate,the given date(s) become bolded in every month.
            </summary>
            <param name="date1"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.AddAnnuallyBoldedDate(System.DateTime)">
            <summary>
            Adds AnnuallyBoldedDate,the given date(s) become bolded in every year.
            </summary>
            <param name="date1"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.RemoveAllBoldedDates">
            <summary>
            Removes AllBoldedDates
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.RemoveBoldedDate(System.DateTime)">
            <summary>
            Removes First Occurance of specified Date in the Collection
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.RemoveAllMonthlyBoldedDates">
            <summary>
            Removes All Monthly BoldedDates
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.RemoveMonthlyBoldedDate(System.DateTime)">
            <summary>
            Removes First Occurance of specified Date in the Collection
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.RemoveAllAnnuallyBoldedDates">
            <summary>
            Remove All Annually BoldedDates
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.RemoveAnnuallyBoldedDate(System.DateTime)">
            <summary>
            Removes First Occurance of specified Date in the Collection
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.OnPaintHeader(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the Header of the FndMonthCalendar.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.OnPaintFooter(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the footer of the FndMonthCalendar.Today and None buttons are drawn on the footer.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.OnPaintBody(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the Body of the FndMonthCalendar.Paints active rectangles wich are in bodyRect by considering the ActiveRectagle states,action and tag values.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
             Fills the background of the control by given brush and gradient mode.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SendProcessKey(System.Windows.Forms.Keys)">
            <summary>
            Receives Enter keyData from TimePicker
            </summary>
            <param name="keyData"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Overriden. Processes a Dialog Key.
            <seealso cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)"/>
            </summary>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"/> values that represents the key to process</param>
            <returns><b>true</b> if the key was processed by the control; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            <remarks>Raising an event invokes the event handler through a delegate</remarks>
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            <remarks>Raising an event invokes the event handler through a delegate</remarks>
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            <remarks>Raising an event invokes the event handler through a delegate</remarks>
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            TODO:
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="specified"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.OnCreateControl">
            <summary>
            Overriden. Raises the <see cref="M:System.Windows.Forms.Control.CreateControl"/> event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SetTheme">
            <summary>
            Implementation of <see cref="M:Ifs.Fnd.Windows.Forms.Interfaces.IFndThemeable.SetTheme"/> method of 
            <see cref="T:Ifs.Fnd.Windows.Forms.Interfaces.IFndThemeable"/> interface.
            </summary>
            <remarks>
            Causes the control to redraw itself with current themevalues.
            </remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
            <remarks>see also <see cref="T:System.ComponentModel.ISupportInitialize"/> interface</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
            <remarks>see also <see cref="T:System.ComponentModel.ISupportInitialize"/> interface</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndMonthCalendar.DateChanged">
            <summary>
            The DateChanged event occurs during any date selection, whether by mouse, keyboard, or code.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndMonthCalendar.DoubleClick">
            <summary>
            Inheriting from a standard Windows Forms control StandardDoubleClick will be expossed automatically.
            To avoid taht to be appeared in the property grid event has overidden
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndMonthCalendar.Click">
            <summary>
            Inheriting from a standard Windows Forms control StandardClick will be expossed automatically.
            To avoid them to be appeared in the property grid event has overidden.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndMonthCalendar.DateSelected">
            <summary>
            The DateChanged event occurs during any date selection, whether by mouse, keyboard, or code.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.AnnuallyBoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determines which annual 
            days are displayed in bold.
            </summary>
            <value>An array of DateTime objects.</value>
            <remarks>
            Using this property, you can assign an array of annually bolded dates. 
            When you assign an array of dates, the existing dates are first cleared.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.BoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determines which nonrecurring 
            dates are displayed in bold.
            </summary>
            <value>
            The array of bolded dates.
            </value>
            <remarks>
            Using this property, you can assign an array of bolded dates. 
            When you assign an array of dates, the existing dates are first cleared.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.FirstDayOfWeek">
            <summary>
            Gets or sets the first day of the week as displayed in the month calendar.
            </summary>
            <value>One of the Day values. The default is Day.Default.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.FirstWeekOfYear">
            <summary>
            Gets or sets the firstWeekOfYearin the month calendar.
            </summary>
            <value>The default is 1.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.MaxDate">
            <summary>
            Gets or sets the maximum allowed date.
            </summary>
            <value>
            A DateTime representing the maximum allowable date. The default is System.DateTime.MaxDate.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.MaxSelectionCount">
            <summary>
            Gets or sets the maximum number of days that can be selected in a month 
            calendar control.
            </summary>
            <value>
            The maximum number of days that you can select. The default is seven.
            </value>
            <remarks>
            Setting this property does not affect the current selection range.
            It is important to remember that MaxSelectionCount represents the 
            number of days in the selection, not the difference between 
            SelectionStart and SelectionEnd. For example, if MaxSelectionCount 
            is seven (the default), then SelectionStart and SelectionEnd can be 
            no more than six days apart.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.MinDate">
            <summary>
            Gets or sets the minimum allowable date.
            </summary>
            <value>
            A DateTime representing the minimum allowable date. The default is System.DateTime.MinDate
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.MonthlyBoldedDates">
            <summary>
            Gets or sets the array of DateTime objects that determine which monthly days to bold.
            </summary>
            <value>
            An array of DateTime objects.
            </value>
            <remarks>
            Using this property, you assign an array of monthly 
            bolded dates. When you assign an array of dates, any preexisting dates are cleared.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.ShowToday">
            <summary>
            Gets or sets a value indicating whether the date represented by the 
            Today button is displayed at the bottom of the control.
            </summary>
            <value>
            true if Today button is displayed; otherwise, false. The default is true.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.ShowNone">
            <summary>
            Gets or sets a value indicating whether the None button is  
            displayed at the bottom of the control.
            </summary>
            <value>
            true if None button is displayed; otherwise, false. The default is true.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.ShowTodayRectangle">
            <summary>
            Gets or sets a value indicating whether today's date is circled.
            </summary>
            <value>true if today's date is circled; otherwise, false. The default is true.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.ShowWeekNumbers">
            <summary>
            Gets or sets a value indicating whether the month calendar control displays 
            week numbers (1-52) to the left of each row of days.
            </summary>
            <value>
            true if the week numbers are displayed; otherwise, false. The default is false.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SelectedDates">
            <summary>
            Gets or sets the start date of the selected range of dates.
            </summary>
            <value>
            A DateTime indicating the range of <see cref="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SelectedDates"/> sorted in ascending order.
            </value>
            <remarks>
            Note: MaxSelectionCount represents the number of days in the selection, 
            not the difference between SelectionStart and SelectionEnd. For example, 
            if MaxSelectionCount is seven (the default), then SelectionStart and SelectionEnd 
            can be no more than six days apart.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SelectionStart">
            <summary>
            Gets or sets the start date of the selected range of dates.
            </summary>
            <value>
            A DateTime indicating the first date in the selection range.
            </value>
            <remarks>
            If you set SelectionStart to a date that is later than the current SelectionEnd, 
            then SelectionEnd is automatically set equal to SelectionStart.
            If you set a date in SelectionStart that causes the selection to exceed the 
            number of days specified by the MaxSelectionCount property, the value of 
            SelectionEnd is adjusted: SelectionEnd is automatically set so that the 
            number of days selected is equal to MaxSelectionCount.
            
            Note: MaxSelectionCount represents the number of days in the selection, 
            not the difference between SelectionStart and SelectionEnd. For example, 
            if MaxSelectionCount is seven (the default), then SelectionStart and SelectionEnd 
            can be no more than six days apart.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SelectionEnd">
            <summary>
            Gets or sets the end date of the selected range of dates.
            </summary>
            <value>
            A DateTime indicating the last date in the selection range.
            </value>
            <remarks>
            If you set SelectionEnd to a date that is earlier than the current SelectionStart, 
            then SelectionStart is automatically set equal to SelectionEnd.
            If you set a date in SelectionEnd that causes the selection to exceed the number 
            of days specified by the MaxSelectionCount property, the value of SelectionStart 
            is adjusted: SelectionStart is automatically set so that the number of days selected 
            is equal to MaxSelectionCount.
            
            Note: MaxSelectionCount represents the number of days in the selection, not the 
            difference between SelectionStart and SelectionEnd. For example, 
            if MaxSelectionCount is seven (the default), then SelectionStart and SelectionEnd 
            can be no more than six days apart.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.TodayDate">
            <summary>
            Gets or sets the value that is used by MonthCalendar as today's date.
            </summary>
            <value>
            A DateTime representing today's date. The default value is the current system date.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.TitleBackColor">
            <summary>
            Gets or Sets the background Themed color of the header of the FndMonthCalendar.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.TitleBackColorLight">
            <summary>
            Gets or Sets the background Themed color of the header of the FndMonthCalendar.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.BorderLineColor">
            <summary>
            Gets or Sets the borderLineColor of the FndMonthCalendar.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.BackColor">
            <summary>
            Gets or Sets the background Themed color of the body of the FndMonthCalendar.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.BackColorLight">
            <summary>
            Gets or Sets the background Themed color of the body of the FndMonthCalendar.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.ScrollButtonColor">
            <summary>
            Gets or Sets the color of the Month Scroller.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.BackGradientMode">
            <summary>
            Gradient mode for FndMonthCalendar
            </summary>
            <value>One of the <see cref="T:System.Drawing.Drawing2D.LinearGradientMode"/> values, which defined the gradient of the header,footer and body rectangles in the FndMonthCalendar</value>
            <remarks>This member is themeable. Value you set here will be overriden by values set by themes</remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.UseBackgroundGradient">
            <summary>
            Gradient mode for FndMonthCalendar
            </summary>
            <value>One of the <see cref="T:System.Drawing.Drawing2D.LinearGradientMode"/> values, which defined the gradient of the header,footer and body rectangles in the FndMonthCalendar</value>
            <remarks>This member is themeable. Value you set here will be overriden by values set by themes</remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SigmaBellShapeFocus">
            <summary>
            Get or set a value for focus of SigmaBellShape.
            </summary>
            <value>a float between 0 and 1 to set the focus of the SigmaBellShape function.</value>
            <remarks>This member is themeable. Value you set here will be overriden by values set by themes</remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SigmaBellShapeScale">
            <summary>
            Get or set a value for SigmaBellShape Scale.
            </summary>
            <value> a float between 0 and 1 that defines scale of SigmaBellShape function </value>
            <exception cref="T:System.ArgumentOutOfRangeException">Value is not between 0 and 1</exception>
            <remarks>This member is themeable. Value you set here will be overriden by values set by themes</remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.TextColor">
            <summary>
            Gets or Sets the Color of the Font Used for Dates
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.WeekNumberForeColor">
            <summary>
            Gets or Sets the Color of the Font Used for Week Numbers
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.WeekdayForeColor">
            <summary>
            Gets or Sets the Color of the Font Used for WeekdayForeColor
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.TrailingForeColor">
            <summary>
            Gets or Sets the Color of the Dates of Previous and Next Month.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SpecialHolidayColor">
            <summary>
            Gets or Sets the Color of the Dates with Special Holidays
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SundayColor">
            <summary>
            Gets or Sets the Color of the Date "Sunday".
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.TodayRectangleColor">
            <summary>
            Gets or Sets the Color of the Date "TodayRectangle".
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.Font">
            <summary>
            Gets or Sets the Font of Dates.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SelectedFont">
            <summary>
            Gets or Sets the Font of Selected Dates.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.TitleFont">
            <summary>
            Gets or Sets the Font of Title.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.WeekNumberFont">
            <summary>
            Gets or Sets the Font of Week Numbers.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.TitleForeColor">
            <summary>
            Gets or Sets the Color of the Date "SelectedText".
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.BorderStyle">
            <summary>
            Gets or Sets the CalendarBorderStyle.Default value is set to "Flat"
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.DateChange">
            <summary>
            Gets or Sets the DateChange.Default value is set to "Automatic"
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SelectedDateColor">
            <summary>
            Gets or Sets the Color of the SelectedDate in the control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.Text">
            <summary>
            Override Text Property of the Control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.ForeColor">
            <summary>
            Gets or Sets the Color of the dates withing the month.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.CalendarDimension">
            <summary>
            Gets or Sets the Size of the Calendar which is number of months to be shown,
            maximum possible months can be shown is restriceted to 12.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SingleMonthSize">
            <summary>
            gets the current size of the SingleMonth.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.IsNull">
            <summary>
            gets or sets true or false of the none button functionality,Default false.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.ReadOnly">
            <summary>
            To be used by converted features to make all text appear gray
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.Site">
            <summary>
            Overridden. Gets or sets the site of the control.
            </summary>
            <value>The <see cref="T:System.ComponentModel.ISite"/> associated with the <see cref="T:Ifs.Fnd.Windows.Forms.FndMonthCalendar"/>, if any.</value>
            <remarks>For more details, see <see cref="P:System.Windows.Forms.Control.Site"/></remarks>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndMonthCalendar.CalendarBorderStyle">
            <summary>
            Borderstyles
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndMonthCalendar.CalendarBorderStyle.Style3D">
            <summary>
            3D Appearance of FndMonthCalendar
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndMonthCalendar.CalendarBorderStyle.Flat">
            <summary>
            Flat Appearance of FndMonthCalendar
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndMonthCalendar.CalendarBorderStyle.None">
            <summary>
            None Appearance of FndMonthCalendar
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndMonthCalendar.DateChangeMode">
            <summary>
            DateChangeMode
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndMonthCalendar.DateChangeMode.Automatic">
            <summary>
            Automatic is set as defaulted,any instance of the FndMonthCalendar selected date or range is shown as selected.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndMonthCalendar.DateChangeMode.Manual">
            <summary>
            Manual,selected date or range will be shown in that particular month only when user has selected.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndMonthCalendar.ScrollButtonStates">
            <summary>
            Month Scroller Button States 
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndMonthCalendar.ScrollButtonStates.Left">
            <summary>
            ScrollButtonStates.Left
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndMonthCalendar.ScrollButtonStates.Right">
            <summary>
            ScrollButtonStates.Right
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndMonthCalendar.ScrollButtonStates.None">
            <summary>
            ScrollButtonStates.None
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndMonthCalendar.ScrollButtonStates.Clicked">
            <summary>
            ScrollButtonStates.Clicked
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndMonthCalendar.ScrollButtonStates.Normal">
            <summary>
            ScrollButtonStates.Normal
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndMonthCalendar.DateRangeEventHandler">
            <summary>
            Occurs when the <see cref="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SelectionStart"/> property is changed.
            Occurs when the <see cref="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SelectionEnd"/> property is changed.
            Occurs when the <see cref="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.SelectedDates"/> property is changed.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendar.FndScrollerButton.#ctor">
            <summary>
            Contains two scroll buttons,which is used to scroll month(s).
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.FndScrollerButton.LeftLocation">
            <summary>
            gets or sets the left scroll button location.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.FndScrollerButton.RightLocation">
            <summary>
            gets or sets the right scroll button location.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.FndScrollerButton.ScrollerLeftRect">
            <summary>
            gets the rectangle which contains the left scroll button
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.FndScrollerButton.ScrollerRightRect">
            <summary>
            gets the rectangle which contains the right scroll button
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.FndScrollerButton.State">
            <summary>
            Gets or Sets the ScrollButtonStates
            <remarks>States are Clicked,Normal</remarks>
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.FndScrollerButton.SizeF">
            <summary>
            gets the size of the scroll button
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.FndScrollerButton.ScrollerWidth">
            <summary>
            Gets or Sets the Scroll button width
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendar.FndScrollerButton.ScrollerHeight">
            <summary>
            Gets or Sets the Scroll button Height
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndSelectedDateRangeEventArgs">
             <summary>
             start The first date/time value in the range that the user has selected. 
             end The last date/time value in the range that the user has selected. 
            <remarks> The Start and End property values are set by the start and end parameter values of this constructor</remarks>
            <remarks> SelectedDates is the collection of selected sorted list of dates</remarks>
             </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndSelectedDateRangeEventArgs.#ctor(System.DateTime,System.DateTime,System.Boolean,System.Boolean)">
             <summary>
             start The first date/time value in the range that the user has selected. 
             end The last date/time value in the range that the user has selected. 
            <remarks> The Start and End property values are set by the start and end parameter values of this constructor</remarks>
            <remarks> SelectedDates is the collection of selected sorted list of dates</remarks>
            <remarks> startHasChanged or endHasChanged is set to to "true" when SelectionStart or SelectionEnd is Changed</remarks>
             </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndSelectedDateRangeEventArgs.#ctor(System.DateTime,System.DateTime)">
             <summary>
             start The first date/time value in the range that the user has selected. 
             end The last date/time value in the range that the user has selected. 
            <remarks> The Start and End property values are set by the start and end parameter values of this constructor</remarks>
            <remarks> SelectedDates is the collection of selected sorted list of dates</remarks>
             </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndSelectedDateRangeEventArgs.#ctor(Ifs.Fnd.Windows.Forms.SelectedDateCollection)">
             <summary>
             start The first date/time value in the range that the user has selected. 
             end The last date/time value in the range that the user has selected. 
            <remarks> The Start and End property values are set by the start and end parameter values of this constructor</remarks>
            <remarks> SelectedDates is the collection of selected sorted list of dates</remarks>
             </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndSelectedDateRangeEventArgs.StartHasChanged">
            <summary>
            Gets the value when StartDate is changed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndSelectedDateRangeEventArgs.EndHasChanged">
            <summary>
            Gets the value when EndDate is changed.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown">
            <summary>
            Summary description for FndMonthCalendarDropDown.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.#ctor(System.String)">
            <summary>
            alternative constructor that takes format
            </summary>
            <param name="getFormat"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FrmMonthCalendar class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.ShowMonthCalendar(System.Windows.Forms.Control,System.Int32,System.Int32)">
            <summary>
            This method shows the dropdown month calendar right adjusted to its parent.
            </summary>
            <param name="parent">Control that owns the dropdown</param>
            <param name="x">Horizontal screen cordinate in pixels where dropdown is shown.</param>
            <param name="y">Vertical screen cordinate in pixels where dropdown is shown.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.ShowMonthCalendar(System.Windows.Forms.Control)">
            <summary>
            This method shows the dropdown month calendar right adjusted to its parent.
            </summary>
            <param name="parent">Control that owns the dropdown.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.SetCurrentDate(System.Object)">
            <summary>
            Sets the current date in the fndMontCalendar. 
            If no date is passed to method todays date is used as current. 
            </summary>
            <param name="dt">DateTime object to set as current date.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.SetCurrentTime(System.TimeSpan)">
             <summary>
            
             </summary>
             <param name="ts"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.UpdateCurrentTime(System.TimeSpan)">
            <summary>
            Updates time shown in timepicker when form has default time settings
            </summary>
            <param name="ts"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Catch keypresses
            </summary>
            <param name="m"></param>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.DateChanged">
            <summary>
            Fires when the FndMonthCalendar SeletedDate is changed.
            </summary>	
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.TimeChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.CurrentDate">
            <summary>
            Stores the selected date through FndMonthCalendar in the Format of Text.
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.SelectedDates">
            <summary>
            Gets sets selected dates.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.SelectedDate">
            <summary>
            Stores the selected date through FndMonthCalendar in the Format of DateTime.
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.MonthCalendarFont">
            <summary>
            Stores the selected date through FndMonthCalendar in the Format of DateTime.
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.SelectedDateIsNull">
            <summary>
            Holds Whether the selcted date is a null Value (None Button is pressed).
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.MinDate">
            <summary>
            Holds Whether the selcted date is a null Value (None Button is pressed).
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.MaxDate">
            <summary>
            Holds Whether the selcted date is a null Value (None Button is pressed).
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.ReadOnly">
            <summary>
            Exposing FndMonthCalendar to be used in FndDateTimePicker
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndMonthCalendarDropDown.ShowWeekNumbers">
            <summary>
            Gets or sets a value indicating whether the month calendar week numbers are shown or not.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTimePickerDropDown">
            <summary>
            Summary description for FndTimePickerDropDown.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTimePickerDropDown.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FrmTimePicker class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTimePickerDropDown.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTimePickerDropDown.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndTimePickerDropDown.SelectionChanged">
            <summary>
            Fires When the selected Index of the List box is Changed.
            </summary>	
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndTimePickerDropDown.TimeSelected">
            <summary>
            Fires When the explicitely selects a time.
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTimePickerDropDown.CurrentTime">
            <summary>
            Holds the Current Time in the Format of string.
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTimePickerDropDown.SelectedTime">
            <summary>
            Holds the Current Time in the Format of DateTime.
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTimePickerDropDown.Hour">
            <summary>
            Gets the Hour Component of the Time.
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTimePickerDropDown.Minutes">
            <summary>
            Gets the Minute component of the Time.
            </summary>	
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock.getTime">
            <summary>
            New time to be set
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock.timePicker">
            <summary>
            Timepicker
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock.UpdateTime(System.DateTime)">
            <summary>
            Update time when a form forces a default time
            </summary>
            <param name="timeToUpdate"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock.#ctor">
            <summary>
            Constructor for Clock-only control
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock.InitializeClock">
            <summary>
            Initialize clock control
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock.OnTimeSelected(System.EventArgs)">
            <summary>
            Sets selected time
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock.timePicker_Focus">
            <summary>
            help method to set timePicker in focus
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock.timePicker_GotFocus">
            <summary>
            help method to se if timepicker is focused
            </summary>
            <returns></returns>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock.SelectedTime">
            <summary>
            Get and set time
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock.DoubleClick">
            <summary>
            Inheriting from a standard Windows Forms control StandardDoubleClick will be expossed automatically.
            To avoid taht to be appeared in the property grid event has overidden
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock.TimeSelected">
            <summary>
            Event handler for selected time
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock.PickerLostFocus">
            <summary>
            Event handler for when timepicker looses focus
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock.PickerKeyDown">
            <summary>
            Event handler for catching keypress in timepicker
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock.TitleBackColor">
            <summary>
            Gets or Sets the background Themed color of the header of the FndMonthCalendar.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommonControls.MonthCalendar.FndTimeClock.EventHandler">
            <summary>
            Evemt handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.SelectedDateCollection">
            <summary>
            Summary description for DateTimeCollection.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.SelectedDateCollection.#ctor">
            <summary>
            Stored DateTimeCollection of Selected Dates
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.SelectedDateCollection.Add(System.DateTime)">
            <summary>
            Add DateTime value to the SelectedDateCollection Collection
            </summary>
            <param name="validDate"></param>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.SelectedDateCollection.Contains(System.DateTime)">
            <summary>
            Check the availability of the given DateTime value in the InnerList
            </summary>
            <param name="validDate"></param>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.SelectedDateCollection.ContainsInShortDate(System.DateTime)">
            <summary>
            Check the availability of the given short DateTime value in the InnerList
            </summary>
            <param name="validDate"></param>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.SelectedDateCollection.IndexOf(System.DateTime)">
            <summary>
            Check the availability of the DateTime value
            </summary>
            <param name="validDate"></param>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.SelectedDateCollection.Insert(System.Int32,System.DateTime)">
            <summary>
            Insert a DateTime value to the collection with a index.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.SelectedDateCollection.Remove(System.DateTime)">
            <summary>
            Remove DateTime value From the InnerList
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.SelectedDateCollection.CopyTo(System.DateTime[],System.Int32)">
            <summary>
            copies the elements of SelectedDates collection to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from ICollection. The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.SelectedDateCollection.Item(System.Int32)">
            <summary>
            Get or Sets the DateTime value for the given position in the InnerList 
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.YearScroller">
            <summary>
            Summary description for YearScroller.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.YearScroller.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.YearScroller.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.YearScroller.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.YearScroller.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.Address">
            <summary>
              Looks up a localized string similar to Address:.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.AddressCtrlAddressDetails">
            <summary>
              Looks up a localized string similar to Address {0} of {1}.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.AddressCtrlAddressOneLabel">
            <summary>
              Looks up a localized string similar to Address Line 1:.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.AddressCtrlNoAddress">
            <summary>
              Looks up a localized string similar to No Addresses Available.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.AddressCtrlNoDefaultLayoutMsg">
            <summary>
              Looks up a localized string similar to Default layout not defined for addresses.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.AddressCtrlStreetAddressLabel">
            <summary>
              Looks up a localized string similar to Street Address:.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.BrowsedPages">
            <summary>
              Looks up a localized string similar to Browsed Pages:.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.close_button_active">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.close_button_disabled">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.close_button_hover">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.close_button_normal">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.Copy">
            <summary>
              Looks up a localized string similar to Copy.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.CustomSortDialogNoItemSelected">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.DateComponentNotAllowed">
            <summary>
              Looks up a localized string similar to Date Component not allowed here.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.DeleteFailed">
            <summary>
              Looks up a localized string similar to Delete failed !.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.EditComment">
            <summary>
              Looks up a localized string similar to Edit Comment.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.EditFailed">
            <summary>
              Looks up a localized string similar to Edit failed !.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.EditLink">
            <summary>
              Looks up a localized string similar to Edit Link.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.EmailAddress">
            <summary>
              Looks up a localized string similar to E-mail Address:.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.empty_border">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.Error">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.ExplorerHelpNotAvailable">
            <summary>
              Looks up a localized string similar to No help topic available..
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.ExplorerHelpNoTopicExist">
            <summary>
              Looks up a localized string similar to No help topic is associated with this item..
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.ExplorerNotFound">
            <summary>
              Looks up a localized string similar to Explorer not found!.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.FILTER_TEXT">
            <summary>
              Looks up a localized string similar to Filter.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.FindTextMessageSearchUnsuccessful">
            <summary>
              Looks up a localized string similar to Search text not found..
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.FindTextSearchComplete">
            <summary>
              Looks up a localized string similar to Finished searching all items. Would you like to search again from the beginning?.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.FinishedSearching">
            <summary>
              Looks up a localized string similar to Finished searching the text..
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.FndDateTimePickerInvalidDateTimeFormat">
            <summary>
              Looks up a localized string similar to Invalid date/time format..
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.FndIndexListErrorCannotAddorInsert">
            <summary>
              Looks up a localized string similar to Cannot add or insert the item {0) in more than one place. You must first remove it from its current location..
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.FndIndexListErrorColourTransparent">
            <summary>
              Looks up a localized string similar to The FndIndexList control does not support transparent {0}..
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.FndIndexListErrorEmptyValue">
            <summary>
              Looks up a localized string similar to Cannot set {0} to an empty value..
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.FndIndexListErrorInvalidGroupBy">
            <summary>
              Looks up a localized string similar to This column has not been named a group by candidate. To name this a group by candidate, set the {0} property of the corresponding cell to true..
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.FndIndexListErrorInvalidSortBy">
            <summary>
              Looks up a localized string similar to This column has not been named a sort by candidate. To name this a sort by candidate, set the {0} property of the corresponding cell to true..
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.FndIndexListErrorNoSuchColumn">
            <summary>
              Looks up a localized string similar to Column with the specified name {0} does not exist..
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.FndIndexListInvalidValue">
            <summary>
              Looks up a localized string similar to {0} is not a valid value for {1}.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.GroupBy">
            <summary>
              Looks up a localized string similar to Group by.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.HIGHLIGHT_TEXT">
            <summary>
              Looks up a localized string similar to Search.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.IFSApplications">
            <summary>
              Looks up a localized string similar to IFS Applications.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.InsertComment">
            <summary>
              Looks up a localized string similar to Insert Comment.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.InsertLink">
            <summary>
              Looks up a localized string similar to Insert Link.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.LastFriday">
            <summary>
              Looks up a localized string similar to Last Friday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.LastMonday">
            <summary>
              Looks up a localized string similar to Last Monday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.LastMonth">
            <summary>
              Looks up a localized string similar to Last Month.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.LastSaturday">
            <summary>
              Looks up a localized string similar to Last Saturday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.LastSunday">
            <summary>
              Looks up a localized string similar to Last Sunday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.LastThursday">
            <summary>
              Looks up a localized string similar to Last Thursday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.LastTuesday">
            <summary>
              Looks up a localized string similar to Last Tuesday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.LastWednesday">
            <summary>
              Looks up a localized string similar to Last Wednesday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.LastWeek">
            <summary>
              Looks up a localized string similar to Last Week.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.LinkedText">
            <summary>
              Looks up a localized string similar to Linked text:.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.LOVToolTipToListValues">
            <summary>
              Looks up a localized string similar to Press F8 for list of values.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.maximize_button_active">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.maximize_button_disabled">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.maximize_button_hover">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.maximize_button_normal">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.minimize_button_active">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.minimize_button_disabled">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.minimize_button_hover">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.minimize_button_normal">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.MonthApril">
            <summary>
              Looks up a localized string similar to April.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.MonthAugust">
            <summary>
              Looks up a localized string similar to August.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.MonthDecember">
            <summary>
              Looks up a localized string similar to December.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.MonthFebruary">
            <summary>
              Looks up a localized string similar to February.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.MonthJanuary">
            <summary>
              Looks up a localized string similar to January.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.MonthJuly">
            <summary>
              Looks up a localized string similar to July.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.MonthJune">
            <summary>
              Looks up a localized string similar to June.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.MonthMarch">
            <summary>
              Looks up a localized string similar to March.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.MonthMay">
            <summary>
              Looks up a localized string similar to May.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.MonthNovember">
            <summary>
              Looks up a localized string similar to November.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.MonthOctober">
            <summary>
              Looks up a localized string similar to October.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.MonthSeptember">
            <summary>
              Looks up a localized string similar to September.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.NextFriday">
            <summary>
              Looks up a localized string similar to Next Friday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.NextMonday">
            <summary>
              Looks up a localized string similar to Next Monday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.NextMonth">
            <summary>
              Looks up a localized string similar to Next Month.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.NextSaturday">
            <summary>
              Looks up a localized string similar to Next Saturday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.NextSunday">
            <summary>
              Looks up a localized string similar to Next Sunday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.NextThursday">
            <summary>
              Looks up a localized string similar to Next Thursday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.NextTuesday">
            <summary>
              Looks up a localized string similar to Next Tuesday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.NextWednesday">
            <summary>
              Looks up a localized string similar to Next Wednesday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.NextWeek">
            <summary>
              Looks up a localized string similar to Next Week.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.NoMoreOccurrencesToReplace">
            <summary>
              Looks up a localized string similar to No more occurrences of &apos;{0}&apos; to replace..
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.Now">
            <summary>
              Looks up a localized string similar to Now.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.NumberOfItemsDisplayed">
            <summary>
              Looks up a localized string similar to {0} Items.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.Paste">
            <summary>
              Looks up a localized string similar to Paste.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.RecentlyUsedEmailAddresses">
            <summary>
              Looks up a localized string similar to Recently used e-mail addresses:.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.ReplacedAllOccurrences">
            <summary>
              Looks up a localized string similar to Replaced all occurrences of &apos;{0}&apos; with &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.ReplaceWithItem">
            <summary>
              Looks up a localized string similar to Replace.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.restore_button_active">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.restore_button_disabled">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.restore_button_hover">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.restore_button_normal">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.RichTextBoxEditWindow">
            <summary>
              Looks up a localized string similar to Edit Window.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.RichtextboxHideTooltip">
            <summary>
              Looks up a localized string similar to Click to hide text.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.RichTextBoxInsertLinkDialogBrowseToolTip">
            <summary>
              Looks up a localized string similar to Browse web.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.RichtextboxUnhideTooltip">
            <summary>
              Looks up a localized string similar to Click to see text.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.RMBCaptionSortBy">
            <summary>
              Looks up a localized string similar to Sort by.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.SelectedDateCollectionMax">
            <summary>
              Looks up a localized string similar to SelectedDates Collection Must be &lt;= MaxSelectionCount({0}).
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.SpellCheckerNotFound">
            <summary>
              Looks up a localized string similar to Spell Checker was not found..
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.Subject">
            <summary>
              Looks up a localized string similar to Subject:.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.TextMustHaveValue">
            <summary>
              Looks up a localized string similar to The &apos;Displayed Text&apos; must have a value..
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.TextNotAssociatedWithLink">
            <summary>
              Looks up a localized string similar to This text is not associated with a link. .
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.TextWindowTitle">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.TimeComponentNotAllowed">
            <summary>
              Looks up a localized string similar to Time Component not allowed here.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.Today">
            <summary>
              Looks up a localized string similar to Today.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.Tomorrow">
            <summary>
              Looks up a localized string similar to Tomorrow.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.UserComment">
            <summary>
              Looks up a localized string similar to Comment.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.WeekdayFriday">
            <summary>
              Looks up a localized string similar to Friday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.WeekdayMonday">
            <summary>
              Looks up a localized string similar to Monday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.WeekdaySaturday">
            <summary>
              Looks up a localized string similar to Saturday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.WeekdaySunday">
            <summary>
              Looks up a localized string similar to Sunday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.WeekdayThursday">
            <summary>
              Looks up a localized string similar to Thursday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.WeekdayTuesday">
            <summary>
              Looks up a localized string similar to Tuesday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.WeekdayWednesday">
            <summary>
              Looks up a localized string similar to Wednesday.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.CommonControls.Properties.Resources.Yesterday">
            <summary>
              Looks up a localized string similar to Yesterday.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.BoundedStack">
            <summary>
            Represents a simple <b>bounded</b> last-in-first-out collection of objects.
            </summary>
            <remarks>
            This class provides all operations of a <see cref="T:System.Collections.Stack"/>. But, it is bounded
            by the <see cref="P:Ifs.Fnd.Windows.Forms.BoundedStack.UpperBound"/> specified at the creation time. When objects are 
            pushed into to stack, if the current stack is full, the object at the bottom of the
            stack is removed, before the new object is placed into the stack.
            </remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.BoundedStack.#ctor">
            <summary>
            Creates a new instance of the BoundedStack, with default <see cref="P:Ifs.Fnd.Windows.Forms.BoundedStack.UpperBound"/>
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.BoundedStack.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the BoundedStack, with the specified <see cref="P:Ifs.Fnd.Windows.Forms.BoundedStack.UpperBound"/>
            </summary>
            <param name="upperBound">an integer representing the upper bound of the <b>BoundedStack</b></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.BoundedStack.Push(System.Object)">
            <summary>
            Overriden. Inserts an object at the top of the Stack.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to push onto the <see cref="T:Ifs.Fnd.Windows.Forms.BoundedStack"/>. The value can be a null reference </param>
            <remarks>
            When objects are pushed into to stack, if the current stack is full, the object at the bottom of the
            stack is removed, before the new object is placed into the stack.
            If the pushed object is equal to the object at the top of the <b>BoundedStack</b> then 
            operation aborts, without pushing the new object to stack. 
            <para>
            To check for equality, each objects, <see cref="M:System.Object.Equals(System.Object)"/> method is called. If you
            wish to provide some other method to compare objects, register a delegate with <see cref="P:Ifs.Fnd.Windows.Forms.BoundedStack.IsEqual"/> property.
            </para>
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.BoundedStack.UpperBound">
            <summary>
            Gets an integer representing the maximum number of elements that can be placed into 
            the <see cref="T:Ifs.Fnd.Windows.Forms.BoundedStack"/>
            </summary>
            <value>
            Maximum number of elements that the stack can hold. The <b>default</b> value is 10.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.BoundedStack.IsEqual">
            <summary>
            Gets or sets a <see cref="T:Ifs.Fnd.Windows.Forms.BoundedStack.IsEqualDelegate"/> used to compare two objects for equality.
            </summary>
            <value>An object of type <see cref="T:Ifs.Fnd.Windows.Forms.BoundedStack.IsEqualDelegate"/> used to compare two objects for equality</value>
            <remarks>This delegate will be called from <see cref="M:Ifs.Fnd.Windows.Forms.BoundedStack.Push(System.Object)"/> to compare
            the new object with the object at the top of the stack.</remarks>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.BoundedStack.IsEqualDelegate">
            <summary>
            represents a delegate used to compare two objects in <see cref="M:Ifs.Fnd.Windows.Forms.BoundedStack.Push(System.Object)"/>
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndReferenceBox">
            <summary>
            Reference Box Control with functionality for List of Values (F8) and 
            Ctrl-K Validate logic. Also provides search capability through a 
            search dialog from within the List of Values dialog.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox">
            <summary>
            A reference collection box facillitates presenting collection of semi-colon seperated 
            selected items.
            </summary>
            <remarks>the <I>'To'</I> field in Microsoft Outlook mail clients' 
            <I>Send Mail</I> window is an example for
            a referece collection box. You can obtain similar functionality by using 
            <b>FndReferenceCollectionBox</b> objects.</remarks>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase">
            <summary>
            Provides a base class for reference box controls. 
            </summary>
            <remarks>Do not directly create objects from this class, instead use
            <see cref="T:Ifs.Fnd.Windows.Forms.FndReferenceBox"/> and <see cref="T:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox"/> classes to create
            reference boxes.</remarks>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.#ctor">
            <summary>
            Creates a new instance of the <b>FndReferenceBoxBase</b> class.
            </summary>
            <remarks>Do not directly create an object from the <b>FndReferencceBoxBase</b> class.
            Instead, create reference boxes from <see cref="T:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox"/> and
            <see cref="T:Ifs.Fnd.Windows.Forms.FndReferenceBox"/> classes.</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.Clear">
            <summary>
            Clears the contents of the referance box and any cached values.
            </summary>
            <remarks>
            Note to inheritors: when this method is called the cached results set and 
            the displayed text should be cleared from the control.
            </remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ResetBackColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.BackColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ResetForeColor">
            <summary>
            Resets the <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ForeColor"/> property to its default value.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.LovInit">
            <summary>
            Creates an LOV provider for this control.
            </summary>
            <returns>True if LOV successfully initiated, otherwise False</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.CreateCondition(System.Reflection.MethodInfo)">
            <summary>
            Create a <see cref="T:Ifs.Fnd.Data.FndDataRow"/> containing condition columns
            </summary>
            <param name="mi">a <see cref="T:System.Reflection.MethodInfo"/> object of a method which
            contains the condition info as the first parameter</param>
            <returns>a <see cref="T:Ifs.Fnd.Data.FndDataRow"/> object containing condition columns</returns>
            <remarks> The condition column is generated from the first parameter of the method represented 
            by <paramref name="mi"/>.</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.BuildCondition(System.Reflection.MethodInfo,System.String,System.Boolean)">
            <summary>
            Adds condition from the searchstring to the <see cref="T:Ifs.Fnd.Data.FndDataRow"/> record
            </summary>
            <param name="mi">a <see cref="T:System.Reflection.MethodInfo"/> object of a method which
            contains the condition info as the first parameter</param>
            <param name="pattern">New condition string to add.</param>
            <param name="allowLikeSearch">True if we accept a like search that can result in multiple hits</param>
            <returns>Condition record built.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.GetConditionColumns(Ifs.Fnd.Data.FndDataRow,System.Int32,System.Boolean@)">
            <summary>
            Returns the columns that should be used to build search condition
            </summary>
            <param name="condition">A <see cref="T:Ifs.Fnd.Data.FndDataRow"/> object describing the condition columns</param>
            <param name="inputWordCount">An integer specifying the number of words entered.</param>
            <param name="noMatchingSearchStringsSpecifed">A boolean returning whether there are any search strings matching the number of words entered has been specified.</param>
            <returns>A <see cref="T:System.Collections.Specialized.StringCollection"/> object containing column names</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.GetMethodInfoFromActivityHandler(System.String,Ifs.Fnd.AccessProvider.Activity.FndActivityHandlerBase)">
            <summary>
            obtains a <see cref="T:System.Reflection.MethodInfo"/> object from the <paramref name="activityHandler"/>
            corresponing to the <paramref name="compositeMethodName"/>.
            </summary>
            <param name="compositeMethodName"> a string representing the method name, in the format <I>Interface.MethodName</I></param>
            <param name="activityHandler">the activity handle object</param>
            <returns>a <see cref="T:System.Reflection.MethodInfo"/> object representing the <paramref name="compositeMethodName"/></returns>
            <remarks><paramref name="compositeMethodName"/> should be of the format <I>Interface.MethodName</I></remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ColumnsFromListMethod">
            <summary>
            Gets a collection of Lov Columns corresponding to the <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ListCommand"/> property.
            </summary>
            <returns>a <see cref="T:Ifs.Fnd.Data.FndDataColumnCollection"/> object, containing a collection of the referents columns.</returns>
            <remarks> The return column collection are the condition columns in the first parameter of
            the method identified by the <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ListCommand"/>. </remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.SplitToInterfaceAndMethod(System.String,System.String@,System.String@)">
            <summary>
            seperates a method name in the format <I>Interface.MethodName</I> to its constituent <I>Interface</I>
            and <I>methodName</I>
            </summary>
            <param name="compositeMethodName">string in the format <I>Interface.MethodName</I></param>
            <param name="interfaceName">interface name part of the <paramref name="compositeMethodName"/></param>
            <param name="methodName">method name part of the <paramref name="compositeMethodName"/></param>
            <exception cref="T:Ifs.Fnd.FndSystemException">method name format is not <I>Interface.MethodName</I>
            or <I>InterfaceName</I> is missing or <I>methodName</I> is missing</exception>
            <remarks>Use this method to split a composite method name in the format <I>Interface.MethodName</I>
            into <I>Interface</I> and <I>MethodName</I> constituent parts.</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.OnModifyLovCondition(Ifs.Fnd.Data.FndDataRow)">
            <summary>
            Raises the ModifyLovCondition event
            </summary>
            <param name="condition">The list of values query condition</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.OnModifyLovClientSearch(Ifs.Fnd.Explorer.Interfaces.FndClientSearch)">
            <summary>
            Raises the ModifyLovCleintSearch event
            </summary>
            <param name="clientsearch">The list of values query clientsearch</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.OnLovReferentChanged">
            <summary>
            Raises the ModifyLovSearchCondition event
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.OnReferentChanged">
            <summary>
            Raises the <see cref="E:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ReferentChanged"/> event.
            </summary>
            <remarks> for more information on event handling see <I>Handling events and delegates</I>
            in MSDN documentation.</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.AllFormatStringColumnsNull(Ifs.Fnd.Data.FndDataRow,System.String)">
            <summary>
            Checks whether fields in a <see cref="T:Ifs.Fnd.Data.FndDataRow"/> object that corresponds to <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.FormatString"/>
            property are all null.
            </summary>
            <param name="referentRow">A <see cref="T:Ifs.Fnd.Data.FndDataRow"/> object containing the datarow to be analysed</param>
            <param name="formatString">string representing format columns names</param>
            <returns> <b>true</b> if all fields in <I>referentRow</I> corresponding to <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.FormatString"/> property
            are empty, else <b>false</b>
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="referentRow"> is null </paramref></exception>
            <exception cref="T:System.ArgumentException"><paramref name="formatString"> is empty</paramref></exception>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.BindingAdded(Ifs.Fnd.Windows.Forms.FndBinding)">
            <summary>
            Notifies the control that a binding is added.
            </summary>
            <param name="fndBinding">The <see cref="T:Ifs.Fnd.Windows.Forms.FndBinding"/> object that is added.</param>
            <remarks><b>PreCondition: </b> <i>fndBinding</i> parameter should not be null when calling this method</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.BindingRefreshed(Ifs.Fnd.Windows.Forms.FndBinding)">
            <summary>
            Notifies the control that a binding is refreshed.
            </summary>
            <param name="fndBinding">The <see cref="T:Ifs.Fnd.Windows.Forms.FndBinding"/> object that is refreshed.</param>
            <remarks><b>PreCondition: </b> <i>fndBinding</i> parameter should not be null when calling this method</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.BindingRemoved(Ifs.Fnd.Windows.Forms.FndBinding)">
            <summary>
            Notifies the control that a binding is removed.
            </summary>
            <param name="fndBinding">The <see cref="T:Ifs.Fnd.Windows.Forms.FndBinding"/> object that is removed.</param>
            <remarks><b>PreCondition: </b><i>fndBinding</i> parameter should not be null when calling this method</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Raises the ReadOnlyChanged event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.GetReferentQualifiers(Ifs.Fnd.Data.FndDataRow)">
            <summary>
            Use reference qulifiers set for the FndDataRow assosiated with
            this reference box to filter values.
            </summary>
            <param name="condition">Condition row to use</param>
            <returns>An FndDataRow with qualifier details</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.OnCreateControl">
            <summary>
            Override to set instance variables after control is fully created.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.BeginInit">
            <summary>
            Signals the control that initialization is starting.
            </summary>
            <remarks>For more information see <see cref="T:System.ComponentModel.ISupportInitialize"/>
            <seealso cref="T:System.ComponentModel.ISupportInitialize"/>"/&gt;</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
            <remarks>For more information see <see cref="T:System.ComponentModel.ISupportInitialize"/>
            <seealso cref="T:System.ComponentModel.ISupportInitialize"/></remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ComponentInitializing">
            <summary>
            gets a value indicating whether this component is initialising.
            </summary>
            <value><b>true</b> is component is initialising, <b>false</b> otherwise
            default is <b>false</b></value>
            <remarks>Before initialising the component, <see cref="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.BeginInit"/> method
            should be called, and after initialising <see cref="M:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.EndInit"/> method should
            be called. You should also refere <see cref="T:System.ComponentModel.ISupportInitialize"/> interface for more information.
            <seealso cref="T:System.ComponentModel.ISupportInitialize"/></remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.LovManager">
            <summary>
            LOV manager used for the reference box.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.Explorer">
            <summary>
            Explorer form.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.RefColumn">
            <summary>
            Reference column used for LOV.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.LovProvider">
            <summary>
            LOV provider used for this LOV.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ActivityDataAdapter">
            <summary>
            Gets or sets a <see cref="T:Ifs.Fnd.AccessProvider.Activity.FndActivityDataAdapter"/> instance for the <I>FndReferenceBox</I> to use.
            </summary>
            <value>a <see cref="T:Ifs.Fnd.AccessProvider.Activity.FndActivityDataAdapter"/> instance.</value>
            <remarks>
            <see cref="P:Ifs.Fnd.AccessProvider.Activity.FndActivityDataAdapter.ActivityContext"/> property provides 
            fuctionality for server interaction within an activity.
            The ReferenceBox uses this instance of <see cref="T:Ifs.Fnd.AccessProvider.Activity.FndActivityDataAdapter"/>
            to perform server calls.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ActivityHandler">
            <summary>
            Gets or sets a value for the ActivityHandler object to use.
            </summary>
            <value>an instance of a class derived from <see cref="T:Ifs.Fnd.AccessProvider.Activity.FndActivityHandlerBase"/>. </value>
            <remarks>
            This is the generated activity handler that wraps
            the server activity handler calls.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.BackgroundValidation">
            <summary>
            Gets or sets a value wheter to do background (multithreaded) validation.
            Use this with care!
            </summary>
            <value><b>true</b> if validation done in background, <b>false</b> otherwise,
            default value is <b>false</b></value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.AlwaysUseStandardLOV">
            <summary>
            Gets or sets whenver standard LOV dialog should be enforced
            or if system can select a custom LOV matching the same entity.
            </summary>
            <value><b>true</b> Enforce use of standard LOV, <b>false</b> otherwise,
            default value is <b>false</b></value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.Cached">
            <summary>
            Gets or sets the FndCacheType to use.
            </summary>
            <value> a <see cref="T:Ifs.Fnd.Explorer.Interfaces.FndCacheType"/> value. default is <see cref="F:Ifs.Fnd.Explorer.Interfaces.FndCacheType.Session"/>. </value>
            <remarks>
            The cache is saved per condition, so if you have caching enabled (Cached = FndCacheType.Session)
            the data rows fetched from the server will be stored in different caches 
            for different conditions, ie. if you press the List of Values button (or F8)
            the cache will be based on no condition. If you type "ABC" and press Ctrl-K it will
            store those fetched data rows in the cache with the key "ABC" - so the next time
            you enter "ABC" and press Ctrl-K it will get the cached values.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.Caption">
            <summary>
            Caption text provided in the link label of the control
            </summary>
            <value>A string representing the caption shown in link label</value>
            <remarks>Note to inheritors: override this property and set the appropriate 
            controls text or caption property to display text to user</remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.DoExactMatchOnValidating">
            <summary>
            Gets or sets a value controlling whether the FndReferenceBox will do
            an exact match query to the server
            </summary>
            <value><b>true</b> to do an exact match, <b>false</b> to do
             a <I>'like'</I> condition. Default is <b>true</b></value>
            <remarks>
            Gets or sets a value controlling whether the FndReferenceBox will do
            an exact match query to the server or use a 'like' condition.
            This property does NOT control the Ctrl-K validation, only the
            validation executed when the ReferenceBox looses focus (OnLostFocus).
            Example: 
            <code>
            fndReferenceBox1.SearchString = "&lt;%PROJECTID%&gt;,&lt;%PROJECTNAME%&gt;"
            </code>
            
            Enter 123 in the reference box and leave the box.
            
            If DoExactMatchOnValidating = true the condition will be:
            PROJECTID = 123 OR PROJECTNAME = 123. 
            If DoExactMatchOnValidating = false the condition will be:
            PROJECTID like 123% OR PROJECTNAME like 123%. 
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.Font">
            <summary>
            <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.Font"/> used when editing text.
            </summary>
            <value>a <see cref="T:System.Drawing.Font"/> object to apply to text displayed
            when editing.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.FontColor">
            <summary>
            Color of the <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.Font"/>.
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> that represent the color of the
            <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.Font"/> property</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.FormatString">
            <summary>
            Gets or sets the format string that is used to determine how 
            the validated reference is displayed.
            </summary>
            <value>
            a <see cref="T:System.String"/> to be used as <I>FormatString</I>
            </value>
            <remarks>
            Note: Should be modelled and included in the meta data in the ServerModel.
            
            The formatting will call the Ifs.Fnd.Data.FndDataRow.Format method using the
            FormatString as parameter.
            
            Example:
            <code>
            fndReferenceBox1.FormatString = "&lt;%PROJECTID%&gt; - &lt;%PROJECTNAME%&gt;"
            </code>
            
            When the reference is validated in the box it will display
            a formatted text which is underlined for valid references.
            
            "12345 - The Montgomery Project" 
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.InvalidFont">
            <summary>
            <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.Font"/> for the invalid text
            </summary>
            <value>A <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.Font"/> object indicating the font used to draw
            invalid text.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.InvalidFontColor">
            <summary>
            Color of the <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.InvalidFont"/>.
            </summary>
            <value> A <see cref="T:System.Drawing.Color"/> that represents the color used to
            draw the <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.InvalidFont"/> text.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ListCommand">
            <summary>
            Gets or sets the name of the list/query activity handler method that
            is used to to Ctrl-K validation and List of Values.
            </summary>
            <value> a string representing the list/query activity handler method.</value>
            <example>
            <code>
            fndReferenceBox1.ListCommand = "IBrowseProject.ListSampleProjects"
            </code>
            The <I>ListCommand</I> must match the following method signature.
            <code> ISampleInterface.ListSampleProjects(<see cref="T:Ifs.Fnd.Data.FndDataRow"/> condition, <see cref="T:Ifs.Fnd.Data.FndQueryOptions"/> options)</code>
            </example>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ReferentColumns">
            <summary>
            Gets the available columns for FormatString designer.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.MaxRows">
            <summary>
            Gets or sets the maximum number of rows to fetch in a List Of Values
            or Ctrl-K validation call.
            </summary>
            <value>an integer representing number of rows. Default value is 100</value>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than 1
            </exception>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ReadOnly">
            <summary>
            Gets or sets a value indicating whether text in the FndReferenceBox/FndReferenceCollectionBox is read-only.
            </summary>
            <value>
            <b>true</b> if the FndReferenceBox/FndReferenceCollectionBox is read-only; otherwise, <b>false</b>. The default is <b>false</b>.
            </value>
            <remarks>
            This property is used by the framework to set the udpdatable state of the control when the control is data bound. 
            In such a situation setting this property at design time has no effect. To control the read-only behaviour even when 
            the control is data bound, first set the <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.AutoHandleUpdatable"/> property to <b>false</b>.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.SearchString">
            <summary>
            Gets or sets the Search format string
            </summary>
            <value>a text string defining the search format</value>
            <remarks>
            the Search format string is used to determine how 
            the reference box performs searches for Ctrl-K validation.
            
            Note: Should be modelled and included in the meta data in the ServerModel
            
            <code>
            fndReferenceBox1.SearchString = "&lt;%PROJECTID%&gt;,&lt;%PROJECTNAME%&gt;"
            </code>
            
            If you enter 123 in the reference box and press Ctrl-K
            the query will have the following condition:
            PROJECTID like 123% OR PROJECTNAME like 123%
            
            If you enter 123 456
            the query will have the following condition:
            PROJECTID like 123% AND PROJECTNAME like 456%
            
            If you need to support for the above condition to work when the input words are reveresed
            search string should look like the following;
            
            <code>
            fndReferenceBox1.SearchString = "&lt;%PROJECTID%&gt;&lt;%PROJECTNAME%&gt;,&lt;%PROJECTNAME%&gt; - &lt;%PROJECTID%&gt;"
            </code>
            
            If you enter 123 456
            the query will now have the following condition:
            (PROJECTID like 123% AND PROJECTNAME like 456%) OR (PROJECTNAME like 123% AND PROJECTID like 456%)
            
            When the ReferenceBox looses focus (OnLostFocus) the validation will
            be done with an exact match:
            PROJECTID = 123 OR PROJECTNAME = 123.
            However this behaviour could be changed by setting the <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.DoExactMatchOnValidating"/> property to <b>false</b>
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ValidFont">
            <summary>
            <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.Font"/> for the validated text
            </summary>
            <value>A <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.Font"/> object used to draw the validated text.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ValidFontColor">
            <summary>
            Color of the <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ValidFont"/>.
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> used to draw the validated text.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.IgnoreCase">
            <summary>
            Gets or sets a value controlling whether the FndReferenceBox will do
            a case-sensitive query to the server. This property is ignored if 
            <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.DoExactMatchOnValidating"/> is set to true.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the background color of the control. The default is the value of the <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.DefaultBackColor"/> property.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.DefaultBackColor">
            <summary>
            Gets the default background color of the control.
            </summary>
            <value>
            The default background Color of the control. The default is <see cref="P:System.Drawing.SystemColors.Window"/>.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
            <value>
            The foreground Color of the control. The default is the value of the <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.DefaultForeColor"/> property.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.DefaultForeColor">
            <summary>
            Gets the default foreground color of the control.
            </summary>
            <value>
            The default foreground <see cref="T:System.Drawing.Color"/> of the control. The default is <see cref="P:System.Drawing.SystemColors.WindowText"/>.
            </value>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ModifyLovCondition">
            <summary>
            Occurs before a Ctrl-K validation or List Of Values call
            is sent to the server. This is the hook where you have 
            the possibility to modify the condition used for the LOV.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ModifyLovClientSearch">
            <summary>
            Occurs before a Ctrl-K validation or List Of Values call
            is sent to the server. This is the hook where you have 
            the possibility to modify the clientsearch used for the LOV.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.LovReferentChanged">
            <summary>
            Occurs after a Ctrl-K validation or List Of Values returns
            a selected value. This is the hook where you have 
            the possibility to modify the value returned.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.FwReferentChanged">
            <summary>
            Used by framework instead of ReferentChanged to make sure that it executes first
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ReferentChanged">
            <summary>
            Occurs when the Referent property value changes.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ReadOnlyChanged">
            <summary>
            Occurs when the value of the ReadOnly property has changed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.Updatable">
            <summary>
            Gets or sets a value indicating whether the control is updatable or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.AutoHandleUpdatable">
            <summary>
            Gets or sets a value indicating whether the updatable state of the control
            is automatically handled or not.
            Note that this is only valid when the control is data bound.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.WhatsThisControlId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.DisplayText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBoxBase.ConnectedLabel">
            <summary>
            Label connected to this control for showing a display text
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox"/> class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.DisplayLov(System.Boolean)">
            <summary>
            Displays the List of Values associated with this control.
            </summary>
            <param name="populateOnStartup">If true, the LOV dialog will be automatically populated.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.ValidateText(System.Boolean)">
            <summary>
            Validates the text entered in the reference box.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.ValidateText">
            <summary>
            Validates the text entered in the reference box.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.GetFormattedStringForRow(Ifs.Fnd.Data.FndDataRow)">
            <summary>
            this is used for formating <see cref="T:Ifs.Fnd.Data.FndDataRow"/> into string format.
            </summary>
            <param name="row">a <see cref="T:Ifs.Fnd.Data.FndDataRow"/> object whose
            formated string representation is needed</param>
            <returns>Formatted string representation of <paramref name="row"/></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.SelectAll">
            <summary>
            Selects all text.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.ResetMaximumHeight">
            <summary>
            Set fixed button height.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.Revalidate">
            <summary>
            Revalidates the entered text;
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.ShowFromReferentRecords">
            <summary>
            Updates the diplayed values from internal representation.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.ClearReferents">
            <summary>
            Clears the referents collection.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.LovButtonImage(System.Int32)">
            <summary>
            LovButtonImage.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.UpdateReferentRecords(System.String)">
            <summary>
            Update the referent records contained by this control.
            Returns true if referents caused a change; false otherwise.
            </summary>
            <param name="text">The text from the reference box.</param>
            <returns>True if validation caused any changes; false otherwise</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.ReferentsToString(Ifs.Fnd.Windows.Forms.ReferentRecordCollection)">
            <summary>
            Convert the referent collection to a string representation of valid referents separated by semi-colons.
            </summary>
            <param name="referents">The referent collection to convert to string.</param>
            <returns>Semi-colon separated list of display names of the valid referents.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.ReceiveFocus">
            <summary>
            Set focus to the ReferenceBox.
            This is important if you have multiple referenceboxes
            on a form where ie. RefBox1.Referent is filter to RefBox2.
            Then RefBox1 must loose focus to push it's data to the dataset -
            Just clicking this button will not make it gain focus.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.OnLeave(System.EventArgs)">
            <summary>
            Raises the Leave event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.Clear">
            <summary>
            Clears the ReferenceCollectionBox.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.AddReferent(Ifs.Fnd.Data.FndDataRow)">
            <summary>
            Adds a FndDataRow to the referents collection.
            </summary>
            <param name="row">FndDataRow to be added.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.SetToolTip(System.Windows.Forms.ToolTip,System.String)">
            <summary>
            Sets the tool tip for this control
            </summary>
            <param name="toolTip">An instance of ToolTip</param>
            <param name="message">Tool tip message</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.Focus">
            <summary>
            Overrides to deligate the call to richtextbox.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.OnHandleCreated(System.EventArgs)">
            <summary>
            Register control for themeing
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Overriden. Handles Shift + F8 and F8 key presses.
            </summary>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"/> values that represents the key to process.</param>
            <returns><b>true</b> if the character was processed by the control; otherwise, <b>false</b></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>
            Overriden. See <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)"/> method. raises the Validating event.
            </summary>
            <param name="e">a <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.OnBackColorChanged(System.EventArgs)">
            <summary>
            Notified the control that BackColor is changed.
            Default implementation pushes backcolor to the components
            within the FndReferenceCollectionBox.
            </summary>
            <param name="e">Event Arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.OnBorderStyleChanged(System.EventArgs)">
            <summary>
            Raises the Ifs.Fnd.Windows.Forms.FndReference.BorderStyleChanged event.  
            </summary>
            <param name="e">Event Arguments</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.SetTheme">
            <summary>
            Set the Ifs specific theme
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.BorderStyleChanged">
            <summary>
            Occurs when the BorderStyle property value changes.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.Mru">
            <summary>
            Gets or sets the mode of activation of Most Recently Used functionality.
            </summary>
            <value>
            <b>Default</b> - Mru activated conditionally.
            <b>Disabled</b> - Mru Disabled.
            <b>Enabled</b> - Mru activated.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.MruBehaviour">
            <summary>
            Gets or sets if Most Recently Used should be global or local.
            Global means that the Most Recently Used values will be accessible in all TextBoxes which have the same term.
            Local means that the Most Recently Used values will be local the this specific TextBox.
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.MruGlobalTerm">
            <summary>
            Gets or sets the term that descibes the data in the TextBox. 
            All textboxes with the same term will use the same Most Recently Used values if the MruBehaviour is set to global.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.MruObject">
            <summary>
            Gets Most Recently Used Object
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.MruListDroppedDown">
            <summary>
            Gets whether the MRU list is currently shown.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.ApplicationMruEnabled">
            <summary>
            Gets whether Mru functionality is enabled at application level.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.SelectionLength">
            <summary>
            Gets or sets the number of characters selected in the text box.
            </summary>
            <value>The number of characters selected in the text box.</value>
            <exception cref="T:System.ArgumentException">The value assigned to the property is less than zero.</exception>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.SelectionStart">
            <summary>
            Gets or sets the starting point of text selected in the text box.
            </summary>
            <value>value representing the starting position of selecttion.</value>
            <exception cref="T:System.ArgumentException">The value assigned to the property is less than zero.</exception>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.BorderStyle">
            <summary>
            Gets or sets the border type of the text box control.  
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
             A value that is not within the range of valid values for the enumeration was assigned to the property.
             </exception>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.Referents">
            <summary>
            Selected <see cref="T:Ifs.Fnd.Data.FndDataRow"/> object collection.
            </summary>
            <value> a <see cref="T:Ifs.Fnd.Data.FndDataRowCollection"/> object containing the selected records</value>
            <remarks>Use this property to obtain selected rows. 
            <para><B>Note:</B> When comparing two <I>Referent</I> references, if they are equal
            then they point to the same object, and the contained <see cref="T:Ifs.Fnd.Data.FndDataRowCollection"/>
            will have exactly the same <see cref="T:Ifs.Fnd.Data.FndDataRow"/> objects. However, if the two references are not equal, it is not
            guranteed that,<see cref="T:Ifs.Fnd.Data.FndDataRow"/> objects inside the <see cref="T:Ifs.Fnd.Data.FndDataRowCollection"/>
            objects are different from one another.</para>
            <para>Following sample demonstrates, that references to <I>Referent</I> property
            may not return the same reference.</para>
            <code>
            
            FndReferenceCollectionBox refCollection = new FndReferenceCollectionBox();
            //...
            //Do some operations
            //...
            FndDataRowCollection data1 = refCollection.Referent;
            FndDataRowCollection data2 = refCollection.Referent;
            if(data1==data2)// data1==data2 is always <b>false</b>
            {
            	//this condition will never be executed, since 'data1' and 'data2' are two different references.
            }		 
            </code>
             </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.MultiLine">
            <summary>
            Gets or sets a value indicating whether multiline control.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.MultiSelect">
            <summary>
            Gets or sets a value indicating whether multiple items can be selected.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.ShowDropDown">
            <summary>
            Shows Drop Down
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.IgnoreValidateEvent">
            <summary>
            Gets a value indicating whether to ignore the validate event.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.Focused">
            <summary>
            Overrides to deligate the call to richtextbox.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.ReadOnly">
            <summary>
            Gets or sets a value indicating whether referenceCollectionBox is readOnly
            </summary>
            <value><b>true</b> if control is readonly, otherwise <b>false</b>. default is <b>false</b></value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.BackColor">
            <summary>
            Gets or sets the background color of the control.
            </summary>
            <value>
            The background color of the control.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.ValidFontColor">
            <summary>
            Color of the <see cref="T:System.Drawing.Font"/>.
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> used to draw the validated text.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.Text">
            <summary>
            Gets or sets the text displayed in the referencebox regardless if value is validated or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.ReferentIsValid">
            <summary>
            Friend property for the bindable Referent property, indicating whether
            the control has an invalid value or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceCollectionBox.ValidReferents">
            <summary>
            Returns true if all entries located in the richtextbox field are references, otherwise false.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBox.#ctor">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndReferenceBox class.  
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBox.BindingAdded(Ifs.Fnd.Windows.Forms.FndBinding)">
            <summary>
            Notifies the control that binding is added
            </summary>
            <param name="fndBinding">a <see cref="T:Ifs.Fnd.Windows.Forms.FndBinding"/> object containing binding</param>
            <remarks><b>Precondition:</b> <i>fndBinding</i> parameter should be not null.</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBox.BindingRefreshed(Ifs.Fnd.Windows.Forms.FndBinding)">
            <summary>
            Notifies the control that binding is Refreshed
            </summary>
            <param name="fndBinding">a <see cref="T:Ifs.Fnd.Windows.Forms.FndBinding"/> object containing binding</param>
            <remarks><b>Precondition:</b> <i>fndBinding</i> parameter should be not null.</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBox.BindingRemoved(Ifs.Fnd.Windows.Forms.FndBinding)">
            <summary>
            Notifies the control that binding is Removed
            </summary>
            <param name="fndBinding">a <see cref="T:Ifs.Fnd.Windows.Forms.FndBinding"/> object containing binding</param>
            <remarks><b>Precondition:</b> <i>fndBinding</i> parameter should be not null.</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBox.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Performs the work of setting the specified bounds of this control.  
            </summary>
            <param name="x">The new System.Windows.Forms.Control.Left property value of the control.</param>
            <param name="y">The new System.Windows.Forms.Control.Right property value of the control.</param>
            <param name="width">The new System.Windows.Forms.Control.Width property value of the control.</param>
            <param name="height">The new System.Windows.Forms.Control.Height property value of the control.</param>
            <param name="specified">A bitwise combination of the System.Windows.Forms.BoundsSpecified values.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBox.GetDataMembersForDataSource(System.Object)">
            <summary>
            helps the data consumer to detect query include/exclude parameters depending on what columns the control is using
            </summary>
            <param name="dataSource">The datasource</param>
            <returns>A list of datamembers for the specified datasource</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndReferenceBox.OnCreateControl">
            <summary>
            OnCreateControl.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBox.MultiSelect">
            <summary>
            MultiSelect functionality is intended only for FndReferenceCollectionBox but was mistakenly exposed as public. 
            Can't change the visibility level due to backward compatibility requirements
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBox.DataSource">
            <summary>
            Gets or Sets the data source object used by the reference box
            </summary>
            <value>A <see cref="T:Ifs.Fnd.Data.FndBindingListBase"/> object, used as the data source</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBox.DataMember">
            <summary>
            Gets or Sets the data member of the <see cref="P:Ifs.Fnd.Windows.Forms.FndReferenceBox.DataSource"/> that this control is bound to
            </summary>
            <value>a <see cref="T:System.String"/> representing the data member to which this control is bound to</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBox.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBox.AutoSize">
            <summary>
            Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.
            </summary>	
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBox.Referent">
            <summary>
            Gets or sets the reference data row.
            If the reference box is validated (and the text is underlined)
            the Referent property will be the reference data row. If it's not
            valid the Referent property will be null.
            </summary>
            <value>A <see cref="T:Ifs.Fnd.Data.FndDataRow"/> object, representing the data row
            refered by the reference box.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBox.ReferentIsNull">
            <summary>
            Friend property for the bindable Referent property, indicating whether
            the control has a value or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBox.InvalidReferent">
            <summary>
            Friend property for the bindable Referent property, gets/sets
            an invalid value for the referent.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndReferenceBox.MultiLine">
            <summary>
            Gets or sets a value indicating whether multiline control.  
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndLovConditionEventHandler">
            <summary>
            Event for setting condition on a List of Values call in a reference box
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndLovConditionEventArgs">
            <summary>
            Eventarguments for setting condition on a List of Values call in a reference box
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLovConditionEventArgs.#ctor(Ifs.Fnd.Data.FndDataRow)">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndLovConditionEventArgs object
            with an initial query condition.
            </summary>
            <param name="condition">The query condition</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLovConditionEventArgs.Condition">
            <summary>
            Gets the query condition for the List Of Values call
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndLovClientSearchEventHandler">
            <summary>
            Event for setting ClientSearch on a List of Values call in a reference box
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndLovClientSearchEventArgs">
            <summary>
            Eventarguments for setting clientsearch on a List of Values call in a reference box
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndLovClientSearchEventArgs.#ctor(Ifs.Fnd.Explorer.Interfaces.FndClientSearch)">
            <summary>
            Initializes a new instance of the Ifs.Fnd.Windows.Forms.FndLovClientSearchEventArgs object
            with a clientsearch.
            </summary>
            <param name="clientsearch">The clientsearch</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndLovClientSearchEventArgs.ClientSearch">
            <summary>
            Gets the ClientSearch for the List Of Values call
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.ReferentRecordCollection.IsEqual(System.Object,System.Object)">
            <summary>
            Compares two objects and if they are considered equal returns true, else false
            </summary>
            <param name="obj1">first object to compare</param>
            <param name="obj2">second object to compare</param>
            <returns></returns>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndExternalToolBarButtonClickEventHandler">
            <summary>
            A delegate for the ExternalToolbarButtonClick event.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndDialogOpenMode">
            <summary>
            Enumeration used to indicate if the Link dialog is opened to insert a new link or edit an existing link.
            Purpose of using en enumeration here is for the sake of code clarity.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndExtendedLinkText">
            <summary>
            Structure used to store the actual link text along with additional information as to how it should be treated.
            (i.e. launch as a uri, expand in-place or expand in a separate section.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndActiveLinkInfo">
            <summary>
            Internal structure for storing information of the link currently active.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndActiveLinkInfo.URI">
            <summary>
            This property is used to directly read the value of ExtendedUri.LinkedText field.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndLinkActiveState">
            <summary>
            Values of this enumeration will be used to store the current state of a link.
            Expanded   - Text associated with this link is currently shown.
            Collapsed  - Text associated with this link is currently hidden.
            Inactive   - Currently inactive.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndLinkActivationType">
            <summary>
            Values of this enumeration will be used to decide how a link would be activated.
            Uri                - Activated within a separate application such as a web browser, mail client or an instance of IFS Explorer.
            CollapsibleSection - Displayed in a separate section within the current instance of FndRichTextBox.
            InPlaceExpansion   - Displayed in-line with the helper text at the point of activation.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndRichTextBoxSearchDialogMode">
            <summary>
            Values of this enumeration will be used to decide how the Find/Replace dialog is displayed.
            Find     - Dialog displayed for Find functionality with expandable indicator on Replace button.
            FindOnly - Replace function disabled. Replace button not visible.
            Replace  - Dialog displayed for Replace functionality.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarVisibility">
            <summary>
            Tool bar visibility style enumeration.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarVisibility.Always">
            <summary>
            Always display the toolbar.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarVisibility.Never">
            <summary>
            Never display the toolbar.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarVisibility.AutoHide">
            <summary>
            Toolbar is shown only when the control is in focus and it is editable.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarVisibility.EnableContextMenuItem">
            <summary>
            Toolbar is shown only when 'Toolbar' RMB option is clicked.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarButtons">
            <summary>
            Tool bar buttons enumeration.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarButtons.Bold">
            <summary>
            Sets the visibility of Bold button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarButtons.Italic">
            <summary>
            Sets the visibility of Italic button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarButtons.Underline">
            <summary>
            Sets the visibility of Underline button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarButtons.LeftAlign">
            <summary>
            Sets the visibility of Left Align button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarButtons.CenterAlign">
            <summary>
            Sets the visibility of Center Align button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarButtons.RightAlign">
            <summary>
            Sets the visibility of Right Align button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarButtons.Bullet">
            <summary>
            Sets the visibility of Bullet button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarButtons.IndentDec">
            <summary>
            Sets the visibility of Decrease Indent button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarButtons.IndentInc">
            <summary>
            Sets the visibility of Increase Indent button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarButtons.FontColor">
            <summary>
            Sets the visibility of Font color button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarButtons.Find">
            <summary>
            Sets the visibility of find button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarButtons.Replace">
            <summary>
            Sets the visibility of replace button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarButtons.Strikethrough">
            <summary>
            Sets the visibility of strikethrough button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarButtons.Highlight">
            <summary>
            Sets the visibility of highlight button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBoxToolBarButtons.UrlLink">
            <summary>
            Sets the visibility of hyperlink button.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FindReplaceDialog">
            <summary>
            Summary description for FindReplaceDialog.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FindReplaceDialog.#ctor(Ifs.Fnd.Explorer.Interfaces.IFndExplorer)">
            <summary>
            Default constructor needed by the VS.NET designer
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FindReplaceDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FindReplaceDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndExternalToolBarButtonClickEventArgs">
            <summary>
            A class containing events for the ExternalToolBarButtonClick event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndExternalToolBarButtonClickEventArgs.#ctor(Ifs.Fnd.Windows.Forms.FndRichTextBox,System.Windows.Forms.ToolStripItem)">
            <summary>
            Creates a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndExternalToolBarButtonClickEventArgs"/> class.
            </summary>
            <param name="richTextBox"></param>
            <param name="button"></param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndExternalToolBarButtonClickEventArgs.RichTextBox">
            <summary>
            Gets the <see cref="T:Ifs.Fnd.Windows.Forms.FndRichTextBox"/> which raised this event.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndExternalToolBarButtonClickEventArgs.Button">
            <summary>
            Gets the <see cref="T:System.Windows.Forms.ToolStripItem"/> which raised this event.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndRichTextBox">
            <summary>
            Represents a IFS Windows Forms rich text box control.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndRichTextBox.Renderer">
            <summary>
            Renderer to be used by the floating toolstrip.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.#ctor">
            <summary>
            Initializes a new instance of the FndRichTextBox class.  
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Bold(System.Boolean)">
            <summary>
            Sets/Removes the bold property of the selected text.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Italic(System.Boolean)">
            <summary>
            Sets/Removes the italic property of the selected text.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Underline(System.Boolean)">
            <summary>
            Sets/Removes the underline property of the selected text.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Strikeout(System.Boolean)">
            <summary>
            Sets/Removes the strikethrough property of the selected text.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Select(System.Int32,System.Int32)">
            <summary>
            Selects a range of text in the text box.  
            </summary>
            <param name="start">The position of the first character in the current text selection within the text box.</param>
            <param name="length">The number of characters to select.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectAll">
            <summary>
            Selects all text in the text box.  
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Undo">
            <summary>
            Undoes the last edit operation in the text box.  
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.AppendText(System.String)">
            <summary>
            Appends text to the current text of text box.  
            </summary>
            <param name="text">The text to append to the current contents of the text box.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.CanPaste(System.Windows.Forms.DataFormats.Format)">
            <summary>
            Determines whether you can paste information from the Clipboard in the specified data format.  
            </summary>
            <param name="clipFormat">One of the System.Windows.Forms.DataFormats.Format values.</param>
            <returns>true if you can paste data from the Clipboard in the specified data format; otherwise, false .  </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Clear">
            <summary>
            Clears all text from the text box control.  
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Copy">
            <summary>
            Copies the current selection in the text box to the Clipboard.  
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Cut">
            <summary>
            Moves the current selection in the text box to the Clipboard.  
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Find(System.Char[],System.Int32,System.Int32)">
            <summary>
            Searches a range of text in a FndRichTextBox control for the first instance of a character from a list of characters.  
            </summary>
            <param name="characterSet"> The array of characters to search for.</param>
            <param name="start">The location within the control's text at which to begin searching.	</param>
            <param name="endPosition">The location within the control's text at which to end searching.	</param>
            <returns>The location within the control where the search characters are found. </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Find(System.Char[],System.Int32)">
            <summary>
            Searches the text of a FndRichTextBox control, at a specific starting point, for the first instance of a character from a list of characters.  
            </summary>
            <param name="characterSet"> The array of characters to search for.</param>
            <param name="start">The location within the control's text at which to begin searching.	</param>
            <returns>The location within the control where the search characters are found. </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Find(System.Char[])">
            <summary>
            Searches the text of a FndRichTextBox control,  for the first instance of a character from a list of characters.  
            </summary>
            <param name="characterSet"> The array of characters to search for.</param>
            <returns>The location within the control where the search characters are found. </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Find(System.String,System.Int32,System.Int32,System.Windows.Forms.RichTextBoxFinds)">
            <summary>
            Searches the text in a FndRichTextBox control for a string within a range of text within the control and with specific options applied to the search.  
            </summary>
            <param name="searchText">The text to locate in the control.</param>
            <param name="start">The location within the control's text at which to begin searching.</param>
            <param name="endPosition">The location within the control's text at which to end searching. This value must be equal to negative one (-1) or greater than or equal to the start parameter.</param>
            <param name="options"> A bitwise combination of the System.Windows.Forms.RichTextBoxFinds values.</param>
            <returns>The location within the control where the search text was found.  </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Find(System.String,System.Int32,System.Windows.Forms.RichTextBoxFinds)">
            <summary>
            Searches the text in a FndRichTextBox control for a string within a range of text within the control and with specific options applied to the search.  
            </summary>
            <param name="searchText">The text to locate in the control.</param>
            <param name="start">The location within the control's text at which to begin searching.</param>
            <param name="options"> A bitwise combination of the System.Windows.Forms.RichTextBoxFinds values.</param>
            <returns>The location within the control where the search text was found.  </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Find(System.String,System.Windows.Forms.RichTextBoxFinds)">
            <summary>
            Searches the text in a FndRichTextBox control for a string within a range of text within the control and with specific options applied to the search.  
            </summary>
            <param name="searchText">The text to locate in the control.</param>
            <param name="options"> A bitwise combination of the System.Windows.Forms.RichTextBoxFinds values.</param>
            <returns>The location within the control where the search text was found.  </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Find(System.String)">
            <summary>
            Searches the text in a FndRichTextBox control for a string within a range of text within the control and with specific options applied to the search.  
            </summary>
            <param name="searchText">The text to locate in the control.</param>
            <returns>The location within the control where the search text was found.  </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Focus">
            <summary>
            Sets input focus to the control. 
            </summary>
            <returns> true if the input focus request was successful; otherwise, false.  </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.GetCharFromPosition(System.Drawing.Point)">
            <summary>
            Gets the character that is closest to the specified location within the control.  
            </summary>
            <param name="pt">The location from which to seek the nearest character.</param>
            <returns>The character at the specified location.  </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.GetCharIndexFromPosition(System.Drawing.Point)">
            <summary>
            Gets the index of the character nearest to the specified location.  
            </summary>
            <param name="pt">The location to search.</param>
            <returns> The zero-based character index at the specified location.  </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.GetLineFromCharIndex(System.Int32)">
            <summary>
            Gets the line number from the specified character position within the text of the System.Windows.Forms.RichTextBox control.  
            </summary>
            <param name="index">The character index position to search.</param>
            <returns> The zero-based line number where the character index is located in.  </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.GetPositionFromCharIndex(System.Int32)">
            <summary>
            Gets the location within the control at the specified character index.  
            </summary>
            <param name="index">The index of the character for which to retrieve the location.</param>
            <returns>The location of the specified character.  </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.LoadFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)">
            <summary>
            Loads the contents of an existing data stream into the FndRichTextBox control.  
            </summary>
            <param name="data">A stream of data to load into the System.Windows.Forms.RichTextBox control.	</param>
            <param name="fileType">One of the System.Windows.Forms.RichTextBoxStreamType values.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.LoadFile(System.String,System.Windows.Forms.RichTextBoxStreamType)">
            <summary>
            Loads a specific type of file into the FndRichTextBox control.  
            </summary>
            <param name="path">The name and location of the file to load into the control.</param>
            <param name="fileType">One of the System.Windows.Forms.RichTextBoxStreamType values.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.LoadFile(System.String)">
            <summary>
            Loads a Rich Text Format (RTF) or standard ASCII text file into the FndRichTextBox control.  
            </summary>
            <param name="path">The name and location of the file to load into the control.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Paste(System.Windows.Forms.DataFormats.Format)">
            <summary>
            Pastes the contents of the Clipboard in the specified Clipboard format.  
            </summary>
            <param name="clipFormat">The Clipboard format in which the data should be obtained from the Clipboard.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Paste">
            <summary>
            Replaces the current selection in the text box with the contents of the Clipboard.  
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.Redo">
            <summary>
            Reapplies the last operation that was undone in the control.  
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.SaveFile(System.IO.Stream,System.Windows.Forms.RichTextBoxStreamType)">
            <summary>
            Saves the contents of a FndRichTextBox control to an open data stream.  
            </summary>
            <param name="data">The data stream that contains the file to save to.</param>
            <param name="fileType">One of the System.Windows.Forms.RichTextBoxStreamType values.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.SaveFile(System.String,System.Windows.Forms.RichTextBoxStreamType)">
            <summary>
            Saves the contents of the FndRichTextBox to a specific type of file.  
            </summary>
            <param name="path">The name and location of the file to save.</param>
            <param name="fileType">One of the System.Windows.Forms.RichTextBoxStreamType values.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.SaveFile(System.String)">
            <summary>
            Saves the contents of the FndRichTextBox to a Rich Text Format (RTF) file.  
            </summary>
            <param name="path">The name and location of the file to save.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.ScrollToCaret">
            <summary>
            Scrolls the contents of the control to the current caret position.  
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e">Event data</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.OnTextChanged(System.EventArgs)">
            <summary> 
            OnTextChanged.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBox.SetTheme">
            <summary>
            Method to be used by the framework to invoke a reset of the control properties 
            that have been themed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.BindingContext">
            <summary>
            Gets or sets the <see cref="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.BindingContext"/> of the parent control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.Focused">
            <summary>
            Gets a value indicating whether the control has input focus.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.ContextMenuStrip">
            <summary>
            Returns/Sets the context menu of the rich text box.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectionBold">
            <summary>
            Gets/Sets bold property for the selected text.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectionItalic">
            <summary>
            Gets/Sets italic property for the selected text.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectionUnderline">
            <summary>
            Gets/Sets underlined property for the selected text.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectionStrikeout">
            <summary>
            Gets/Sets strikethrough property for the selected text.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.HideSelection">
            <summary>
            Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.ToolBarButtons">
            <summary>
            Gets or sets the visible toolbar buttons.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.BorderStyle">
            <summary>
            Gets or sets the border style of the rich text box control.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.BackColor">
            <summary>
            Gets or sets the background color of the control.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.BackgroundImage">
            <summary>
            Gets or sets the background image of the control.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.ReadOnly">
            <summary>
            Gets or sets a value indicating whether text in the text box is read-only.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.TabSize">
            <summary>
            Gets or sets the tab size.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.ToolBarVisibility">
            <summary>
            Gets or sets the tool bar visibility style.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.Text">
            <summary>
            Gets or sets the current text in the rich text box.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.Rtf">
            <summary>
            Gets or sets the text of the FndRichTextBox control,
            including all Rich Text Format (RTF) codes.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.RtfIsNull">
            <summary>
            Indicates if the Rtf property value is null.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.AutoSize">
            <summary>
            Gets or sets a value indicating whether the size of the FndRichTextBox automatically adjusts when the font assigned to the control is changed.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectedRtf">
            <summary>
            Gets or sets the currently selected Rich Text Format (RTF) formatted text in the control.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectedText">
            <summary>
            Gets or sets the selected text within the FndRichTextBox. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectionAlignment">
            <summary>
            Gets or sets the alignment to apply to the current selection or insertion point.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectionBullet">
            <summary>
             Gets or sets a value indicating whether the bullet style is applied to the current selection or insertion point.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectionCharOffset">
            <summary>
            Gets or sets whether text in the control appears on the baseline, as a superscript, or as a subscript below the baseline.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectionColor">
            <summary>
            Gets or sets the text color of the current text selection or insertion point.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectionFont">
            <summary>
            Gets or sets the font of the current text selection or insertion point.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectionHangingIndent">
            <summary>
            Gets or sets the distance between the left edge of the first line of text in the selected paragraph and the left edge of subsequent lines in the same paragraph.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectionIndent">
            <summary>
            Gets or sets the distance in pixels between the left edge of the FndRichTextBox and the left edge of the current text selection or text added after the insertion point.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectionLength">
            <summary>
             Gets or sets the number of characters selected in control.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectionProtected">
            <summary>
            Gets or sets a value indicating whether the current text selection is protected.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectionRightIndent">
            <summary>
            The distance (in pixels) between the right edge of the RichTextBox control and the right edge of the text that is selected or added at the current insertion point.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectionStart">
            <summary>
            Gets or sets the starting point of text selected in the text box.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectionTabs">
            <summary>
            Gets or sets the absolute tab stop positions in a System.Windows.Forms.RichTextBox control.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectionType">
            <summary>
            Gets the selection type within the control.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.ShowSelectionMargin">
            <summary>
            Gets or sets a value indicating whether a selection margin is displayed in the FndRichTextBox. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.TextLength">
            <summary>
            Gets the length of text in the control.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.WordWrap">
            <summary>
             Indicates whether a multi-line text box control automatically wraps words to the beginning of the next line when necessary.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.AcceptsTab">
            <summary>
            Gets or sets a value indicating whether pressing the TAB key in a multi-line text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.AutoWordSelection">
            <summary>
            Gets or sets a value indicating whether automatic word selection is enabled.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.BulletIndent">
            <summary>
            Gets or sets the indentation used in the FndRichTextBoxExtcontrol when the bullet style is applied to the text.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.CanRedo">
            <summary>
             Gets a value indicating whether there are actions that have occurred within the FndRichTextBox that can be reapplied.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.CanUndo">
            <summary>
            Gets a value indicating whether the user can undo the previous operation in a text box control.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.Font">
            <summary>
            Gets or sets the font for the control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.ForeColor">
            <summary>
            Gets or sets the fore color for the control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.MaxLength">
            <summary>
            Gets or sets the maximum number of characters the user can type or paste into the rich text box control.  
            </summary>
            <exception cref="T:System.ArgumentException">
            The value assigned to the property is less than 0.
            </exception>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.Modified">
            <summary>
            Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.Multiline">
            <summary>
            Gets or sets a value indicating whether this is a multi-line text box control.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.PreferredHeight">
            <summary>
            Gets the preferred height for a single-line text box.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.RedoActionName">
            <summary>
            Gets the name of the action that can be reapplied to the control when the FndRichTextBox.Redo method is called.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.RightMargin">
            <summary>
            Gets or sets the size of a single line of text within the System.Windows.Forms.RichTextBox control.  
            </summary>
            <exception cref="T:System.ArgumentException">
            The specified value was less than zero.
            </exception>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.ScrollBars">
            <summary>
            Gets or sets the type of scroll bars to display in the FndRichTextBox control.  
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The specified value is not defined in the System.Windows.Forms.RichTextBoxScrollBars enumeration.
            </exception>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.UndoActionName">
            <summary>
            Gets the name of the action that can be undone in the control when the FndRichTextBox.Undo method is called.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.ZoomFactor">
            <summary>
            Gets or sets the current zoom level of the FndRichTextBox. 
            </summary>
            <exception cref="T:System.ArgumentException">
            The specified zoom factor did not fall within the permissible range.
            </exception>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.ToolBarFloaterTop">
            <summary>
            Gets or sets the Y coordinate of toolbar in auto-hide mode.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.ToolBarFloaterLeft">
            <summary>
            Gets or sets the X coordinate of toolbar in auto-hide mode.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SearchReplaceDialogTop">
            <summary>
            Gets or sets the Y coordinate of Find/Replace dialog location.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.SearchReplaceDialogLeft">
            <summary>
            Gets or sets the X coordinate of Find/Replace dialog location.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.EnableUrlTip">
            <summary>
            Gets or sets a value indicating if the associated url will be displayed as a tooltip when mouse hovers over a link.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.EditWindowTitle">
            <summary>
            Gets or sets edit window title.  
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.ShowFontPicker">
            <summary>
            Gets or sets the value indicating if the font picker combobox will be displayed on the toolbar.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.EditWindowToolBarVisibility">
            <summary>
            Gets or sets the toolbar visibility of the edit window.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.EditWindowMenuItemVisible">
            <summary>
            Gets or sets if the Edit Window Menu Item should be visible or not
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.FontCommand">
            <summary>
            Gets or sets the Command for displaying the Font dialog.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.AllowDrop">
            <summary>
            Gets or sets a value indicating whether the control can accept data that the user drags onto it.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.ExternalToolbarButtons">
            <summary>
            Gets a collection of toolbar buttons which can be assigned externally.
            </summary>
            <value>
            A collection of toolbar buttons.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.ExternalToolbarImages">
            <summary>
            Gets a collection of images to be used with the external toolbar buttons.
            </summary>
            <value>
            A collection of images.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.Explorer">
            <summary>
            Gets or sets the instance of explorer associated with this instance of <see cref="T:Ifs.Fnd.Windows.Forms.FndRichTextBox"/>
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.LinkClicked">
            <summary>
            Occurs when the user clicks on a link within the text of the control.  
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.ReadOnlyChanged">
            <summary>
            Occurs when the value of the FndRichTextBox.ReadOnly property has changed.  
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.SelectionChanged">
            <summary>
            Occurs when the selection of text within the control has changed.  
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.ModifiedChanged">
            <summary>
            Occurs when the value of the FndRichTextBox.Modified property has changed.  
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.MultilineChanged">
            <summary>
            Occurs when the value of the FndRichTextBox.Multiline property has changed.  
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.Protected">
            <summary>
            Occurs when the user attempts to modify protected text in the control. 
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.HideSelectionChanged">
            <summary>
            Occurs when the value of the FndRichTextBox.HideSelection property has changed.  
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.AutoSizeChanged">
            <summary>
            Occurs when the value of the FndRichTextBox.AutoSize property has changed.  
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.AcceptsTabChanged">
            <summary>
            Occurs when the value of the FndRichTextBox.AcceptsTab property has changed.  
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.Enter">
            <summary>
            Occurs when the control is entered.  
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.BackColorChanged">
            <summary>
            Occurs when the value of the FndRichTextBox.BackColor property changes.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.ForeColorChanged">
            <summary>
            Occurs when the value of the FndRichTextBox.ForeColor property changes.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.KeyDown">
            <summary>
             Occurs when a key is pressed while the control has focus.  
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.KeyUp">
            <summary>
             Occurs when a key is released while the control has focus.  
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.KeyPress">
            <summary>
             Occurs when a key is pressed while the control has focus.  
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.Leave">
            <summary>
            Occurs when the input focus leaves the control.  
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.MouseDown">
            <summary>
            Occurs when the mouse pointer is over the control and a mouse button is pressed.  
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.MouseEnter">
            <summary>
             Occurs when the mouse pointer enters the control.  
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.MouseHover">
            <summary>
             Occurs when the mouse pointer hovers over the control.  
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.MouseLeave">
            <summary>
             Occurs when the mouse pointer leaves the control. 
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.MouseUp">
            <summary>
            Occurs when the mouse pointer is over the control and a mouse button is released.  
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.MouseMove">
            <summary>
             Occurs when the mouse pointer is moved over the control.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.RtfChanged">
            <summary>
            Occurs when the value of the Rtf property changes.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.ExternalToolbarButtonDropDown">
            <summary>
            Fired when the drop down of a button in the external toolbar is clicked.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.ExternalToolbarButtonClick">
            <summary>
            Fired when a button in the external toolbar is clicked.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndRichTextBox.Pasting">
            <summary>
            Fires when data is about the be pasted into Rtf from Clipcboard.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.ExternalButtonsRemoved">
            <summary>
            When an edit window is opened, externally added toolstrip items are removed from the main toolstrip
            and added to the edit window toolstrip (this automatically happens, since there is only one set of external
            toolstrip items). When the edit window is closed, unless the externally added items are rejoined to the 
            main toolstrip, they will not appear on it. This problem does not arise with the internal toolstrip items,
            since every instance of a FndRichTextBox has its own set.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.Updatable">
            <summary>
            Gets or sets a value indicating whether the control is updatable or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.AutoHandleUpdatable">
            <summary>
            Gets or sets a value indicating whether the updatable state of the control
            is automatically handled or not.
            Note that this is only valid when the control is data bound.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.UseThemes">
            <summary>
            Gets or sets whether the theming should be used with this control.
            </summary>
            <value>
            True if the theming should be used, false otherwise
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.ConnectedLabel">
            <summary>
            Label connected to this control for showing a display text
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.DisplayText">
            <summary>
            Display text for the control
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRichTextBox.WhatsThisControlId">
            <summary>
            Id used for fetching the whatsthis text
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndRichTextBoxInternal">
            <summary>
            Summary description for FndRichTextBoxInternal.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBoxInternal.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRichTextBoxInternal.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndRTBButtonCollection">
            <summary>
            Summary description for FndButtonCollection.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBButtonCollection.#ctor(System.Windows.Forms.ToolStrip,System.Windows.Forms.ToolStrip)">
            <summary>
            Creates a new instance of the FndRTBButtonCollection class
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBButtonCollection.Add(System.String)">
            <summary>
            Adds a new item to the end of the toolstrip item collection.
            </summary>
            <param name="text">The text to display on the new <see cref="T:System.Windows.Forms.ToolStripItem"/>. </param>
            <remarks>
            You can also add new <see cref="T:System.Windows.Forms.ToolStripItem"/> objects to the collection by using the AddRange or Insert methods, or the other version of the Add method.
            To remove a ToolStripItem that you have previously added, use the Remove, RemoveAt or Clear methods.
            </remarks>
            <returns>The zero-based index value of the <see cref="T:System.Windows.Forms.ToolStripItem"/> added to the collection.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBButtonCollection.Add(System.Windows.Forms.ToolStripItem)">
            <summary>
            Adds a new item to the end of the toolstrip item collection.
            </summary>
            <param name="item">The ToolStripItem to be added after all existing items. </param>
            <remarks>
            You can also add new <see cref="T:System.Windows.Forms.ToolStripItem"/> objects to the collection by using the AddRange or Insert methods, or the other version of the Add method.
            To remove a ToolStripItem that you have previously added, use the Remove, RemoveAt or Clear methods.
            </remarks>
            <returns>The zero-based index value of the <see cref="T:System.Windows.Forms.ToolStripItem"/> added to the collection.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBButtonCollection.AddRange(System.Windows.Forms.ToolStripItem[])">
            <summary>
            Adds a collection of toolstrip items to this item collection.
            </summary>
            <param name="items">The collection of <see cref="T:System.Windows.Forms.ToolStripItem"/> controls to add to this <see cref="T:System.Windows.Forms.ToolStripItemCollection"/> contained in an array. </param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBButtonCollection.Clear">
            <summary>
            Removes all items from the toolstrip item collection.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBButtonCollection.Insert(System.Int32,System.Windows.Forms.ToolStripItem)">
            <summary>
            Inserts an existing item in the toolstrip item collection at the specified location.
            </summary>
            <param name="index">The position within the collection to insert the item.</param>
            <param name="item">The <see cref="T:System.Windows.Forms.ToolStripItem"/> to insert.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBButtonCollection.Remove(System.Windows.Forms.ToolStripItem)">
            <summary>
            Removes a given item from the toolstrip item collection.
            </summary>
            <param name="item">The <see cref="T:System.Windows.Forms.ToolStripItem"/> to remove from the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBButtonCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the position given from the collection.
            </summary>
            <param name="index">The indexed location of the <see cref="T:System.Windows.Forms.ToolStripItem"/> in the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBFloater.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBFloater.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog key.
            </summary>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"/> values that represents the key to process.</param>
            <returns><b>true</b> if the key was processed by the control; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBFloater.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndRTBImageCollection">
            <summary>
            Summary description for FndRTBImageCollection.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBImageCollection.#ctor(System.Windows.Forms.ImageList.ImageCollection)">
            <summary>
            Creates a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndRTBImageCollection"/> class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBImageCollection.Contains(System.Drawing.Image)">
            <summary>
            Specifies whether the <see cref="T:System.Drawing.Image"/> is contained within the collection.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image"/> to be checked</param>
            <returns>True, if the <see cref="T:System.Drawing.Image"/> is contained, False otherwise.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBImageCollection.IndexOf(System.Drawing.Image)">
            <summary>
            Returns the index of a <see cref="T:System.Drawing.Image"/> within the collection.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image"/> to be located.</param>
            <returns>-1 if the index is not present, the zero based index otherwise.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBImageCollection.Add(System.Drawing.Icon)">
            <summary>
            Adds an <see cref="T:System.Drawing.Icon"/> to the collection
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Icon"/> to be added.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBImageCollection.Add(System.Drawing.Image)">
            <summary>
            Adds an <see cref="T:System.Drawing.Image"/> to the collection
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image"/> to be added.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBImageCollection.AddRange(System.Drawing.Image[])">
            <summary>
            Adds a range of <see cref="T:System.Drawing.Image"/> objects into the collection.
            </summary>
            <param name="images">The array of <see cref="T:System.Drawing.Image"/> objects</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBImageCollection.CopyTo(System.Drawing.Image,System.Int32)">
            <summary>
            Copies an <see cref="T:System.Drawing.Image"/> located using an index.
            </summary>
            <param name="destination">The variable which should store the <see cref="T:System.Drawing.Image"/></param>
            <param name="index">The index of the source image.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBImageCollection.Remove(System.Drawing.Image)">
            <summary>
            Removes a <see cref="T:System.Drawing.Image"/> from the collection.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image"/> to be removed from the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBImageCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            Performs custom operations on the Insert Method.
            </summary>
            <param name="index">The index of the item inserted.</param>
            <param name="value">The value of the item inserted.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBImageCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            Performs custom operations on the Remove Method.
            </summary>
            <param name="index">The index of the item removed.</param>
            <param name="value">The value of the item removed.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndRTBImageCollection.OnClear">
            <summary>
            Performs custom operations on the Clear Method.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndRTBImageCollection.Item(System.Int32)">
            <summary>
            Returns an array of the images contained in this collection.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolBarFloater">
            <summary>
            Summary description for UserControl1.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolBarFloater.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolBarFloater.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolBarFloater.Dispose">
            <summary>
            Implementation of IDisposable.Dispose() to clean up all resources and make sure that GC.SuppressFinalize is called.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolBarFloater.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">True if called from Dispose(); false if called from the destructor.</param>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.HexEncoding">
            <summary>
            Summary description for HexEncoding.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.HexEncoding.GetBytes(System.String,System.Int32@)">
            <summary>
            Creates a byte array from the hexadecimal string. Each two characters are combined
            to create one byte. First two hexadecimal characters become first byte in returned array.
            Non-hexadecimal characters are ignored. 
            </summary>
            <param name="hexString">string to convert to byte array</param>
            <param name="discarded">number of characters in string ignored</param>
            <returns>byte array, in the same left-to-right order as the hexString</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.HexEncoding.InHexFormat(System.String)">
            <summary>
            Determines if given string is in proper hexadecimal string format
            </summary>
            <param name="hexString"></param>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.HexEncoding.IsHexDigit(System.Char)">
            <summary>
            Returns true is c is a hexadecimal digit (A-F, a-f, 0-9)
            </summary>
            <param name="c">Character to test</param>
            <returns>true if hex digit, false if not</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.HexEncoding.HexToByte(System.String)">
            <summary>
            Converts 1 or 2 character string into equivalant byte value
            </summary>
            <param name="hex">1 or 2 character string</param>
            <returns>byte</returns>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.InsertLinkDialog">
            <summary>
            Summary description for Form1.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.InsertLinkDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.InsertLinkDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.RTFHelper">
            <summary>
            A class with RTF helper methods
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.RTFHelper.FormatAsRtf(System.String,System.Int32,System.String@)">
            <summary>
            Checks if passed RTF string is valid. 
            If it is - leaves it unchanged.
            If not - reformats the text into a valid RTF using the font and the font size passed.
            </summary>
            <param name="fontName">Name of font to use in the formatted RTF(Rich Text Format) string.</param>
            <param name="fontSizeHalfPoints">Font size to use in the formatted RTF(Rich Text Format) string.</param>
            <param name="text">The text to check and format (reference by value for performance)</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.RTFHelper.GetColorTableText(System.Drawing.Color)">
            <summary>
            Constructs and returns a valid RTF colour table string for a given colour.
            </summary>
            <param name="colorToCode">Colour to insert to the colour table.</param>
            <returns>RTF colour table string</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.RTFHelper.GetHighlightStartCode(System.Int32)">
            <summary>
            Get the RTF code that indicates the beginning of highlighted text.
            </summary>
            <param name="colorTableIndex">Index in the colour table to the colour of highlighting.</param>
            <returns>RTF code indicating the start of highlighted text.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.RTFHelper.GetHighlightEndCode">
            <summary>
            Get the RTF code that indicates the end of highlighted text.
            </summary>
            <returns>RTF code indicating the end of highlighted text.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.RTFHelper.RemoveHighlighting(System.String)">
            <summary>
            Removes highlighting codes from the RTF text passed in, and returns the resulting string.
            </summary>
            <param name="selectedRTF">RTF text.</param>
            <returns>RTF string without highlighting codes.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.RTFHelper.GetHighlightColor(System.String)">
            <summary>
            Returns the highlight colour from the colour table of RTF string passed in.
            </summary>
            <param name="RTFText">RTF text.</param>
            <returns>Colour structure.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.RTFHelper.GetColorTableText(System.String,System.Drawing.Color,System.Int32@)">
            <summary>
            Examines a piece of RTF text passed in for a colour table structure. If
            found, and if it's not already in the table, adds the given colour to it and 
            returns the index of the newly added colour in the table via an out parameter.
            If not will create a new colour table string with the given colour added.
            The method returns a new colour table string with the given colour added.
            </summary>
            <param name="richText">RTF text to check for an existing colour table.</param>
            <param name="colorToAdd">Colour to add to the table.</param>
            <param name="indexInColorTable">Index of the new colour in the colour table.</param>
            <returns>RTF colour table string.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.RTFHelper.GetColorCount(System.String)">
            <summary>
            Returns the no. of colours in the colour table text.
            </summary>
            <param name="colorTableText">Colour table string.</param>
            <returns>No. of colours in the colour table.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.RTFHelper.GetColorAtIndex(System.String,System.Int32)">
            <summary>
            Returns the colour at the given index of the colour table, or empty colour
            structure if not found.
            </summary>
            <param name="colorTable">Colour table string.</param>
            <param name="index">Position of the colour in table.</param>
            <returns>Color structure representing the colour at given index of the colour table string, 
            or an empty colour structure if index lies outside of the colour table.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.RTFHelper.InsertHighlightCodes(System.String,System.Int32)">
            <summary>
            Inserts the begin/end highlight codes to a given RTF string.
            </summary>
            <param name="richText">RTF string of text to highlight.</param>
            <param name="colorTableIndex">Index of the colour in the colour table to use in highlighting.</param>
            <returns>RTF string with highlight codes inserted.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.RTFHelper.InsertColorTable(System.String,System.String)">
            <summary>
            Inserts a colour table to a given RTF string.
            </summary>
            <param name="richText">RTF string.</param>
            <param name="colorTableText">Colour table in Rich Text Format.</param>
            <returns>RTF string with the colour table inserted.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.RTFHelper.RemoveColorTable(System.String)">
            <summary>
            Removes the colour table(if one exists) from a given RTF string.
            </summary>
            <param name="richText">RTF string.</param>
            <returns>RTF string without the colour table.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.RTFHelper.GetObjectWidth(System.String,System.Drawing.Graphics)">
            <summary>
            Get the object width from given RTF string
            </summary>
            <param name="richText">RTF string.</param>
            <param name="g">The Graphic object</param>
            <returns>Width of the object.</returns>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.Utilities">
            <summary>
            Summary description for Utilities.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTabControl">
            <summary>
            Manages a related set of tab pages.
            </summary>
            <remarks>
            <b>FndTabControl</b> is now built on top of <see cref="T:System.Windows.Forms.TabControl"/> 
            and provides additional functionality and a rich user interface 
            in accordance with the <b>IFS Standards</b>. 
            <para> You will find examples in microsoft <see cref="T:System.Windows.Forms.TabControl"/> helpful, in 
            understanding the <b>FndTabControl</b>"/&gt; class.</para>
            </remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabControl.#ctor">
            <summary>
            Create a new instance, enabling 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabControl.OnHandleCreated(System.EventArgs)">
            <summary>
            Register control for themeing
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabControl.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Override OnSelectedIndexChanged to update current focused control for "What's this"
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabControl.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Prevent call to OnPaintBackground
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Perform the custom painting 
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabControl.OnCreateControl">
            <summary>
            Overrides OnCreateControl to force an update for font change 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabControl.OnFontChanged(System.EventArgs)">
            <summary>
            Overrides the OnFontChanged event and force a font change to take place.
            Font change is not applied if control is user painted which results in
            tab widths not to be scaled properly.		
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Show the hover cursors on the tab headers
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabControl.OnMouseEnter(System.EventArgs)">
            <summary>
            Start tracking whether the mouse leaves our bounds
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabControl.OnMouseLeave(System.EventArgs)">
            <summary>
            Clear any hover colors and icons
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabControl.OnReadOnlyChanged">
            <summary>
            Raises the ReadOnlyChanged event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabControl.SetTheme">
            <summary>
            Retrieve the theme information for this TabControl and set the properties accordingly
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabControl.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
            <remarks>see also <see cref="T:System.ComponentModel.ISupportInitialize"/> interface</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabControl.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
            <remarks>see also <see cref="T:System.ComponentModel.ISupportInitialize"/> interface</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabControl.GetTranslatableAt(System.Int32,System.Int32)">
            <summary>
            Get translatable text for the clild element at the requested location.
            <param name="x">X coordinate within control.</param>
            <param name="y">Y coordinate within control.</param>
            <returns>Translatable object at requsted location, null if no object found</returns>
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabControl.ActivateControl(System.Windows.Forms.Control)">
            <summary>
            ActivateControl.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndTabControl.ReadOnlyChanged">
            <summary>
            Fired when the value of the ReadOnly property changes.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTabControl.CustomPainting">
            <summary>
            Enable / disable Custom Painting
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTabControl.DrawXPLine">
            <summary>
            Enable / disable XP UI effect
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTabControl.ReadOnly">
            <summary>
            Gets or sets whether the control is read only.
            </summary>
            <value>
            True if the control is read only, false otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTabControl.TabPages">
            <summary>
            Gets the collection of tab pages in this tab control.
            </summary>
            <value>A <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPageCollection"/> that contains the <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> objects in this <see cref="T:Ifs.Fnd.Windows.Forms.FndTabControl"/>.</value>
            <remarks>Use <see cref="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.Add(System.String)"/> or <see cref="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.Add(System.String,System.String,System.String)"/>  and <see cref="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.Remove(Ifs.Fnd.Windows.Forms.FndTabPage)"/> methods
            to Add/Remove tab pages from this control.
            </remarks>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTabControl.ErrorIcon">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Icon"/> used as the Error UI clue for our <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> members
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTabControl.SelectedTab">
            <summary>
            Gets or sets the currently selected <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/>
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTabControl.Updatable">
            <summary>
            Gets or sets whether the control is updatable.
            </summary>
            <value>
            True if the control is updatable, false otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTabControl.AutoHandleUpdatable">
            <summary>
            Gets or sets whether the Updatable property should be handled automatically.
            Note: This property is not used.
            </summary>
            <value>
            True if the Updatable property should be handled automatically, false otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTabControl.ActiveControl">
            <summary>
            ActiveControl.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTabPageBase">
            <summary>
            The System.Windows.Forms.TabPage will misbehave in the VS2005 IDE therefore created this class
            in order to create custom FndTabPage
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageBase.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTabPageBase.CreateParams">
            <summary>
            Overrides the CreateParams property to ensure that the
            correct Windows style is applied when the user control is
            hosted in a RTL environment.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTabPageBase.WhatsThisControlId">
            <summary>
            Whatsthis control id
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTabPageBase.DisplayText">
            <summary>
            Display text of the control
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTabPage">
            <summary>
            Implements a single, themed Tab Page on the <see cref="T:Ifs.Fnd.Windows.Forms.FndTabControl"/>
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPage.#ctor">
            <summary>
            Creates a FndTabPage.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPage.OnVisibleChanged(System.EventArgs)">
            <summary>
            This member supports the .NET Framework infrastructure and is not intended to be used directly from your code
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPage.OnReadOnlyChanged">
            <summary>
            Raises the ReadOnlyChanged event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPage.OnErrorStateChange(System.EventArgs)">
            <summary>
            Fired when a control with an UIClue error is added or removed from the tab page
            </summary>
            <param name="e">an object of EventArgs</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPage.AddErrorClue(System.Windows.Forms.Control,System.String)">
            <summary>
            This method will be called when a child control gets an error clue.
            Implement a GUI to show the error.
            </summary>
            <param name="sourceControl">The child source control.</param>
            <param name="info">The error message.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPage.RemoveErrorClue(System.Windows.Forms.Control)">
            <summary>
            This method will be called when a child controls error clue is removed.
            </summary>
            <param name="sourceControl">The child source control.</param>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndTabPage.VisibleChanged">
            <summary>
            Occurs when the Visible property is changed.
            </summary>
            <remarks>
            See Consuming Event in MSDN documentation for more information on handling events.
            </remarks>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndTabPage.ReadOnlyChanged">
            <summary>
            Occurs when the ReadOnly property is changed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTabPage.ReadOnly">
            <summary>
            Gets or sets whether the control is read only.
            </summary>
            <value>
            True if the control is read only, false otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTabPage.AutoHandleUpdatable">
            <summary>
            Gets or sets whether the Updatable property should be handled automatically.
            Note: This property is not used.
            </summary>
            <value>
            True if the Updatable property should be handled automatically, false otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTabPage.Updatable">
            <summary>
            Gets or sets whether the control is updatable.
            </summary>
            <value>
            True if the control is updatable, false otherwise.
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTabPageCollection">
            <summary>
            Contains a collection of <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> objects.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.#ctor(Ifs.Fnd.Windows.Forms.FndTabControl)">
            <summary>
            Initialise a new instance of the FndTabPageCollection class.
            </summary>
            <param name="owner"> a <see cref="T:Ifs.Fnd.Windows.Forms.FndTabControl"/> object which is the owner of 
            this tab page collection.
            </param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.Add(System.String)">
            <summary>
            Add a new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to the collection
            </summary>
            <param name="text">Title of the new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> </param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.Add(Ifs.Fnd.Windows.Forms.FndTabPage)">
            <summary>
            Add a new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to the collection
            </summary>
            <param name="value"><see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to be added</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.Add(System.Windows.Forms.TabPage)">
            <summary>
            Add a new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to the collection
            </summary>
            <param name="value"><see cref="T:System.Windows.Forms.TabPage"/> to be added</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.Add(System.String,System.String)">
            <summary>
            Add a new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to the collection
            </summary>
            <param name="key">Name of the new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to be added</param>
            <param name="text">Title of the new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to be added</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.Add(System.String,System.String,System.Int32)">
            <summary>
            Add a new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to the collection
            </summary>
            <param name="key">Name of the new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to be added</param>
            <param name="text">Title of the new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to be added</param>
            <param name="imageIndex">Index of the image in the ImageList to be used</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.Add(System.String,System.String,System.String)">
            <summary>
            Add a new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to the collection
            </summary>
            <param name="key">Name of the new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to be added</param>
            <param name="text">Title of the new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to be added</param>
            <param name="imageKey"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.AddRange(Ifs.Fnd.Windows.Forms.FndTabPage[])">
            <summary>
            Add an array of <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> objects to the collection
            </summary>
            <param name="pages">Array of <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> objects to be added</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.Contains(Ifs.Fnd.Windows.Forms.FndTabPage)">
            <summary>
            Check to see if the given <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> exists in this collection
            </summary>
            <param name="page"><see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to check in the collection</param>
            <returns>True if the object is present in the collection, False otherwise</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.IndexOf(Ifs.Fnd.Windows.Forms.FndTabPage)">
            <summary>
            Find the index of the given page within the collection
            </summary>
            <param name="page"><see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to check the index of</param>
            <returns>Index of the given <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> within this collection</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.Insert(System.Int32,System.String)">
            <summary>
            Insert a new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> into the collection at a specified index
            </summary>
            <param name="index">Position to insert a new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to</param>
            <param name="text">Title of the new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to create</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.Insert(System.Int32,Ifs.Fnd.Windows.Forms.FndTabPage)">
            <summary>
            Insert a new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> into the collection at a specified index
            </summary>
            <param name="index">Position to insert a new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to</param>
            <param name="tabPage">New <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to insert</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.Insert(System.Int32,System.String,System.String)">
            <summary>
            Insert a new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> into the collection at a specified index
            </summary>
            <param name="index">Position to insert a new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to</param>
            <param name="key">Name of the new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to insert</param>
            <param name="text">Title of the new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to create</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.Insert(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Insert a new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> into the collection at a specified index
            </summary>
            <param name="index">Position to insert a new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to</param>
            <param name="key">Name of the new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to insert</param>
            <param name="text">Title of the new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to create</param>
            <param name="imageIndex"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.Insert(System.Int32,System.String,System.String,System.String)">
            <summary>
            Insert a new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> into the collection at a specified index
            </summary>
            <param name="index">Position to insert a new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to</param>
            <param name="key">Name of the new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to insert</param>
            <param name="text">Title of the new <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to create</param>
            <param name="imageKey"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageCollection.Remove(Ifs.Fnd.Windows.Forms.FndTabPage)">
            <summary>
            Remove the given <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> from this collection
            </summary>
            <param name="value"><see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> to remove</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTabPageCollection.Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> in the collection. 
            In C#, this property is the indexer for the FndTabPageCollection class.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTabPageCollection.Item(System.String)">
            <summary>
            Gets or sets a <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/> in the collection. 
            In C#, this property is the indexer for the FndTabPageCollection class.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTabPageConverter">
            <summary>
            implements a <see cref="T:System.ComponentModel.TypeConverter"/> for <see cref="T:Ifs.Fnd.Windows.Forms.FndTabPage"/>.
            This type supports the .NET Framework infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageConverter.#ctor">
            <summary>
            Creates a new instance of FndTabPageConverter class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
             <summary>
             Overriden. Returns whether this converter can convert the object to the specified type.
             </summary>
             <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. 
            </param>
             <param name="destinationType"> a <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
             <returns> true if conversion is supported. false otherwise.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTabPageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If a null reference is passed, the current culture is assumed.</param>
            <param name="value"> The <see cref="T:System.Object"/> to convert. </param>
            <param name="destinationType">a <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>new object constructed.</returns>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolBarButton">
            <summary>
            Represents a tool bar button that can be connected to
            an <see cref="T:Ifs.Fnd.Windows.Forms.FndCommand"/>.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolBarButton.DisabledOpacity">
            <summary>
            Represents the opacity to be used to render a <see cref="T:Ifs.Fnd.Windows.Forms.FndToolBarButton"/> when it is disabled.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolBarButton.#ctor">
            <summary>
            Creates a new <see cref="T:Ifs.Fnd.Windows.Forms.FndToolBarButton"/> object.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolBarButton.SetImage(System.Windows.FrameworkElement)">
            <summary>
            Use given FrameworkElement as source to create a visual brush from and use as user image.
            Could be any framework element or for example a canvas vector image
            </summary>
            <param name="frameworkElement">Framework element to use as source for a visual brush</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolBarButton.SetImage(System.Drawing.Bitmap)">
            <summary>
            Sets given bitmap image as the image of this <see cref="T:Ifs.Fnd.Windows.Forms.FndToolBarButton"/>.
            </summary>
            <param name="bitmap">Image to be set.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolBarButton.OnClick">
            <summary>
            Called when a Button is clicked.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolBarButton.HoverBackgroundProperty">
            <summary>
            <see cref="P:Ifs.Fnd.Windows.Forms.FndToolBarButton.HoverBackground"/>
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolBarButton.Text">
            <summary>
            Gets or sets the text that is to be displayed on this item.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolBarButton.IsChecked">
            <summary>
            Gets or sets this item should be displayed checked.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolBarButton.ToolTipText">
            <summary>
            Gets or sets the tool tip text of the item. This property is not visible 
            in the designer, since it's overriden by the commands tool tip. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolBarButton.IgnoreCommandText">
            <summary>
            Gets or sets a value indicating whether the text propagating from the command should be ignored.
            </summary>
            <returns>true if the the text propagating from the command is ignored; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolBarButton.HoverBackground">
            <summary>
            Gets or sets the brush to be used for background when pointer is over.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolBarButton.Command">
            <summary>
            Gets or sets the <see cref="T:Ifs.Fnd.Windows.Forms.FndCommand"/> associated with this <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripButton"/>.
            </summary>
            <value>
            The <see cref="T:Ifs.Fnd.Windows.Forms.FndCommand"/> associated with this <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripButton"/>
            </value>		
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolBarButton.PreDefinedLocationId">
            <summary>
            Id of a predefined location where the command should be located. 
            The predefined location is defined in the base class for a feature. 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolBarButton.ToolbarButtonDataContext.#ctor">
            <summary>
            Creates a new <see cref="T:Ifs.Fnd.Windows.Forms.FndToolBarButton.ToolbarButtonDataContext"/> instance.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolBarButton.ToolbarButtonDataContext.SetImage(System.Windows.FrameworkElement)">
            <summary>
            Use given FrameworkElement as source to create a visual brush from and use as user image.
            Could be any framework element or for example a canvas vector image
            </summary>
            <param name="frameworkElement">Framework element to use as source for a visual brush</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolBarButton.ToolbarButtonDataContext.SetImage(System.Drawing.Bitmap)">
            <summary>
            Sets given bitmap image as the image of this data context.
            </summary>
            <param name="bitmap">Image to be set.</param>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolBarDropDownButton">
            <summary>
            Represents a <see cref="T:Ifs.Fnd.Windows.Forms.FndToolBarButton"/> that can have a 'WinForms' drop-down.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolBarDropDownButton.InitializeDropDown(System.Windows.Forms.Control,System.Windows.Forms.ToolStripDropDown,Ifs.Fnd.Windows.Forms.FndToolBarDropDownButton.DropDownSnapDirection)">
            <summary>
            Sets the WinForms drop down that is associated with <see cref="T:Ifs.Fnd.Windows.Forms.FndToolBarDropDownButton"/>.
            </summary>
            <param name="owner">WinForms owner that should be used to display the drop down.</param>
            <param name="dropDown">The drop down to be displayed.</param>
            <param name="snap">Direction to which the menu should snap.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolBarDropDownButton.OnClick">
            <summary>
            Called when the Button is clicked.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolBarDropDownButton.DropDownArrowBrushProperty">
            <summary>
            <see cref="P:Ifs.Fnd.Windows.Forms.FndToolBarDropDownButton.DropDownArrowBrush"/>
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolBarDropDownButton.IsDropDownVisibleProperty">
            <summary>
            <see cref="P:Ifs.Fnd.Windows.Forms.FndToolBarDropDownButton.IsDropDownVisible"/>
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolBarDropDownButton.Dispose">
            <summary>
            Dispose event handlers etc
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolBarDropDownButton.DropDownArrowBrush">
            <summary>
            Gets or sets the brush to be used to draw the drop-down arrow.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolBarDropDownButton.IsDropDownVisible">
            <summary>
            Gets whether the drop-down menu is currently visible.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolBarDropDownButton.DropDownSnapDirection">
            <summary>
            Represents the direction a drop down should snap to.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolBarDropDownButton.DropDownSnapDirection.Left">
            <summary>
            Snap left.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolBarDropDownButton.DropDownSnapDirection.Right">
            <summary>
            Span right.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.ToolStripDisposeUtil">
            <summary>
            Provides utility operations to dispose ToolStrip related items
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.ToolStripDisposeUtil.ClearAndDisposeItems(System.Windows.Forms.ToolStripItemCollection)">
            <summary>
            Cleans the given collection of items and then disposes
            each item.
            </summary>
            <param name="items">Item collection to be cleared and the items disposed</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.ToolStripDisposeUtil.ClearAndDisposeItems(System.Collections.Generic.IList{Ifs.Fnd.Windows.Forms.FndToolStripMenuItem})">
            <summary>
            Cleans the given collection of items and then disposes
            each item.
            </summary>
            <param name="items">Item collection to be cleared and the items disposed</param>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.UnhookSystemEventUserPreferenceChangedEvent">
            <summary>
            Class used for unhooking the static UserPrefernceChangedEvent
            Use for debug when more information about hooked handlers is needed
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.UnhookSystemEventUserPreferenceChangedEvent.UnhookObject(System.Object)">
            <summary>
            Unhook an object from the UserPreferenceChangedEvent
            </summary>
            <param name="pObjectToUnhook">Object to unhook</param>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolStripButton">
            <summary>
            Represents a selectable <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripButton"></see> that can contain text and images.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripButton"></see> class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripButton.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripButton"></see> class.
            </summary>
            <param name="container">component collection of parent</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripButton.OnClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ToolStripItem.Click"/> event. 
            </summary>
            <param name="e">An <see cref="T:EventArgs"/> that contains the event data.</param>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolStripButton.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripButton.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripButton.Text">
            <summary>
            Gets or sets the text that is to be displayed on the item. Overrides localization from base class.
            If the text displayed on the the item is traslatable then in order for translation to work a command must 
            be connected to the item where the commands caption property is set to the text that should be translated.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripButton.ToolTipText">
            <summary>
            Gets or sets the tool tip text of the item. This property is not visible 
            in the designer, since it's overriden by the commands tool tip. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripButton.IgnoreCommandText">
            <summary>
            Gets or sets a value indicating whether the text propagating from the command should be ignored.
            </summary>
            <returns>true if the the text propagating from the command is ignored; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripButton.IgnoreCommandVisibleChange">
            <summary>
            Gets or sets a value indicating whether the change of Visible property of the associated command 
            should be ignored in the corresponding event handler.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripButton.IsStandardToolStripItem">
            <summary>
            This property is used to differentiate standard feature toolstrip items from the rest.
            We need to do this since we do not want the feature developers to change the visibility of 
            standard feature toolstrip items. Developers can only control the Enabled state of these items.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripButton.Command">
            <summary>
            Gets or sets the <see cref="T:Ifs.Fnd.Windows.Forms.FndCommand"/> associated with this <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripButton"/>.
            </summary>
            <value>
            The <see cref="T:Ifs.Fnd.Windows.Forms.FndCommand"/> associated with this <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripButton"/>
            </value>		
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripButton.PreDefinedLocationId">
            <summary>
            Id of a predefined location where the command should be located. 
            The predefined location is defined in the base class for a feature. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripButton.ToolStripSection">
            <summary>
            Gets or Sets section on which the item is placed in owner toolstrip. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripButton.PlacementIndex">
            <summary>
            Gets or sets the position on the owner toolstrip to insert the item. The items will 
            be displayed in order of this index.
            </summary>
            <value>
            The index of the toolstrip item.
            Leave -1 if the item should be added at the end.
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolStripComboBox">
            <summary>
            Represents a <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripComboBox"></see> that is properly rendered in a <see cref="T:Ifs.Fnd.Windows.Forms.FrameworkControls.FndToolStrip"></see>.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripComboBox"></see> class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripComboBox.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripComboBox"></see> class.
            </summary>
            <param name="container">component collection of parent</param>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolStripComboBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripComboBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripComboBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripComboBox.Command">
            <summary>
            This property is not relevant to this class. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripComboBox.PreDefinedLocationId">
            <summary>
            Id of a pre defined location where the command should be located. 
            The predefined location is defined in the base class for a feature. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripComboBox.ToolStripSection">
            <summary>
            Gets or Sets section on which the item is placed in owner toolstrip. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripComboBox.PlacementIndex">
            <summary>
            Gets or sets the position on the owner toolstrip to insert the item. The items will 
            be displayed in order of this index.
            </summary>
            <value>
            The index of the toolstrip item.
            Leave -1 if the item should be added at the end.
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton">
            <summary>
            Represents a control that when clicked displays an associated <see cref="T:System.Windows.Forms.ToolStripDropDown"></see> from which the user can select a single item.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton"></see> class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton"></see> class.
            </summary>
            <param name="container">component collection of parent</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton.OnClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ToolStripItem.Click"/> event. 
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton.OnDropDownShow(System.EventArgs)">
            <summary>
            Raised in response to the <see cref="M:System.Windows.Forms.ToolStripDropDownItem.ShowDropDown"/> method. 
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton.ToolTipText">
            <summary>
            Gets or sets the tool tip text of the FndCommandToolBarButton. This property is not visible 
            in the designer, since it's overriden by the commands tool tip. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton.Text">
            <summary>
            Gets or sets the text of the Toolbar. Overrides localization from base property. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton.IgnoreCommandText">
            <summary>
            Gets or sets a value indicating whether the text propagating from the command should be ignored.
            </summary>
            <returns>true if the the text propagating from the command is ignored; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton.IgnoreCommandVisibleChange">
            <summary>
            Gets or sets a value indicating whether the change of Visible property of the associated command 
            should be ignored in the corresponding event handler.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton.IsStandardToolStripItem">
            <summary>
            This property is used to differentiate standard feature toolstrip items from the rest.
            We need to do this since we do not want the feature developers to change the visibility of 
            standard feature toolstrip items. Developers can only control the Enabled state of these items.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton.PreDefinedLocationId">
            <summary>
            Id of a pre defined location where the command should be located. 
            The predefined location is defined in the base class for a feature. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton.Command">
            <summary>
            Gets or sets the FndCommand component that is interacting with the FndToolStripDropDownButton. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton.ToolStripSection">
            <summary>
            Gets or Sets section on which the item is placed in owner toolstrip. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripDropDownButton.PlacementIndex">
            <summary>
            Gets or sets the position on the owner toolstrip to insert the item. The items will 
            be displayed in order of this index.
            </summary>
            <value>
            The index of the toolstrip item.
            Leave -1 if the item should be added at the end.
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolStripLabel">
            <summary>
            Represents a nonselectable <see cref="T:System.Windows.Forms.ToolStripItem"></see> that renders text and images and can display hyperlinks.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripLabel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripLabel"></see> class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripLabel.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripLabel"></see> class.
            </summary>
            <param name="container">component collection of parent</param>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolStripLabel.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripLabel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripLabel.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripLabel.Text">
            <summary>
            Gets or sets the text that is to be displayed on the item. Overrides localization from base class.
            If the text displayed on the the item is traslatable then in order for translation to work a command must 
            be connected to the item where the commands caption property is set to the text that should be translated.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripLabel.Image">
            <summary>
            Gets or sets the image that is displayed on a <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripLabel"></see>.
            </summary>
            <returns>The <see cref="T:System.Drawing.Image"></see> to be displayed.</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripLabel.ToolTipText">
            <summary>
            Gets or sets the tool tip text of the item. This property is not visible 
            in the designer, since it's overriden by the commands tool tip. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripLabel.IgnoreCommandText">
            <summary>
            Gets or sets a value indicating whether the text propagating from the command should be ignored.
            </summary>
            <returns>true if the the text propagating from the command is ignored; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripLabel.Command">
            <summary>
            Gets or sets the <see cref="T:Ifs.Fnd.Windows.Forms.FndCommand"/> associated with this <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripLabel"/>.
            </summary>
            <value>
            The <see cref="T:Ifs.Fnd.Windows.Forms.FndCommand"/> associated with this <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripLabel"/>
            </value>        
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripLabel.PreDefinedLocationId">
            <summary>
            Id of a pre defined location where the command should be located. 
            The predefined location is defined in the base class for a feature. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripLabel.ToolStripSection">
            <summary>
            Gets or Sets section on which the item is placed in owner toolstrip. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripLabel.PlacementIndex">
            <summary>
            Gets or sets the position on the owner toolstrip to insert the item. The items will 
            be displayed in order of this index.
            </summary>
            <value>
            The index of the toolstrip item.
            Leave -1 if the item should be added at the end.
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem">
            <summary>
            Represents a selectable option displayed on a <see cref="T:Ifs.Fnd.Windows.Forms.FrameworkControls.FndMenuStrip"></see>.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem"></see> class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem"></see> class.
            </summary>
            <param name="container">component collection of parent</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem"></see> class.
            </summary>
            <param name="text">Caption of the menu item.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.#ctor(System.String,System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem"></see> class.
            </summary>
            <param name="text">Caption of the menu item.</param>
            <param name="container">component collection of parent</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event
            </summary>
            <param name="e">Event arguments for the Click Event</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.MenuDropDownDirection(Ifs.Fnd.Windows.Forms.FndToolStripMenuItem)">
            <summary>
            Make sure menu drops on the same screen the application window is on
            </summary>
            <param name="menuItem"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.OnDropDownShow(System.EventArgs)">
            <summary>
            Raises the Popup event
            </summary>
            <param name="e">Event arguments for the Popup Event</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.Clone">
            <summary>
            Overrides the base class <b>Clone()</b> method.
            </summary>
            <returns>An instance of <b>FndToolStripMenuItem</b></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.CloneMenu">
            <summary>
            Creates a copy of the current <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem"/>.
            </summary>
            <returns>A <b>FndToolStripMenuItem</b> that represents the duplicated menu item.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.GetContextMenuStrip">
            <summary>
            Locate FndContextMenuStrip if this item is hosted on such control.
            </summary>
            <returns>Parent context menu if the itme is hosted on such control</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.ExecuteCommand(System.EventArgs)">
            <summary>
            Execute a connected command 
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.ClonedItem">
            <summary>
            Quick and dirty fix for problems with Plugins getting their MenuItems disposed /JAROSE 2010-08-30  // TODO: Redesign
            FRAMEWORK INTERNAL - NOT TO BE USED
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.Text">
            <summary>
            Gets or sets a value indicating the caption of the menu item.
            Returns: The text caption of the menu item.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.Enabled">
            <summary>
            Gets or sets a value indicating if the menu item is selectable.
            Returns: Boolean, true if item in enabled and selectable.
            Overridden to make sub-items in dropdowns disabled when parent is disabled.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.Index">
            <summary>
            Gets the position of this menu item within its parent menu.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.IsStandardToolStripItem">
            <summary>
            This property is used to differentiate standard feature toolstrip items from the rest.
            We need to do this since we do not want the feature developers to change the visibility of 
            standard feature toolstrip items. Developers can only control the Enabled state of these items.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.PreDefinedLocationId">
            <summary>
            Id of a pre defined location where the command should be located. 
            The predefined location is defined in the base class for a feature. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.Command">
            <summary>
            Gets or sets the FndCommand component that is interacting with the FndMenuItem. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.ContextMenuSection">
            <summary>
            Gets or Sets section which the MenuItem is placed in a context menu. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripMenuItem.RelativeIndex">
            <summary>
            Gets or sets the index of the menu item relative to other commands. The items will 
            be displayed in order of this index.
            </summary>
            <value>
            The index of the menu item...
            Leave -1 if the index can be placed anywhere...
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolStripSeparator">
            <summary>
            Represents a line used to group items of a <see cref="T:Ifs.Fnd.Windows.Forms.FrameworkControls.FndToolStrip"></see> or the drop-down items of a <see cref="T:Ifs.Fnd.Windows.Forms.FrameworkControls.FndMenuStrip"></see> or <see cref="T:Ifs.Fnd.Windows.Forms.FndContextMenuStrip"></see> or other <see cref="T:Ifs.Fnd.Windows.Forms.FrameworkControls.FndToolStripDropDown"></see> control.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripSeparator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripSeparator"></see> class. 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripSeparator.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripSeparator"></see> class.
            </summary>
            <param name="container">component collection of parent</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripSeparator.CloneMenu">
            <summary>
            Creates a copy of this <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripSeparator"/> item.
            </summary>
            <returns>A <b>FndToolStripSeparator</b> that represents the duplicated item.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripSeparator.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>An instance of <b>FndToolStripSeparator</b></returns>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolStripSeparator.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripSeparator.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripSeparator.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSeparator.ClonedItem">
            <summary>
            Quick and dirty fix for problems with Plugins getting their MenuItems disposed /JAROSE 2010-08-30  // TODO: Redesign
            FRAMEWORK INTERNAL - NOT TO BE USED
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSeparator.Index">
            <summary>
            Gets the position of this menu item within its parent menu.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSeparator.Command">
            <summary>
            Gets or sets the <see cref="T:Ifs.Fnd.Windows.Forms.FndCommand"/> associated with this <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripSeparator"/>.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSeparator.PreDefinedLocationId">
            <summary>
            Id of a predefined location where the command should be located. 
            The predefined location is defined in the base class for a feature. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSeparator.ContextMenuSection">
            <summary>
            Gets or Sets section which the separator is placed in a context menu. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSeparator.RelativeIndex">
            <summary>
            Gets or sets the index of the menu item relative to other commands. The items will 
            be displayed in order of this index.
            </summary>
            <value>
            The index of the menu item...
            Leave -1 if the index can be placed anywhere...
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSeparator.ToolStripSection">
            <summary>
            Gets or Sets section on which the item is placed in owner toolstrip. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSeparator.PlacementIndex">
            <summary>
            Gets or sets the position on the owner toolstrip to insert the item. The items will 
            be displayed in order of this index.
            </summary>
            <value>
            The index of the toolstrip item.
            Leave -1 if the item should be added at the end.
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton">
            <summary>
            Represents a combination of a standard button on the left and a drop-down button on the right, or the other way around if the value of <see cref="T:System.Windows.Forms.RightToLeft"></see> is Yes.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton"></see> class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton"></see> class.
            </summary>
            <param name="container">component collection of parent</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse move.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.OnMouseLeave(System.EventArgs)">
            <summary>
            Handle mouse leave.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.OnButtonClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ToolStripSplitButton.ButtonClick"/> event. 
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.OnDropDownShow(System.EventArgs)">
            <summary>
            Inquire the items in the drop down when the menu is opened.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.ShowDropDown">
            <summary>
            Overrides <see cref="M:System.Windows.Forms.ToolStripDropDownItem.ShowDropDown"/>.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.OnCheckedChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.CheckedChanged"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data. </param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.OnCheckStateChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.CheckStateChanged"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data. </param>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.CheckedChanged">
            <summary>
            Occurs when the value of the <see cref="P:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.Checked"></see> property changes.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.CheckStateChanged">
            <summary>
            Occurs when the value of the <see cref="P:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.CheckState"></see> property changes.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.Checked">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton"></see> is pressed or not pressed.
            </summary>
            <returns>true if the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton"></see> is pressed in or not pressed in; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.CheckOnClick">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton"></see> should automatically appear pressed in and not pressed in when clicked.
            </summary>
            <returns>true if the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton"></see> should automatically appear pressed in and not pressed in when clicked; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.CheckState">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton"></see> is in the pressed or not pressed state by default, or is in an indeterminate state.
            </summary>
            <returns>One of the <see cref="T:System.Windows.Forms.CheckState"></see> values. The default is Unchecked.</returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:System.Windows.Forms.CheckState"></see> values. </exception>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.ArrowType">
            <summary>
            Gets or sets the drop down arrow type.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.ToolTipText">
            <summary>
            Gets or sets the tool tip text of the FndToolStripSplitButton. This property is not visible 
            in the designer, since it's overriden by the commands tool tip. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.Text">
            <summary>
            Gets or sets the text that is to be displayed on the item. Overrides localization from base class.
            If the text displayed on the the item is traslatable then in order for translation to work a command must 
            be connected to the item where the commands caption property is set to the text that should be translated.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.IgnoreCommandText">
            <summary>
            Gets or sets a value indicating whether the text propagating from the command should be ignored.
            </summary>
            <returns>true if the the text propagating from the command is ignored; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.IgnoreCommandVisibleChange">
            <summary>
            Gets or sets a value indicating whether the change of Visible property of the associated command 
            should be ignored in the corresponding event handler.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.IsStandardToolStripItem">
            <summary>
            This property is used to differentiate standard feature toolstrip items from the rest.
            We need to do this since we do not want the feature developers to change the visibility of 
            standard feature toolstrip items. Developers can only control the Enabled state of these items.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.ArrowSelected">
            <summary>
            Gets whether the mouse is currently hovering over the arrow
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.Command">
            <summary>
            Gets or sets the FndCommand component that is interacting with the FndToolStripSplitButton. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.PreDefinedLocationId">
            <summary>
            Id of a pre defined location where the command should be located. 
            The predefined location is defined in the base class for a feature. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.ToolStripSection">
            <summary>
            Gets or Sets section on which the item is placed in owner toolstrip. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripSplitButton.PlacementIndex">
            <summary>
            Gets or sets the position on the owner toolstrip to insert the item. The items will 
            be displayed in order of this index.
            </summary>
            <value>
            The index of the toolstrip item.
            Leave -1 if the item should be added at the end.
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolStripButtonArrowType">
            <summary>
            Indicates the type the drop down arrow of a <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripButton"/>.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolStripButtonArrowType.Default">
            <summary>
            Default drop down arrow, which points downwards sitting adjacent to the button.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolStripButtonArrowType.SouthWest">
            <summary>
            Drop down arrow rendered on bottom-left corner of the button, pointing south-west.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolStripButtonArrowType.SouthEast">
            <summary>
            Drop down arrow rendered on bottom-right corner of the button, pointing south-east.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolStripStatusLabel">
            <summary>
            Represents a panel in a <see cref="T:Ifs.Fnd.Windows.Forms.FrameworkControls.FndStatusStrip"></see> control.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripStatusLabel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripStatusLabel"></see> class. 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripStatusLabel.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripStatusLabel"></see> class. 
            </summary>
            <param name="container">component collection of parent</param>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolStripStatusLabel.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripStatusLabel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripStatusLabel.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndToolStripTextBox">
            <summary>
            Represents a text box in a <see cref="T:Ifs.Fnd.Windows.Forms.FrameworkControls.ToolStrip"></see> that allows the user to enter text.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripTextBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripTextBox"></see> class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripTextBox.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Ifs.Fnd.Windows.Forms.FndToolStripTextBox"></see> class.
            </summary>
            <param name="container">component collection of parent</param>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndToolStripTextBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripTextBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndToolStripTextBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripTextBox.Command">
            <summary>
            This property is not relevant to this class. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripTextBox.PreDefinedLocationId">
            <summary>
            Id of a pre defined location where the command should be located. 
            The predefined location is defined in the base class for a feature. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripTextBox.ToolStripSection">
            <summary>
            Gets or Sets section on which the item is placed in owner toolstrip. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndToolStripTextBox.PlacementIndex">
            <summary>
            Gets or sets the position on the owner toolstrip to insert the item. The items will 
            be displayed in order of this index.
            </summary>
            <value>
            The index of the toolstrip item.
            Leave -1 if the item should be added at the end.
            </value>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.ToolStripMenuItemTextHelper">
            <summary>
            Provides utility operations to get ToolStrip menu text
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.ToolStripMenuItemTextHelper.GetShortcutText(System.Windows.Forms.ToolStripMenuItem)">
            <summary>
            Get the shortcut text for a menu item
            </summary>
            <param name="item">The menu item</param>
            <returns>The shortcut text</returns>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndContextMenuStrip">
            <summary>
            Represents a shortcut menu.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.IFndContextMenuStrip">
            <summary>
            This interface is implemented by FndContextMenuStrip and provides additional APIs
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.IFndContextMenuStrip.InitializeContextMenu">
            <summary>
            Provide functionality to initialize a context menu when it opens, such as InquireCommands etc.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.contextMenuitemsShown">
            <summary>
            Used to decide whether to show the context menu or to cancel it if no items are available.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.#ctor">
            <summary>
            Initializes a new instance of the <b>FndContextMenuStrip</b> class.
            Warning: Use the constructor FndContextMenuStrip(IContainer container) instead!
            If you use this constructor, you must manually call Dispose() on this object.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <b>FndContextMenuStrip</b> class and associates it with the specified container.
            </summary>
            <param name="container">The container to add this component to</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.DisposeCachedContextMenuStrips(System.Boolean)">
            <summary>
            Internal Foundation1 framework use only. Do NOT call.
            Disposes cached instances of FndContextMenuStrips per Thread.
            Needed since FndContextMenuStrip had a ctor without IContainer as parameter
            and there is a lot of serialized app code using the ctor() which will
            cause the instances to not be disposed. (causing mem leaks)
            Remove this method when all these errors has been corrected.        
            </summary>
            <param name="disposing">True to dispose</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.OnDoIncludeStandardContextMenu">
            <summary>
            Raises the <see cref="E:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.DoIncludeStandardContextMenu"/> event.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.MergeMenu(System.Windows.Forms.ToolStripDropDownMenu)">
            <summary>
            Merges the current menu with the specified <see cref="T:System.Windows.Forms.ToolStripDropDownMenu"/>
            </summary>
            <param name="menuSrc">The <see cref="T:System.Windows.Forms.ToolStripDropDownMenu"/> to be merged.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.Clone">
            <summary>
            Create a clone of this Context menu strip, along with all items in it.
            </summary>
            <returns>A clone of this context menu strip and its items.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.RefreshItems">
            <summary>
            refresh all the items in context menus in FndListView,FndTreeView,FndIndexList, ect..
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.InquireCommands(System.Windows.Forms.ToolStripItemCollection,System.Object,System.EventArgs)">
            <summary>
            Inquire commands bound to the ToolStripItems in the list.
            This method is normally called when the FndContextMenuStrip is opened.
            </summary>
            <param name="items">ToolStripItemCollection with items that should be inquired</param>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.ShowHideDisabledItems(System.Windows.Forms.ToolStripItemCollection)">
            <summary>
            Show or Hide disabled context menu items depending on the user profile entry
            </summary>
            <param name="items">list of menu items</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.ShowHideDisabledItems(System.Windows.Forms.ToolStripItemCollection,System.Boolean)">
            <summary>
            Show or Hide disabled context menu items depending on the user profile entry
            </summary>
            <param name="items">list of menu items</param>
            <param name="hideDisabledItems"><code>true</code> to hide disabled items; <code>false</code> otherwise.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.InquireSubItems(System.Windows.Forms.ToolStripMenuItem)">
            <summary>
            Inquire and set the visibilty of the sub items of a context menu item
            </summary>
            <param name="menuItem"> the parent menu item</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.ExecuteCommand(System.Windows.Forms.ToolStripMenuItem,System.EventArgs)">
            <summary>
            Execute commands is called when a menu item is to be executed. This is for items bound to FndCommand
            </summary>
            <param name="menuItem"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.OnOpened(System.EventArgs)">
            <summary>
            Overrides <b>System.Windows.Forms.ContextMenuStrip.OnOpened</b> method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.OnOpening(System.ComponentModel.CancelEventArgs)">
            <summary>
            Overrides <b>System.Windows.Forms.ContextMenuStrip.OnOpening</b> method.
            </summary>
            <param name="e">An <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.MoveItemBefore(System.Windows.Forms.ToolStripItem,System.Windows.Forms.ToolStripItem)">
            <summary>
            Removes the menu item from its current location and adds it again placed just before the referenced menu item.
            </summary>
            <param name="tsItemToMove">The menu item to move</param>
            <param name="tsItemToMoveBefore">The referenced menu item to place the moved item before</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.MoveItemsBefore(Ifs.Fnd.Windows.Forms.FndContextMenuStrip,System.Windows.Forms.ToolStripItem)">
            <summary>
            Removes the menu items defined in the merged menu from their current locations and adds them all again
            placed just before the defined menu item.
            </summary>
            <param name="contextMenuItemsToMove">The menu containing all menu items that should be moved</param>
            <param name="tsItemToMoveBefore">The referenced menu item to place the moved items before</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.MoveItemsBefore(System.Windows.Forms.ToolStripItem[],System.Windows.Forms.ToolStripItem)">
            <summary>
            Removes the menu items from its current location and adds it again placed just before the referenced menu item.
            </summary>
            <param name="tsItemsToMove">The menu items to move</param>
            <param name="tsItemToMoveBefore">The referenced menu item to place the moved menu items before</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.MoveItemAfter(System.Windows.Forms.ToolStripItem,System.Windows.Forms.ToolStripItem)">
            <summary>
            Removes the menu item from its current location and adds it again placed just after the referenced menu item.
            </summary>
            <param name="tsItemToMove">The menu item to move</param>
            <param name="tsItemToMoveAfter">The referenced menu item to place the moved item after</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.MoveItemsAfter(Ifs.Fnd.Windows.Forms.FndContextMenuStrip,System.Windows.Forms.ToolStripItem)">
            <summary>
            Removes the menu items defined in the merged menu from their current locations and adds them all again
            placed just after the defined menu item.
            </summary>
            <param name="contextMenuItemsToMove">The menu containing all menu items that should be moved</param>
            <param name="tsItemToMoveAfter">The referenced menu item to place the moved items after</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.MoveItemsAfter(System.Windows.Forms.ToolStripItem[],System.Windows.Forms.ToolStripItem)">
            <summary>
            Removes the menu items from its current location and adds it again placed just after the referenced menu item.
            </summary>
            <param name="tsItemsToMove">The menu items to move</param>
            <param name="tsItemToMoveAfter">The referenced menu item to place the moved menu items after</param>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.IncludeStandardContextMenu">
            <summary>
            Get or set this value if Standard context menu should be included or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.StandardContextMenuIncluded">
            <summary>
            Gets or sets a property stating whether the standard context menu was included.
            </summary>
            <value>
            True if the standard context menu was included, False otherwise.
            </value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndContextMenuStrip.AlwaysShowDisabledItemsInternal">
            <summary>
            Gets or sets whether disabled items of this <see cref="T:Ifs.Fnd.Windows.Forms.FndContextMenuStrip"/> are <strong>always</strong> shown.
            </summary>
            <remarks>
            Default behavior of the <see cref="T:Ifs.Fnd.Windows.Forms.FndContextMenuStrip"/> is to use a user profile setting 
            (<see cref="F:Ifs.Fnd.Explorer.Interfaces.FndProfileEntryId.HideDisabledMenuItems"/>) to decide whether to show or hide disabled menu items.
            There are places where it is necessary to bypass the user's preference when rendering some FW menus.
            </remarks>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTreeNode">
            <summary>
            Represents a FndTreeNode of a FndTreeView.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.#ctor">
            <summary>
            Initializes a new instance of the FndTreeNode class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FndTreeNode class with the specified label text.
            </summary>
            <param name="text">The label Text of the new tree node.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.#ctor(System.String,Ifs.Fnd.Windows.Forms.FndTreeChildNodeStyle)">
            <summary>
            Initializes a new instance of the FndTreeNode class with the specified label text and node style.
            </summary>
            <param name="text">The label Text of the new tree node.</param>
            <param name="nodeStyle">The node style of the new tree node.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.#ctor(System.String,Ifs.Fnd.Windows.Forms.FndTreeNode[])">
            <summary>
            Initializes a new instance of the FndTreeNode class with the specified label text and child tree nodes.
            </summary>
            <param name="text">The label Text of the new tree node.</param>
            <param name="children">An array of child TreeNode objects.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.#ctor(System.String,Ifs.Fnd.Windows.Forms.FndTreeChildNodeStyle,Ifs.Fnd.Windows.Forms.FndTreeNode[])">
            <summary>
            Initializes a new instance of the FndTreeNode class with the specified label text, node style and child tree nodes.
            </summary>
            <param name="text">The label Text of the new tree node.</param>
            <param name="nodeStyle">The node style of the new tree node.</param>
            <param name="children">An array of child TreeNode objects.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the FndTreeNode class with the specified label text and images to display when the tree node is in a selected and unselected state.
            </summary>
            <param name="text">The label Text of the new tree node.</param>
            <param name="imageIndex">The index value of Image to display when the tree node is unselected.</param>
            <param name="selectedImageIndex">The index value of Image to display when the tree node is selected.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.#ctor(System.String,System.Int32,System.Int32,Ifs.Fnd.Windows.Forms.FndTreeChildNodeStyle)">
            <summary>
            Initializes a new instance of the FndTreeNode class with the specified label text, images to display when the tree node is in a selected and unselected state and node style.
            </summary>
            <param name="text">The label Text of the new tree node.</param>
            <param name="imageIndex">The index value of Image to display when the tree node is unselected.</param>
            <param name="selectedImageIndex">The index value of Image to display when the tree node is selected.</param>
            <param name="nodeStyle">The node style of the new tree node.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.#ctor(System.String,System.Int32,System.Int32,Ifs.Fnd.Windows.Forms.FndTreeNode[])">
            <summary>
            Initializes a new instance of the FndTreeNode class with the specified label text, child tree nodes, and images to display when the tree node is in a selected and unselected state.
            </summary>
            <param name="text">The label Text of the new tree node.</param>
            <param name="imageIndex">The index value of Image to display when the tree node is unselected.</param>
            <param name="selectedImageIndex">The index value of Image to display when the tree node is selected.</param>
            <param name="children">An array of child FndTreeNode objects.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.#ctor(System.String,System.Int32,System.Int32,Ifs.Fnd.Windows.Forms.FndTreeChildNodeStyle,Ifs.Fnd.Windows.Forms.FndTreeNode[])">
            <summary>
            Initializes a new instance of the FndTreeNode class with the specified label text, child tree nodes, images to display when the tree node is in a selected and unselected state and node style.
            </summary>
            <param name="text">The label Text of the new tree node.</param>
            <param name="imageIndex">The index value of Image to display when the tree node is unselected.</param>
            <param name="selectedImageIndex">The index value of Image to display when the tree node is selected.</param>
            <param name="nodeStyle">The node style of the new tree node.</param>
            <param name="children">An array of child FndTreeNode objects.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.GetNodeCount(System.Boolean)">
            <summary>
            Returns the number of child tree nodes.
            </summary>
            <param name="includeSubTrees"><b>true</b> if the resulting count includes all tree nodes indirectly rooted at this tree node; otherwise, <b>false</b>.</param>
            <returns>The number of child tree nodes assigned to the Nodes collection.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.Collapse">
            <summary>
            Collapses the tree node.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.Collapse(System.Boolean)">
            <summary>
            Collapses the tree node.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.Expand">
            <summary>
            Expands the tree node.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.Expand(System.Boolean)">
            <summary>
            Expands the tree node.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.ExpandAll">
            <summary>
            Expands all the child tree nodes.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.CollapseAll">
            <summary>
            Collapse all the child tree nodes.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.Remove">
            <summary>
            Removes the current tree node from the tree view control.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.Toggle">
            <summary>
            Toggles the tree node to either the expanded or collapsed state.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.EnsureVisible">
            <summary>
            Ensures that the tree node is visible, expanding tree nodes and scrolling the tree view control as necessary.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.EnsureVisibleTopMost">
            <summary>
            Sets the tree node as the top most node, making it visible, expanding tree nodes and scrolling the tree view control as necessary.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.BeginEdit">
            <summary>
            Initiates the editing of the tree node label.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.EndEdit(System.Boolean)">
            <summary>
            Ends the editing of the tree node label.
            </summary>
            <param name="cancel"><b>true</b> if the editing of the tree node label text was canceled without being saved; otherwise, <b>false</b>. </param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the TextChanged event
            </summary>
            <param name="e">Event Arguments.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.Clone">
            <summary>
            Creates a duplicate of this Item.
            </summary>
            <returns>A copy of the current FndTreeNode.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.Dispose">
            <summary>
            Disposes the current instance.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNode.Dispose(System.Boolean)">
            <summary>
            Disposes the resources used by this component
            </summary>
            <param name="disposing">Free managed resources</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.CheckOnClick">
            <summary>
            Gets or sets a value indicating whether the check box or the radio button should be toggled when a node is selected from a mouse click.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.IsVisible">
            <summary>
            Gets a value indicating whether the tree node is visible.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.IsLastNode">
            <summary>
            Gets a value indicating whether the tree node is last.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.Bounds">
            <summary>
            Gets the bounds of the tree node.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.IsEditing">
            <summary>
            Gets a value indicating whether the tree node is in an editable state.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.PrevVisibleNode">
            <summary>
            Gets the previous visible tree node.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.NextVisibleNode">
            <summary>
            Gets the next visible tree node.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.IsExpanded">
            <summary>
            Gets a value indicating whether the tree node is in the expanded state.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.IsSelected">
            <summary>
            Gets a value indicating whether the tree node is in the selected state.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.Checked">
            <summary>
            Gets or sets a value indicating whether the tree node is in a checked state.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.ShowPlusMinus">
            <summary>
            Gets or Sets a value indicating whether the plus or minus sign is shown or not ifor a FndTreeNode.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.ToolTip">
            <summary>
            Gets or Sets a string which should be displayed as the tooltip per node.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.FirstNode">
            <summary>
            Gets the first child tree node in the tree node collection.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.LastNode">
            <summary>
            Gets the last child tree node.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.NextNode">
            <summary>
            Gets the next sibling tree node.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.PrevNode">
            <summary>
            Gets the previous sibling tree node.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.ContextMenuStrip">
            <summary>
            Gets or Sets a ContextMenu which should be displayed per node.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.NodeStyle">
            <summary>
            Gets or Sets the FndTreeNode Style.
            </summary>
            <value>One of the FndTreeNode value's in FndTreeNodeStyle enumeration. The default is set to None.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.FndTreeView">
            <summary>
            Gets or Sets the Owner (FndTreeView) of the FndTreeViewNode.
            </summary>
            <value>A FndTreeView that contains the FndTreeNode.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.Tag">
            <summary>
            Gets or sets the tag object of a FndTreeNode.
            </summary>
            <value>An object that contains information that is associated with the item.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.Text">
            <summary>
            Gets or sets the text content of the FndTreeNode.
            </summary>
            <value>The text to display for the item.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.Nodes">
            <summary>
            Gets the collection of FndTreeNode objects assigned to the current tree node.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.Parent">
            <summary>
            Gets the parent tree node of the current tree node.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.ImageIndex">
            <summary>
            Gets or sets the image list index value of the image displayed when the tree node is in the unselected state.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.SelectedImageIndex">
            <summary>
            Gets or sets the image list index value of the image that is displayed when the tree node is in the selected state.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.Index">
            <summary>
            Gets the position of the tree node in the tree node collection.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.IsChecked">
            <summary>
            Gets a value indicating whether the tree node is in an checked state.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.NodeFont">
            <summary>
            Gets or sets the font used to display the text on the tree node's label.
            </summary>
            <value>The Font used to display the text on the tree node's label.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.ForeColor">
            <summary>
            Gets or sets the foreground color of the tree node.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.BackColor">
            <summary>
            Gets or sets the background color of the tree node.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNode.FullPath">
            <summary>
            Gets the path from the root tree node to the current tree node.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTreeChildNodeStyle">
            <summary>
            Specifies the node styles in FndTreeNode
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndTreeChildNodeStyle.CheckBox">
            <summary>
            CheckBox
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndTreeChildNodeStyle.RadioButton">
            <summary>
            RadioButton
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndTreeChildNodeStyle.UseTreeView">
            <summary>
            Uses the Parent's style
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndTreeChildNodeStyle.None">
            <summary>
            Default
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTreeChildPlusMinus">
            <summary>
            Specifies the node PlusMinus settings in FndTreeNode
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndTreeChildPlusMinus.True">
            <summary>
            Show Plus/Minus sign
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndTreeChildPlusMinus.False">
            <summary>
            Do not show Plus/Minus sign
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndTreeChildPlusMinus.UseFndTreeView">
            <summary>
            Uses the Parent's style
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection">
            <summary>
            Represents a collection of FndTreeNode objects.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection.Add(Ifs.Fnd.Windows.Forms.FndTreeNode)">
            <summary>
            Adds an object to the end of the <b>FndTreeNodeCollection</b>.
            </summary>
            <value>The item to be added to the end of the CollectionBase.</value>
            <returns>The CollectionBase index at which the value has been added</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection.Add(System.String)">
            <summary>
            Adds a new tree node to the end of the current tree node collection with the specified label text.
            </summary>
            <param name="nodeText">The label text displayed by the TreeNode.</param>
            <returns>A TreeNode that represents the tree node being added to the collection.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection.Add(System.String,Ifs.Fnd.Windows.Forms.FndTreeChildNodeStyle)">
            <summary>
            Adds a new tree node to the end of the current tree node collection with the specified label text and node style.
            </summary>
            <param name="nodeText">The label text displayed by the TreeNode.</param>
            <param name="nodeStyle">The node style of the new tree node.</param>
            <returns>A TreeNode that represents the tree node being added to the collection.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection.IndexOf(Ifs.Fnd.Windows.Forms.FndTreeNode)">
            <summary>
            Overloaded. Returns the zero-based index of the first occurrence of a value in the <b>FndTreeNodeCollection</b> or in a portion of it.
            </summary>
            <param name="value">The Object to locate in the CollectionBase</param>
            <returns>The zero-based index of the first occurrence of value within the entire CollectionBase, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection.Insert(System.Int32,Ifs.Fnd.Windows.Forms.FndTreeNode)">
            <summary>
            Inserts an element into the <b>FndTreeNodeCollection</b> at the specified index.
            </summary>
            <param name="index">The zero-based index at which value should be inserted.</param>
            <param name="value">The Object to insert.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection.Remove(Ifs.Fnd.Windows.Forms.FndTreeNode)">
            <summary>
            Removes the first occurrence of a specific object from the <b>FndTreeNodeCollection</b>.
            </summary>
            <param name="value">The Object to remove from the CollectionBase.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection.Contains(Ifs.Fnd.Windows.Forms.FndTreeNode)">
            <summary>
            Determines whether an element is in the <b>FndTreeNodeCollection</b>.
            </summary>
            <param name="value">The Object to locate in the CollectionBase.</param>
            <returns>true if the CollectionBase contains the specified value; otherwise, false.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection.AddRange(Ifs.Fnd.Windows.Forms.FndTreeNodeCollection)">
            <summary>
            Adds the elements of an ICollection to the end of the <b>FndTreeNodeCollection</b>.
            </summary>
            <param name="nodes">A collection of FndTreeNode to the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection.AddRange(Ifs.Fnd.Windows.Forms.FndTreeNode[])">
            <summary>
            Adds the elements of an Array of columns to the end of the <b>FndTreeNodeCollection</b>.
            </summary>
            <param name="nodes">An array of FndTreeNode objects to add to the collection.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection.CopyTo(Ifs.Fnd.Windows.Forms.FndTreeNode[],System.Int32)">
            <summary>
            Overloaded. Copies the <b>FndTreeNodeCollection</b> or a portion of it to a one-dimensional array.
            </summary>
            <param name="item">The destination array.</param>
            <param name="index">The index in the destination array at which storing begins.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection.CopyTo(Ifs.Fnd.Windows.Forms.FndTreeNode[])">
            <summary>
            Overloaded. Copies the <b>FndTreeNodeCollection</b> or a portion of it to a one-dimensional array.
            </summary>
            <param name="item">The destination array.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            OnInsert.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the CollectionBase instance.
            </summary>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="value">The new value of the element at index.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection.OnClear">
            <summary>
            OnClear.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection.OnClearComplete">
            <summary>
            Performs additional custom processes after clearing the contents of the CollectionBase instance.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing an element from the CollectionBase instance.
            </summary>
            <param name="index">The zero-based index at which value can be found.</param>
            <param name="value">The value of the element to remove from index.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection.Item(System.Int32)">
            <summary>
            Gets or Sets the Owner of FndTreeNodeCollection.
            </summary>
            <param name="index">The zero-based index of the element to get or set. </param>
            <value>A FndTreeNode representing the Item located at the specified index within the collection.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeNodeCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTreeNodeCollectionEditor">
            <summary>
            Provides a user interface that can edit Node Collection at design time.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollectionEditor.#ctor">
            <summary>
             Initializes a new instance FndTreeNodeCollectionEditor class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollectionEditor.CreateCollectionForm">
            <summary>
            Creates a new form to display and edit the current collection.
            </summary>
            <returns>An instance of CollectionEditor.CollectionForm to provide as the user interface for editing the collection.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeCollectionEditor.FndTreeNodeCollectionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTreeNodeConverter">
            <summary>
            Provides a type converter to convert FndTreeNode to and from various other representations.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overloaded. Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="destinationType">A Type that represents the type you want to convert to.</param>
            <returns><b>true</b> if this converter can perform the conversion; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeNodeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overloaded. Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">A System.Globalization.CultureInfo object that represents information about a culture such as language, calendar system, and so on.</param>
            <param name="value">A System.Object that represents the source array of strings to convert from.</param>
            <param name="destinationType">A System.Type object that represents the data type to convert to. This parameter must be set to the string data type.</param>
            <returns>A System.Object that represents a string containing a list of font names.</returns>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTreeView">
            <summary>
            Provides a base class for IFS Windows Forms FndTreeView control. 
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.#ctor">
            <summary>
            Creates a new instance of the <b>FndTreeViewInternal</b> class.
            </summary>
            <remarks>Do not directly create an object from the <b>FndTreeViewInternal</b> class.
            Instead, create FndTreeView from <see cref="T:Ifs.Fnd.Windows.Forms.FndTreeView"/> class.</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.Sort">
            <summary>
            Sorts all the nodes.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.Sort(Ifs.Fnd.Windows.Forms.FndTreeNodeCollection)">
            <summary>
            Sorts the child nodes.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.ExpandAll">
            <summary>
            Expands all the tree nodes.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.CollapseAll">
            <summary>
            Collapses all the tree nodes.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.GetNodeAt(System.Drawing.Point)">
            <summary>
            Retrieves the tree node that is at the specified point.
            </summary>
            <param name="pt">The Point to evaluate and retrieve the node from.</param>
            <returns>The FndTreeNode at the specified point, in tree view coordinates.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.GetNodeAt(System.Int32,System.Int32)">
            <summary>
            Retrieves the tree node at the point with the specified coordinates.
            </summary>
            <param name="x">The X position to evaluate and retrieve the node from.</param>
            <param name="y">The Y position to evaluate and retrieve the node from.</param>
            <returns>The FndTreeNode at the specified location, in tree view coordinates.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.GetNodeCount(System.Boolean)">
            <summary>
            Retrieves the number of tree nodes, optionally including those in all subtrees, assigned to the tree view control.
            </summary>
            <param name="includeSubTrees"><b>true</b>true to count the TreeNode items that the subtrees contain; otherwise, <b>false</b>.</param>
            <returns>The number of tree nodes, optionally including those in all subtrees, assigned to the tree view control.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.BeginUpdate">
            <summary>
            Disables any redrawing of the tree view.
            </summary>
            <remarks>The BeginUpdate method prevents the control from painting until the EndUpdate method is called.</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.EndUpdate">
            <summary>
            Enables the redrawing of the tree view.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel"/> event.
            </summary>
            <param name="e">An MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.OnDoubleClick(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)"/>
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">An MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave"/> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseEnter"/> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">An MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="e">An MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)"/>
            </summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.LostFocus"/> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.GotFocus"/> event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)"/>
            </summary>
            <param name="keyData">One of the Keys values.</param>
            <returns><b>true</b> if the specified key is a regular input key; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"/> event.
            </summary>
            <param name="e">An KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndTreeView.NodeSelectionChanged">
            <summary>
            Occurs after a tree node is selected that is not the same as the previous selected node. 
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndTreeView.AfterCheck">
            <summary>
            Occurs after the tree node check box or radiobutton is checked.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndTreeView.AfterCollapse">
            <summary>
            Occurs after the tree node is collapsed.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndTreeView.AfterExpand">
            <summary>
            Occurs after the tree node is expanded.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndTreeView.AfterLabelEdit">
            <summary>
            Occurs after the tree node label text is edited.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndTreeView.AfterSelect">
            <summary>
            Occurs after the tree node is selected.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndTreeView.BeforeCheck">
            <summary>
            Occurs before the tree node check box or radiobutton is checked.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndTreeView.BeforeCollapse">
            <summary>
            Occurs before the tree node is collapsed.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndTreeView.BeforeExpand">
            <summary>
            Occurs before the tree node is expanded.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndTreeView.BeforeLabelEdit">
            <summary>
            Occurs before the tree node label text is edited.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndTreeView.BeforeSelect">
            <summary>
            Occurs before the tree node is selected.
            </summary>
        </member>
        <member name="E:Ifs.Fnd.Windows.Forms.FndTreeView.ItemDrag">
            <summary>
            Occurs when an item is dragged into the FndTreeView control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.ImageList">
            <summary>
            Gets or sets the ImageList that contains the Image objects used by the tree nodes.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.ImageIndex">
            <summary>
            Gets or sets the image-list index value of the default image that is displayed by the tree nodes.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.SelectedImageIndex">
            <summary>
            Gets or sets the image-list index value of the default image that is displayed by the tree nodes.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.ImageListSelection">
            <summary>
            Gets or sets the ImageList to use when displaying checked, unchecked, selected, and unselected.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.ImageListExpand">
            <summary>
            Gets or sets the ImageList to use when displaying expanded sign and notexpanded sign.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.ImageIndexChecked">
            <summary>
            Gets or sets the image list index value of the image to be displayed for checked.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.ImageIndexUnchecked">
            <summary>
            Gets or sets the image list index value of the image to be displayed for unchecked.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.ImageIndexSelected">
            <summary>
            Gets or sets the image list index value of the image to be displayed when a node is selected.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.ImageIndexUnselected">
            <summary>
            Gets or sets the image list index value of the image to be displayed for unselected.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.ImageIndexExpanded">
            <summary>
            Gets or sets the image list index value of the image to be displayed for expanded sign.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.ImageIndexNotExpanded">
            <summary>
            Gets or sets the image list index value of the image to be displayed for not expanded sign.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.FullRowSelect">
            <summary>
            Gets or sets a value indicating whether the selection highlight spans the width of the tree view control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.HideSelection">
            <summary>
            Gets or sets a value indicating whether the selected tree node remains highlighted even when the tree view has lost the focus.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.HotTracking">
            <summary>
            Gets or sets a value indicating whether a tree node label takes on the appearance of a hyperlink as the mouse pointer passes over it.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.Indent">
            <summary>
            Gets or sets the distance to indent each of the child tree node levels.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.ItemHeight">
            <summary>
            Gets or sets the height of each tree node in the tree view control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.LabelEdit">
            <summary>
            Gets or sets a value indicating whether the label text of the tree nodes can be edited.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.PathSeparator">
            <summary>
            Gets or sets the delimiter string that the tree node path uses.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.Scrollable">
            <summary>
            Gets or sets a value indicating whether the tree view control displays scroll bars when they are needed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.AutoScroll">
            <summary>
            Gets or sets a value indicating whether the tree view control displays scroll bars when they are needed.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.ShowLines">
            <summary>
            Gets or sets a value indicating whether lines are drawn between tree nodes in the tree view control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.ShowPlusMinus">
            <summary>
            Gets or sets a value indicating whether plus-sign (+) and minus-sign (-) buttons are displayed next to tree nodes that contain child tree nodes.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.ShowRootLines">
            <summary>
            Gets or sets a value indicating whether lines are drawn between the tree nodes that are at the root of the tree view.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.Sorted">
            <summary>
            Gets or sets a value indicating whether the tree nodes in the tree view are sorted.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.Nodes">
            <summary>
            Gets the collection of tree nodes that are assigned to the tree view control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.NodeStyle">
            <summary>
            Gets or Sets the FndTreeNode Style.
            </summary>
            <value>One of the FndTreeNode value's in FndTreeNodeStyle enumeration. The default is set to None.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.SelectedNode">
            <summary>
            Gets or sets the tree node that is currently selected in the tree view control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.TopNode">
            <summary>
            Gets the first fully-visible tree node in the tree view control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
            <value>The Font object applied to the text displayed by the control. The default is the value of DefaultFont property.</value>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.BackColor">
            <summary>
            Gets or sets the background color for the control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.BorderStyle">
            <summary>
            Gets or sets the border style of the tree view control.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.ToolTipInitialDelay">
            <summary>
            Gets or sets the time that passes before the ToolTip appears in the FndTreeView.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.DelayedSelectionChanged">
            <summary>
            Gets or sets a value indicating whether selection changed event is delayed or not.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.SelectionChangedDelay">
            <summary>
            Gets or sets the time that passes before the NodeSelectionChanged Event is being fired in the FndTreeView.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeView.CreateParams">
            <summary>
            CreateParams.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTreeView.FndTreeViewEventHandler">
            <summary>
            Represents the method that will handle the AfterCheck, AfterCollapse, AfterExpand, or AfterSelect event of a FndTreeView.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A FndTreeViewEventArgs that contains the event data.</param>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTreeView.FndTreeViewCancelEventHandler">
            <summary>
            Represents the method that will handle the BeforeCheck, BeforeCollapse, BeforeExpand, or BeforeSelect event of a FndTreeView.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A FndTreeViewCancelEventHandler that contains the event data.</param>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTreeView.FndTreeViewNodeLabelEditEventHandler">
            <summary>
            Represents the method that will handle the BeforeLabelEdit and AfterLabelEdit events of a FndTreeView control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A FndTreeViewNodeLabelEditEventArgs that contains the event data.</param>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTreeNodeStyle">
            <summary>
            Specifies the node styles in FndTreeView
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndTreeNodeStyle.CheckBox">
            <summary>
            CheckBox
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndTreeNodeStyle.RadioButton">
            <summary>
            RadioButton
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndTreeNodeStyle.None">
            <summary>
            Default
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTreeViewCancelEventArgs">
            <summary>
            Summary description for FndTreeViewCancelEventArgs.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeViewCancelEventArgs.#ctor(Ifs.Fnd.Windows.Forms.FndTreeNode)">
            <summary>
            Overloaded. Initializes a new instance of the <b>FndTreeViewCancelEventArgs</b> class.
            </summary>
            <param name="node">node of the FndTreeView.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeViewCancelEventArgs.Node">
            <summary>
            Gets the tree node to be checked, expanded, collapsed, or selected.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeViewCancelEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the event should be canceled.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTreeViewEventArgs">
            <summary>
            Summary description for FndTreeViewEventArgs.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeViewEventArgs.#ctor(Ifs.Fnd.Windows.Forms.FndTreeNode)">
            <summary>
            Overloaded. Initializes a new instance of the <b>FndTreeViewEventArgs</b> class.
            </summary>
            <param name="node">node of the FndTreeView.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeViewEventArgs.Node">
            <summary>
            Gets the node of corresponding FndTreeView.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTreeViewNodeEditor">
            <summary>
            Summary description for FndTreeViewNodeEditor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeViewNodeEditor.#ctor">
            <summary>
            Initializes a new instance of the FndTreeViewNodeEditor class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeViewNodeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by GetEditStyle.
            </summary>
            <param name="context">An ITypeDescriptorContext that can be used to gain additional context information.</param>
            <param name="provider">An IServiceProvider that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>The new value of the object.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeViewNodeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the EditValue method.
            </summary>
            <param name="context">An ITypeDescriptorContext that can be used to gain additional context information.</param>
            <returns>A UITypeEditorEditStyle value that indicates the style of editor used by EditValue. If the UITypeEditor does not support this method, then GetEditStyle will return None.</returns>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndTreeViewNodeLabelEditEventArgs">
            <summary>
            Summary description for FndTreeViewNodeLabelEditEventArgs.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeViewNodeLabelEditEventArgs.#ctor(Ifs.Fnd.Windows.Forms.FndTreeNode)">
            <summary>
            Initializes a new instance of the <b>FndTreeViewNodeLabelEditEventArgs</b> class for the specified TreeNode.
            </summary>
            <param name="node">The tree node containing the text to edit.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndTreeViewNodeLabelEditEventArgs.#ctor(Ifs.Fnd.Windows.Forms.FndTreeNode,System.String)">
            <summary>
            Initializes a new instance of the <b>FndTreeViewNodeLabelEditEventArgs</b> class for the specified <b>FndTreeNode</b> and the specified text with which to update the tree node label.
            </summary>
            <param name="node">The tree node containing the text to edit.</param>
            <param name="label">The new text to associate with the tree node.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeViewNodeLabelEditEventArgs.Node">
            <summary>
            Gets the tree node containing the text to edit.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeViewNodeLabelEditEventArgs.Label">
            <summary>
            Gets the new text to associate with the tree node.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndTreeViewNodeLabelEditEventArgs.CancelEdit">
            <summary>
            Gets or sets a value indicating whether the edit has been canceled.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.Form1">
            <summary>
            The Form used for FndTreeNodeCollectionEditor.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.Form1.#ctor">
            <summary>
            This Form is used as a Layout editor for FndTreeNodeCollectionEditor class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.Form1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.Form1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.TreeViewComboBox">
            <summary>
            Represents a ComboBox which shows images in DropDown List in FndTreeView.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.TreeViewComboBox.#ctor">
            <summary>
            Initializes a new instance of the FndTreeViewComboBox class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.TreeViewComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Raises the DrawItem event.
            </summary>
            <param name="ea">A DrawItemEventArgs that contains the event data.</param>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.TreeViewComboBox.ImageList">
            <summary>
            Gets or sets the ImageList that contains the Image objects used by the FndTreeViewComboBox.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.TreeViewComboBoxItem">
            <summary>
            Represents a ComboBoxItem for FndTreeViewComboBox.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.TreeViewComboBoxItem.#ctor">
            <summary>
            Initializes a new instance of the FndTreeViewtComboBoxItem class.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.TreeViewComboBoxItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FndTreeViewComboBoxItem class with the specified text.
            </summary>
            <param name="text">The Text for the ComboBoxItem item.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.TreeViewComboBoxItem.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the FndTreeViewComboBoxItem class with the specified text and imageIndex.
            </summary>
            <param name="text">The Text for the ComboBoxItem item.</param>
            <param name="imageIndex">The imageInex for the ComboBoxItem item.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.TreeViewComboBoxItem.ToString">
            <summary>
            This member overrides Object.ToString.
            </summary>
            <returns>The Text associated with the ComboBoxItem.</returns>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.TreeViewComboBoxItem.Text">
            <summary>
            Gets or sets the text associated with the ComboBoxItem.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.TreeViewComboBoxItem.ImageIndex">
            <summary>
            Gets or sets the ImageIndex associated with the ComboBoxItem.
            </summary>
        </member>
        <member name="T:Ifs.Fnd.Windows.Forms.FndWhatsThis">
            <summary>
            "What's this" help window.
            </summary>
        </member>
        <member name="F:Ifs.Fnd.Windows.Forms.FndWhatsThis.CaptureMode">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.#ctor(System.Windows.Forms.Form)">
            <summary>
            Creates a WhatsThis control.
            </summary>		
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.#ctor(System.Windows.Forms.Form,System.Windows.Forms.Control)">
            <summary>
            Creates a WhatsThis control, used from dialogs and wizards.
            </summary>
            <param name="currentForm">Current form</param>
            <param name="control">Parent Control</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.#ctor(Ifs.Fnd.Explorer.Interfaces.IFndExplorer)">
            <summary>
            Creates a WhatsThis control.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.#ctor(Ifs.Fnd.Explorer.Interfaces.IFndExplorer,System.Windows.Forms.Control)">
            <summary>
            Creates a WhatsThis control, used from AF dialogs and wizards.
            </summary>
            <param name="fndExplorer">Current explorer</param>
            <param name="control">Parent Control</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.Show(System.Drawing.Point,System.String)">
            <summary>
            Show the popup window.
            </summary>
            <param name="target">Position of the popup window.</param>
            <param name="info">Rich text to display.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.Show(System.Windows.Forms.Control)">
            <summary>
            Show the popup window.
            </summary>
            <param name="ctrl">Control to show Whats This for.</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.MaxSize(System.Drawing.Point)">
            <summary>
            Calculates the maximum size for WhatsThis.
            It is currently set to 70% of the available Working Area.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.CalculateSize(System.String,System.Drawing.Point)">
            <summary>
            Calculates the desired size for a message.
            The text is really in rtf format so the calculation is adding some marings.
            </summary>
            <param name="message">The message</param>
            <param name="target">Point where the message should be displayed.</param>
            <returns>The calculated size</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.GetLayeredContext(System.String)">
            <summary>
            Picks up Features from a context expression which have been Layer Customized, and adds the corresponding Original Features into the context
            </summary>
            <param name="context">A comma delimeted Unprefixed context expression</param>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.CreateWhatsThisSection(System.String,System.String)">
            <summary>
            Concatenates a Display Name and it's associated What's This.
            </summary>
            <param name="displayName"></param>
            <param name="whatsThis"></param>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.richTextBoxWhatsThis_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Even if the user has clicked in the text box, ESC should close the window.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overriden. see <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)"/>
            </summary>
            <param name="e">an object of <see cref="T:System.Windows.Forms.MouseEventArgs"/> class, containing event data</param>
            <remarks>This method is overriden to performs necessary UI updates.</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.OnDeactivate(System.EventArgs)">
            <summary>
            Overriden. see <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)"/>
            </summary>
            <param name="e">an object of <see cref="T:System.EventArgs"/> class, containing event data</param>
            <remarks>This method is overriden to performs necessary UI updates.</remarks>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.BottomLevelControl(System.Windows.Forms.Control)">
            <summary>
            These controls have children, but WhatsThis is connected to the parent.
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.ShowWhatsThisText(System.Drawing.Point)">
            <summary>
            Show Text Method
            </summary>
            <param name="pt"> point</param>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.GetInstanceName(System.Windows.Forms.Control,System.Object)">
            <summary>
            Searches for the given object as a member of the declaring control, either as a field in the type,
            or as a member variable that's part of the Controls collection.
            </summary>
            <param name="declaringControl">The parent control that (likely) contains the object to search for.</param>
            <param name="variableObject">The object to search for</param>
            <returns>The field name or member variable name, of the object in the containing control, or null if it's not contained.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.GetContext(System.Windows.Forms.Control)">
            <summary>
            Get the context for a given control, which is either the typename (e.g.: cChildTable subtype) 
            or the name of the parent form (e.g.: cChildTable instance added to a form).
            </summary>
            <param name="declaringControl">The control to get the context for</param>
            <returns>The context for the control.</returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.GetWhatsThis(System.Windows.Forms.Control,System.Object)">
            <summary>
            Gets the What's This text.
            </summary>
            <param name="declaringControl">The control declaring the variableObject</param>
            <param name="variableObject">The object within the declaringControl which the user clicked on</param>
            <returns>The translated text. </returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.FindConnectedLabel(System.Windows.Forms.Control,System.Windows.Forms.Control)">
            <summary>
            Check in this container and all children if there is a FndLabel
            that has this control as OwnerControl or there is a label with TabIndex closest before the control.
            </summary>
            <param name="container"></param>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Ifs.Fnd.Windows.Forms.FndWhatsThis.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndWhatsThis.NoTopicExist">
            <summary>
            Get the no topic exists help message. 
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndWhatsThis.Capture">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ifs.Fnd.Windows.Forms.FndWhatsThis.Explorer">
            <summary>
            Explorer property.
            </summary>
        </member>
    </members>
</doc>
